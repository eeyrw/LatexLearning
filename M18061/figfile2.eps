%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: figfile.eps
%%Creator: Adobe Illustrator(R) 22.1
%%For: Evrim Selin Altinkaynak
%%CreationDate: 3/31/18
%%BoundingBox: 0 0 773 597
%%HiResBoundingBox: 0 0 772.0450 596.6197
%%CropBox: 0 0 772.0450 596.6197
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.1.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 22.1.0 x312 R agm 4.7767 ct 5.4352
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 100 8
%%BeginData: 9636 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD62FF7D7DFFA8FD09FF7DFD07FFA8A87DFD62FFA9FFA9FFA8FF52
%5227522752277D52FD042752272727A82752275227522727277DFD64FFA8
%A8FD057DA87D7D7D527D7D7D527DA8527DA8FD047D527D7DFD64FFA8FD10
%FFA8A8FD4CFFA8FD1BFFCAFFCAFFCAFD047DA8527D52A87DA8A8A87DA852
%7D52A87D7DFD09FF527D52A8FD3CFF7D52527DFD1AFFCAFFFFFF7DA82727
%2752275227277D7DF8525252FD0527A8FD08FF7D27527DFD3CFF7D525252
%FD1FFFA8FFA8FFA8FFA8FFA8FF7DA8A8FFFFFFA8FFA8FD0AFF7DA87DFFA8
%FFFFFFA8FD37FFFD04A8FD40FFA852A8A87DFD3CFFA8A8FD3DFF52527DFF
%52A8A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FD08FFA8527DFF
%FFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FD06FF7D52FFFF
%FFA8FD3BFF527DA8FFFFFFA8FD31FFA8FD06FF7D27A8FFFFFFA8FD1FFFA8
%A9A8A97EA8A8A87EA8A2A8A2FD06A8FD08FF7D27A8FD04FFA8FD21FFA9FF
%AFFFA8FFA8FFA8FFA8FFA8A9A8A8A8FD05FFA852FFFFFFA8FD17FFAFFFA8
%A8A2A9A8A27ECAC4CAA8CBCAFFA9FFFFFFCBFD0FFF7D27A8FFFFFFA8FD1B
%FFAFFFFFFF84A8A1FD04A8FFA8CBA8FFA8CBA8FFA8FFA8FD06FF5227A8FF
%FFFFA8FD13FFA9A97EA1A2A8A1CAA8CBCAFD13FFA8FD08FF7D27A8FD1AFF
%AFAFA9A87DA1A2A2A1CBCAFFCAFD0FFFA8FD04FFA85227FFFFFFA8FD12FF
%AF84A19ACACAFD23FF7D27A8FFFFFFA8FD14FFAF84A2A1CAC3CACAFD15FF
%A8FD06FF7D5252FFFFFFA8FD10FFAF76C3C3FD1DFFA8FD08FFA852FFFFFF
%27A8A8FD11FF8484A1C3C3FFCAFD19FFA8FD05FFA852FFFFFFA8FD10FFA9
%53CAFD28FFA87DA8FFA852A8FD11FFAF7EC3FD1DFFA8FD06FF5227A8FD12
%FFA89ACAFD20FFA8FD07FFA85227A8FD04FFA8FD0FFFA97DC3FD25FF7D27
%FFFFFFA8FD0DFFCAA1A1FD2BFF7D52A8FFFFFFA8FD10FFA2A2FD1FFFA8FD
%06FF7D52A8FF7DA8A8FD0BFFC3A1A1FD23FFA8FD09FFA8FD05FFA8FD0DFF
%A8A1C3FD21FFA8FD05FFA827FFFF7DA8FD0BFFC3A184FD2DFFA852A8FFFF
%FFA8FD0DFFC3C3CAFD21FFA8FD07FFA8FFFF52A8A8FD09FFCABD36AFFD24
%FFA8FD08FFA827A8FD10FFC3A1A8FD23FFA8FD05FFA827FFFFFFA8FD0AFF
%CAA8FD2FFFA852A8FFFFFFA8FD0BFFC3A2A9FD23FFA8FD06FF7D27A8FFFF
%FFA8FD08FFCA7DA9FD26FFA8FD07FFA87D27A8FD04FFA8FD09FFCABD5AAF
%FD24FFA8FD05FFA852FFFFFFA8FD08FFCAA1AFFD30FF7D52A8FFFFFFA8FD
%0AFFCAA2FD25FFA8FD06FF5227A8FD0AFFC3C3A8A8FD27FFA8FD08FF7DF8
%A8FD04FFA8FD09FFA8AFFD2CFF7D27FFFFFFA8FD07FFBCA985FD31FF5227
%A8FFFFFFA8FD09FFC3A9AFFD25FFA8FD06FF7D27A8FFFFFFA8FD04FFCAC3
%A85AFD29FFA8FD08FFA827A8FD04FFA8FD07FFBCC384FD27FFA8FD04FFA8
%7D52FFFFFFA8FD04FFC3BCCA84FD33FF7D527DFFA87DA8FD07FFCACA84FD
%27FFA8FD06FF5227A8FFFFFFA8FFFFCAB5CB84AFFD2AFFA8FD08FFA8277D
%FFFF52A8A8FD05FFCAC38485FD27FFA8A8FD05FF7D27A8FD06FFBCCA84A9
%FD34FFA852A8FFA87DA8FD06FFCAA88BFD28FFA8FD06FF7D527DA852FFA8
%C3937736AFA8FD2BFFA8FD08FFA8F87DFD04FFA8FFFFFFCAC3A185A8FD29
%FFA8FD05FFA852FFA87DA29A93A885FD2DFFA8FD09FFA87D7DFFFFFFA8FD
%04FFC3CAAFA9FD29FFA8FD06FF7D277DFFA8A294A8AFFD2FFFA8FD08FFA8
%52FD05FFA8FFFFCAC3AF84FD31FFA87DA8FFFFA1C3FD3AFF7D277DFFFFFF
%A8FFFFFFA1AF84FD2BFFA8FD06FFA8A8FFFFFFA2A1FD31FFA8FD08FFA827
%52FD04FFA8A19A8484FD2DFFA8FD05FFA827FFFFFFA8FD3BFFA827A8FFFF
%FFA89A94FFAFFD2DFFA8FD06FF7D2752FFFFA8A8FD31FFA8FD08FF7D27A8
%FFFFFFA19AFD31FFA8FD05FF7DF87DFFFFA8FD3BFFA852A8FFFFFFA1CAFD
%30FFA8FD06FF7D52A8FFFFA8A8FD31FFA8FD08FFA827FD04FFA8A8FD31FF
%A8FD05FFA852FFFFFFA8FD3BFFA852FD04FFA8FD31FFA8FD06FF7D52A8FF
%FFCACAFD31FFA8FD08FFA852A8FFFFFFA8A8FD37FF7D52FFA87DA2FD3BFF
%5252A8FFA8A8A8FD31FFA8FD06FF7D52A8A8277DA8FFA8FFA8FFFD07A8FF
%A8FFA8FFA8FFA8FFA8FFA8FFFD07A8FFA8FFA8FFA8FFA8FFA8FFA8FFFD05
%A8FD09FF7DFFFF7D277DA8FFA8FFA8FFA8FFFD05A8FFA8FFA8FFA8FFA8FF
%A8FFA8FFFD07A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FD05FF5252
%FFFF7D52A8FD06FFA87D7D5252FD0FFFA8FD0452FD0FFFA8FD0452FD0BFF
%A87D52A8FD07FF7D7D5252FD0FFFA8FD0452FD0FFFA8FD0452FD05FFA8A8
%FFFF527DFD07FF527D2752A8FD0FFF52522752A8FD0FFF52522752A8FD0B
%FFA8527DFD07FF527D2752A8FD0FFF52522752A8FD0EFFA852522752FD09
%FFA8FD09FFA8FFA8FD11FFA8FD13FFA8FFA8FD0DFFA8FD0BFFA8FD0FFFA8
%FFFFFFA8FD0FFFA8FFFFFFA8FD17FFA8A8FD07FFA8FD09FFA8FD2FFFA8FD
%11FFA8FD29FFA852FD047DA87D7D527DA87DA8FFFD047D527DA87DA8FD2B
%FF7D7D52A87DA8FD057DA87DFF7DA87DA87D7D52A852FD26FF7D7D272727
%F82752F827275227527DFD0427525227F87DFD2BFF7D52272752FD052752
%27277D5227522727525227F8A8FD26FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFFFFFA8FD13FFA8FD1BFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FD10FFA8FFA8FD0BFFA8FD31FF7D7D277DFD3CFF7DA87DA8FD
%0AFFA852FD30FF7D525252FD3CFF525252A8FD08FFA8FF7D7DFD30FFFD04
%A8FD3CFFFD04A8FD07FFA87D527DFD77FFA8A87DA87DA852527DFD77FFA8
%7D7D7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0FFFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFCAFF84FFA8FFA8FFA8CAA8FD08FFA87D7DA8FD06FFA8FFFF
%FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FD0EFFA8A8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFAF84FFFFFF
%A8FFFD04CAFD0BFFA8FD41FFA8FD25FFAFFFA9FD05FFCAFFCAFFA8FD0CFF
%A8FD31FFA8FD0FFFA8FD23FFA9A9A8FD05FFCACACAFFFFFFA8FD0AFFA8FD
%2DFFCAFD13FFA8FD23FFA9AFFD06FFCAFD05FFA8FD0CFFA8FD2BFFCAFD05
%FFA8FD08FFA87DFD25FFA9AFA8FD07FFC3FD07FFA8FD0AFFA8FD19FFAFFD
%13FFCAFD0DFF7D27A8A87DA8A8FD1FFFAFAFAFFD07FFCACAFD06FFA8FD0C
%FFA8FD17FFA9FD13FFCAFD05FFA8FD08FF7D27A87D52277DA8FD1DFF84AF
%FD06FFCAC3CAFD08FFA8A8FD0AFFA8FD3BFF7D27A8A87D7DA8FD1EFFA9AF
%FD05FFCAFD0BFFA8FD24FFA9FD13FFCAFD05FFA8FD08FFA82752FD04FFA8
%FD1BFFA8AFA9FD05FFCAFD14FFA8FFFFFFA8FD3BFFA8277DFFFFFFA8FD1C
%FFA9AFFD05FFCAFD0DFFA8FD06FF7D27A8A827A8A8FD17FFA8FD13FFCAFD
%05FFA8FD08FFA827A8FD04FFA8FD19FF84AFFD05FFCAA1FD0FFFA8FD05FF
%7D27FFA852A8FD41FFA8FD19FFA9FD07FFCAFD0FFFA8FD06FF7D27A8FFA8
%FFA8FD17FFA8FD13FFCAFD05FFA8FD08FFA827A8FD1CFFA8FD05FFCAFFCA
%FD11FFA8FD05FF7D27FFFFFFA8FD3BFF7DF8A8FFFFFFA8FD17FF84FD06FF
%CACAFD11FFA8FD06FF7D52A8FFFFFFA8FD17FFA8FD13FFCAFD05FFA8FD08
%FF7D52A8FD04FFA8FD14FFAF84FD05FFC3CAFD14FFA8FD05FF7DF8FFFFFF
%A8FD3BFF5252A8FFFFFFA8FD13FFA9FFAFFD05FFCAFD15FFA8FD06FF5227
%A8FD1BFFA9FD13FFCAFD05FFA8FD08FFA85252A8FFFFFFA8FD11FFA9A9A9
%FFFFFFCAFFCACAFD1CFFA827FFFFFFA8FD3BFFA852A8FFFFFFA8FD10FFAF
%84FD05FFCACACAFD17FFA8FD06FF7D277DFFFFFFA8FD17FFA8FD13FFCAFD
%05FFA8FD08FF7DF8A8FFFFA8FFA8FD0DFFAFA9A8FD05FFCACAFD1AFFA8FD
%05FFA827A8FFFFA8FD3BFF7D52A8A8527DA8FD0DFFA9FFAFFD05FFCACAFD
%1AFFA8FD06FF7D52A8FFFFFFA8FD17FFA9FD13FFCAFD05FFA8FD08FFA852
%FF7D5252A8FD0CFFA8A9FD07FFCACAFD1AFFA8A8FD04FFA87DA8FFFFA8A8
%FD17FFAFFD13FFCAFD0FFFA87DA8FFA8FFA8FD0BFFA9AFFD07FFCACAFD1B
%FFA8FD05FFA82752A8A8F8A8A8FD17FFAFFD13FFCAFD05FFA8FD08FFA87D
%FD05FFA8FD09FFA8AFFD06FFC3CACAFD1DFFA8FD09FFA8A8FD17FFAFFD13
%FFCAFD0FFF7D7DA8FFFFFFA8FD09FFAFAFFD06FFCAFD1FFFA8FD22FFA9FD
%13FFCAFD07FFA8FD08FFA8F8A8FD04FFA8FD07FFA8AFFD06FFC3CAFD2BFF
%A8FD17FFA9FD13FFCAFD0FFFA852A8FFFFFFA8FD06FFAFA9FD07FFC3FD21
%FFA8FD0CFFA8FD15FFA9FD13FFCACAFD06FFA8FD08FF5227A8FD04FFA8FF
%FFFFA8FFA8FD05FFCACACAFD23FFA8FD0AFFA8FD3BFF7D27A8FFFFFFA8FF
%FFFFA9FD07FFCACAFD24FFA8FD0CFFA8FD15FFA9FD13FFCAFD07FFA8FD08
%FF5252A8FD06FF84FD07FFCACAFD26FFA8FD0AFFA8FD41FFA8FF85FD07FF
%CACAFD26FFA8FD0CFFA8FD15FFA8FD13FFCAFD07FFA8FD0EFFA8A1CBCACA
%CAFFCACACAFFCAFD27FFA8FD0AFFA8FD15FFA9FD13FFCAFD17FFA1A2FD30
%FFA8FD0AFFA8FD15FFA9FD13FFCAFD09FFA8FD0DFFA8A2A8FD3AFFA8527D
%CBA8CAA8CAA8CAA8CAA8CAA8CAA8CAA8CBA8CAA2CACACAA8CACACAA8FD04
%CAFFCAFFFD04CAA1FFAFFFA8FFA8FFA8FFA8FD0DFF7D52A8FFA8FFA8FFA8
%FFA8FFA8FD05FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFFFFFA8
%FFFFFFA8FFA8FFA8FFFFFFA8FD09FFA8527D77FFA8FFA8FFA8FFA8FFA8FF
%A8FF7DA17D7D7DFFA8FFCAFFA8FFCAFFA8FFCA7D767D76A8CAFFCAFFA8FF
%A8FFA8FFFFFF527D7D7DA8FD0AFFA8277D7DFFA8FFA8FFA8FFFFFFFD057D
%FFA8FFA8FFA8FFA8A87D7D7DFFFFFFA8FFA8FFA8A87D7D7DA8FFFFA8FFA8
%FFFFA8527D7D7DFD09FF7D52A8FD0CFFA8527D527DFD0CFF7D5227277DFD
%0CFF7D522727A8FD0CFF527DFD09FFA82752277DFD08FFF8522752A8FD07
%FF525227277DFD07FF7D27272752FD09FFA87DFD0DFFA87D7DA87DFD0CFF
%FD047DA8FD0CFF7DA87D7DA8FD0CFFA87DFD09FFFD057DFD07FFA8A87D7D
%7DFD07FFA8A87D7D7DA8FD07FFA8FD047DFD98FFA8FD11FFA8FD2DFFA87D
%7DFFA8FFFFFFA8A87DFFA8FFFFFFA8FFA8FF7DFFFFFFA8FD26FF7D7D52A8
%7DA87DA87D527DA87DFFA87D7DA87D7D52A87DA8FD29FFA87D5227FD0552
%F8FD0452A827FD0552272752FD27FF7D52FD0827525227527DFD05275227
%277DFD29FFA8FD057D527D527D527D7D7DA87D52FD057D527DFD28FFA8FF
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FDD1FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161356, 2017/09/07-01:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreateDate>2018-03-31T16:24:18+08:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-31T16:24:18+08:00</xmp:ModifyDate>
         <xmp:CreatorTool>Adobe Illustrator CC 22.1 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>200</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAyAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqpNBKWJFxIoPRQI6D70JyV+TGvNh35geVNc1uf&#xA;Q0sdVm0+3trmWS9u4p/q8wVoGSJYgq8HYzFacwQPA9MBKQGH2nl//nIW0uYp5tfsxC8ttPqTObQC&#xA;QixjS4UUs14r9ajotCD6f+V8WBKY3ek/n++j2cFvr+n/AKZR7oahPEsKxUkaEW9EktZT8Ceqw7/Z&#xA;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&#xA;8Bi4EOsfCQ0q4PxE7Yq9axV2KuxV2Kv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2018-03-31T16:24:18+08:00</xmp:MetadataDate>
         <pdf:Producer>PSNormalizer.framework</pdf:Producer>
         <dc:format>application/postscript</dc:format>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>903.000000</stDim:w>
            <stDim:h>603.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPSMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.3x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Times New Roman.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:ae34ec20-beb7-413c-95e5-58b3443f2e8c</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:ae34ec20-beb7-413c-95e5-58b3443f2e8c</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:ae34ec20-beb7-413c-95e5-58b3443f2e8c</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ae34ec20-beb7-413c-95e5-58b3443f2e8c</stEvt:instanceID>
                  <stEvt:when>2018-03-31T16:24:18+08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.1 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -596.62 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 596.62 li
772.045 596.62 li
772.045 0 li
cp
clp
58.9287 55.9136 mo
361.929 55.9136 li
361.929 261.914 li
58.9287 261.914 li
58.9287 55.9136 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
.5 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
58.9287 261.914 mo
361.929 261.914 li
58.9287 55.9136 mo
361.929 55.9136 li
58.9287 261.914 mo
58.9287 258.884 li
119.529 261.914 mo
119.529 258.884 li
240.729 261.914 mo
240.729 258.884 li
361.929 261.914 mo
361.929 258.884 li
58.9287 55.9136 mo
58.9287 58.9438 li
119.529 55.9136 mo
119.529 58.9438 li
240.729 55.9136 mo
240.729 58.9438 li
361.929 55.9136 mo
361.929 58.9438 li
0 0 0 .851 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 71 /G put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 117 /u put
def
/FontBBox {-568 -307 2000 1007} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
13 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
/space <1C60D8A8C9B8707C25> |-
/G <1C60D8A8C9B6079F6D6E36005945EC7274CF8CD5EF5B42D280E6D8A4F608
6ADC4B88F4BA16F6A237691F3F760A6129A67DCE9322616B1D7BB21115511238
376B94C01432A999E95ACF02B9743B28C7A3C8109C25013AEA47EC71807E3BFE
6B26986496C6B96A2458AF130FF55F6939E40BA894719E24A717462CC4A00B11
ADE5809AB1E0B4D7805897BE50087CD64F5AEA7744526E08B0D657538988C41B
FE39A8735842D620E001E1A863F676AFB361CF4C81718CBC4A0CC5AC0D51A34A
CA7D8BBE5B5D6E8D466D858B118FBBA2161DB0F7E151EB0958EF2C5C3F> |-
/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550D
EC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B
177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB33
3E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB
0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70
BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895
DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737
B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272E
F1EF1464C3F0D45D7CBB8749AF571E09> |-
/b <1C60D8A8C9B7A73DB90B311171EB67EB8746E2EC8FC994CCA7A632F7C7E8
F4A5D28D725796F2BC8526696060F460C892CC5686CD97F757C6EFB11E42DD9A
F110BE11F49DAEFA324F62E3046D4E2410C0923EDB87332B0381414594D39992
4398EF0A71772EF0EFEA72F5940C288418E4FCC7A2DE1E6A1AEA513FBDA0D660
3C38C9676D3489A418D7163D5E50FB679144E02901D98844D885CA3AAF379A83
F23AED1F56FC130F21> |-
/e <1C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEA
D3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15
F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA
0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984
A59E1CFFFD06EA629758085868D3F5F7204292> |-
/i <1C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D
9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F9
8C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365
B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090
E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB
8CA3E9F85837FAC6> |-
/m <1C60D8A8C9B6FF86F5D75501F5946D14C10E01941D6F8F408CE11167932D
24264D7EFCAC2AE86125FDD757A8758D869BC4213413CCB2A6A255440BA1816E
9DC45844CC319542821B45F7B81EE7391A0EDD08008613940B7EF538F41747A2
556BE4D609FA0E86A3720064373B35B3C09F29E00670FDA88D75DD91439C68FD
574D15688B76675600DF49F10BE44872E462D2FA9EDC453EEFA6E997D8F24910
7C6F71C5B180EF91CFB08123DB5F12D5248BB769BCDBF86D09B3C1EE1D61D18C
E6632A82186FF826CE8FF5C9F24094455D2446DAB1258D7CEF6AB64018AE9556
17323D2765A0C9FC9EE9EFC157214A4EF1A088A6CBE09BD12BF0618C85527D98
7ABAA0F84BBDB3F467CD6D1AFC5F01D6CD6E91196626F968CD9EC222C872FAFE
C679ED97966B06F7D45253DA82AACAAC774A43132A3F4B4FB40FD07B5AFDAE82
B335C3B8E42DF7C6FCB1E78E5819FAE1E5B06EBADF2F71F0A59372AEE76B5179
96> |-
/n <1C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC
81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D
4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF
60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B2800261
30687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E
277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0
027198438FE663C2EACF82CEB86F7C727594> |-
/o <1C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD441
6250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDAF9
96A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA4367
02294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B68D
9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |-
/r <1C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE
6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983
E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53
A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455
AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C
360275B503E4954E912CD342> |-
/t <1C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED29448
713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC43
DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E798B
36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |-
/u <1C60D8A8C9B7A73DB9860E0681DA8AEA1E5FBC1C72A452614FEB33CC58A1
99CCF544A550BDEE35652D618DE4A02AA9CF0753ADA232102DC8DC25CB958152
D1B74BC447B68C074C25C2126470565A20B42A419CDD0C7A1DA63C6A764D555B
867A9BE961ADBD0AF5B2007F47FCC9435F8B51D3F3A5D83941DD57A0C4D32E16
9A6BACC26F8AD3C9372F1114911D1D3F3FB2725FADBF9F529AA2CFB178B79F97
520325221F3417C7781EB09765> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WOOECZ+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/WOOECZ+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 38{/.notdef}rp /G 25{/.notdef}rp /a /b 2{/.notdef}rp 
/e 3{/.notdef}rp /i 3{/.notdef}rp /m /n /o 2{/.notdef}rp 
/r /.notdef /t /u 138{/.notdef}rp]
WOOECZ+TimesNewRomanPSMT nf
WOOECZ+TimesNewRomanPSMT*1 [18 -2.20436e-15 -2.20436e-15 -18 0 0 ]msf
135.477 302.4 mo
(Generation number)
[12.999 7.98926 9 7.98926 5.99414 7.98926 5.00098 5.00098 9 9 4.5 9 
9 14.001 9 7.98926 0 ]xsh
58.9287 261.914 mo
58.9287 55.9136 li
361.929 261.914 mo
361.929 55.9136 li
58.9287 261.914 mo
61.9585 261.914 li
58.9287 193.247 mo
61.9585 193.247 li
58.9287 124.581 mo
61.9585 124.581 li
58.9287 55.9136 mo
61.9585 55.9136 li
361.929 261.914 mo
358.899 261.914 li
361.929 193.247 mo
358.899 193.247 li
361.929 124.581 mo
358.899 124.581 li
361.929 55.9136 mo
358.899 55.9136 li
0 0 0 .851 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
WOOECZ+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B81F2C3AC09B674C4ECE2BEF4D70AD3508D915EA9A
E12419376F6EEF231ECE8179CA4531F29291ACACE060AEF98AD6F2FFF2BEA533
946FFA1C8BC3953D72A31BB8ABD9782D71B2146F964D99646263E2D414F84FA0
49D36B9B13B7F6C8AA7A4A5EB0> |-
/parenright <1C60D8A8C9B81F2C3CA029BC286E27661FD7F18B990CFF4A0AF
58404A2F35E11D14FBA406192D392AD203A879E34B8FA3132863211808E5BD63
BDAA607B8E04E23E92C61AAA8B57E5E7609689020D20EB927A1EC6CC0BC06B54
0A016D558248DC4A3E8183F5F> |-
/zero <1C60D8A8C9B7A73DAAFDCA97EBBC8D8E35A41D9404C5638B059E1CA50
B5366543C3D584AD9E19987218AC5999BB0F2477597AB6F8DD868788C8440CBF
4A338EF64ACD9BF2268656755741DB71FD86387D4A7AA1CFD19937BFD209E4FB
CD1952717C8CF8C0555CB2D0238DC43B2A6A2DE4D7366DB210D2673870D0B0C5
8344E6AEF91B916BAAEAEF37B22F065E870AFE6638E56D0B4AE01785D59EE234
02242D396440157FC51> |-
/one <1C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F5
89D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C0272
0FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF
41DB28C0847307B8DCBC66> |-
/two <1C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B
4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25
003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0
F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11E
C41D90433CE0F55F0A42A96AF852FD50FA> |-
/three <1C60D8A8C9B7A73D83638F79AE86E17D4CE334FAA90E146D21CDA0FE
B71815E9499D6C6A6E581E78F34038D792771470EBF894DABD777E9B4FDE68E7
E1544BCF1EFB2DCE59357B716B4D2ADF3EAC3A9FF8BD07EC79AF5536B9B74185
F8F7489AD909079119E88D2BB755D6F6AC02C01BDFADB347EC55DAC49C8BB047
661CC7AAA3BDC1DB8E01EC56137B53ED31B24F4502353853D049BB0515CA4217
D33D10484933F30AD1EAA43CFDF00AFA5462EE9B1772CE60A3392B8D9C1A3598
CF2273E36A1FF3A58B2E24B1EACE5E34650257902678998DAAFF235764CCCA14
3A> |-
/A <1C60D8A8C9B6079F6D0C3DD1DA701F2FEF50BE2CCF679467EAB463D54C49
5B1FC98737C4805A67EB9B211579E256E1BCD120087B7083980EFC748D95F15A
9738703A6CB4125517112E8D63595864B93D16C7B325AB1759098D24D8A43A63
AEECA533864B64013C499C4207455D5210408E58672A172F78CB14D739850711
02DFA93B6532> |-
/c <1C60D8A8C9B77FE2C180CE42B4078449B9D767742AB4CF5971DFD438ECC5
4400989182964B065BACA704BA363536AC987FC433F59A23A3DC16CBD969F42A
6041BB8327C43B9105FC5DF44A0437E9E26FE545542A602D007FC6A926264F9C
2999730E7919239B324086FEA852156F456647AA0692084759C352D699897179
9F4BEF3EFB7DE91C98C83C567200278FF2145E16D28EDE7556C59DB204> |-
/g <1C60D8A8C9B7A73DAC44F2C448ECAF253E44055AA4AFC4D4E618BBF7F608
47F4AD57852D125F52503D138EEBB5C35DB7E6FF089D85EF3D59177D6853B7FF
4DCA48A2C6450DAF6AE7485D918680B6246955433B7E96C0D52B86F6985D93AE
A8FD99F7CE5A6EDF9F82F3DCD54C24AC7F5725E8D752728B16161496E9D02EA7
07BCC03E7CE1BDA2E3632B4A11707F59DF2FD8556EC51A6594DBA10EC63EB7A8
585255CC0C8C8B32CD6316A41829AE725CE606F4A4FD4DA668556D79F4AC25BF
9E697A5DB9F54B573E1EAA6D791100EAD10708C7E706E8CBDD596589510D4EA4
5E3CA12E8144CF2A4E025D5293F77BF25BA77276DF7C97999133B17612ABFFD7
0E77479B9C8ABBB3A51D3A6F6F66CA99610B1A23618D13E1A07B26D29ACFC819
1E5B2829F3C990A5C474E53FC8B282F11A7FFA86D56BD2349AEC811B22D30027
81921B9EDDEAA1B62C5F206266BA751F865F9A5F5AF517BC35F6F732012015D0
BB42652388A219FCF002C2C0335D2D190C0C425C4FA28367480051E56A90DD46
F1C707> |-
/l <1C60D8A8C9B854D0F40B290C0C99C039EA88FDD293C1FEAB15D2F6B8C430
4B80428A9C9B5571B0EE47CC29A6D67DEE51ABBBE57F6DDF0C02037EE8B6828D
244FB880634A92D947174D08130E6E2CF978B5067AA82A4CABC55E600FCE5527
D6441CE02F5A28D63A618F> |-
/p <1C60D8A8C9B7A73DDE03BEEA75B31F61E78B8C94AAF630ACAE1A607BD40E
B48302A40F17E763F71E8B5595B8EEEBB33C0827EEA0DE5370DD4C7A09244048
D0DA814D6E79BAC2B8E456D2F119496FF35E5A13F4B8F71ECD895B10E20FBAC6
66023D0941B5A0FF139CBD18745BC2892DD91EE541EAD2B54AF0839C3327F759
04A81A3805CFC7AF83735A7079B305271753A14327F3CB693ACCFE5C9D6A3B84
31B357819DFFAD81BD2A60573E4CA4C48EC0A5E07291768D829E6A70067C076E
94545FD4D8E2BB7431617263A47DB04F0B8630D6AB06FF2DD1B1F383A59D02DF
1C7730E7CC0F462D79552DFA> |-
/v <1C60D8A8C9B7A73DDA3AD4E30B5CCD7D3C12F7959C83D9C808662F1D2940
3E3640D88B6D61CC1EF17C120CDCE65E70C4FE9E153F8E52BB6A45EF1A33FF33
B350E779BE70BFD66B1893DAD63FDF011F2039FF0D075853D9D0E3D26BA0EDAE
DA247A4C2489AC431F6D923096DA608667B0FA6E60F963DA8A46029578956D98
258ABD433E9E> |-
/x <1C60D8A8C9B7A73DD670F5272DD145294083C4293196A1DBA349EF195DAA
DD76F8FA5D95CD31B7A1C2B32491F1D3BDEAF32234D0995EB67A2BEF06777B5B
8AB01E1FC457D70FEE563CF2C0C851F3CC8B137B00E8CC0DDAE3A128D9A2319F
3FF89B241236A311487E7B00ABDB18C5C11783A73226CB9112660CA259881698
31DBD8D37F0570522652B666847FB24934B522403DA00EF77D9BF6494155BEAC
D6C4576905B10BBFDD62A70CAEE193F073806BE591E56E5DC8424D64A808D752
8EBE8928C7E8D537D6DCC6918CF06863B4A936B7CA4331A2F9> |-
/y <1C60D8A8C9B7A73DDE03E4B644C159EB8B647E016C26B087177A3C5BC5BA
F02161182070C8A4222C2E1ED9B95B756DF22232FA7BE5897B7C6D574795119A
3B50894B8B0E1A184B7636697D129D88C76A3FD42BABE719D85F7DC372AB50B8
B16D988DA863EE6A5B7454A406C9D5E815158A5786509E6DF27377A83F3454DD
6905EA3123CBA5BA0D4772C12767864CF2C5FEDE2AFF05D3CC0534D74E6AE9DB
F9F3B49677449A761BE771C9C1AB2D4DC994988233EE24B9E175796C6F13518A
71BC990F312D4821883A95164BCE1683B85434AFA8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WOOECZ+TimesNewRomanPSMT /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 65 /A put
dup 99 /c put
dup 103 /g put
dup 108 /l put
dup 112 /p put
dup 118 /v put
dup 120 /x put
dup 121 /y put
pop
%ADOEndSubsetFont
/WOOECZ+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three 13{/.notdef}rp /A 5{/.notdef}rp /G 25{/.notdef}rp /a 
/b /c /.notdef /e /.notdef /g /.notdef /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/.notdef /t /u /v /.notdef /x /y 134{/.notdef}rp]
WOOECZ+TimesNewRomanPSMT nf
WOOECZ+TimesNewRomanPSMT*1 [18 -2.20436e-15 -2.20436e-15 -18 0 0 ]msf
46.1289 267.413 mo
(0)sh
46.1289 198.746 mo
(1)sh
46.1289 130.079 mo
(2)sh
46.1289 61.4116 mo
(3)sh
WOOECZ+TimesNewRomanPSMT*1 [-1.10218e-15 -18 -18 1.10218e-15 0 0 ]msf
36.1284 274.913 mo
(Average population complexity)
[-12.999 -9 -7.98926 -5.99414 -7.98926 -9 -7.98926 -4.5 -9 -9 -9 -9 
-5.00098 -7.98926 -5.00098 -5.00098 -9 -9 -4.5 -7.98926 -9 -14.001 -9 -5.00098 
-7.98926 -9 -5.00098 -5.00098 0 ]ysh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
0 43.2373 mo
(\(a\))sh
0 lc
59.5347 261.914 mo
60.1406 193.247 li
.872374 .519982 0 0 cmyk
@
1 lc
60.1406 193.247 mo
60.7466 218.424 li
61.3525 189.813 li
61.9585 200.114 li
62.5649 205.835 li
63.1709 197.825 li
63.7769 202.403 li
64.3828 200.114 li
64.9888 195.536 li
65.5947 195.536 li
66.2007 194.392 li
66.8066 190.958 li
67.4126 186.38 li
68.0186 190.958 li
68.6245 198.97 li
69.2305 194.392 li
69.8369 193.247 li
70.4429 193.247 li
71.6548 204.691 li
72.2607 197.825 li
72.8667 188.669 li
73.4727 189.813 li
74.0786 193.247 li
74.6846 195.536 li
75.2905 195.536 li
75.8965 189.813 li
76.5029 192.103 li
77.1089 192.103 li
77.7148 190.958 li
78.3208 194.392 li
78.9268 190.958 li
79.5327 200.114 li
80.1387 194.392 li
80.7446 195.536 li
81.3506 190.958 li
81.9565 182.947 li
82.5625 194.392 li
83.1689 187.524 li
83.7749 193.247 li
84.3809 189.813 li
84.9868 193.247 li
85.5928 184.092 li
86.1987 192.103 li
86.8047 193.247 li
87.4106 187.524 li
88.0166 193.247 li
88.6226 187.524 li
89.2285 193.247 li
89.835 185.235 li
90.4409 186.38 li
91.0469 184.092 li
92.8647 187.524 li
93.4707 186.38 li
94.0767 188.669 li
94.6826 180.658 li
95.2886 179.514 li
95.8945 180.658 li
96.5005 182.947 li
97.1069 188.669 li
97.7129 182.947 li
98.3188 184.092 li
98.9248 176.081 li
99.5308 179.514 li
100.137 180.658 li
100.743 182.947 li
101.349 179.514 li
101.955 173.792 li
102.561 169.213 li
103.167 168.07 li
103.772 174.936 li
104.379 178.37 li
104.985 172.646 li
105.591 171.502 li
106.197 171.502 li
106.803 165.781 li
107.409 169.213 li
108.015 164.636 li
108.621 165.781 li
109.227 163.492 li
109.833 165.781 li
110.438 169.213 li
111.045 165.781 li
111.651 161.203 li
112.257 157.77 li
112.863 168.07 li
113.469 161.203 li
114.075 163.492 li
114.681 162.347 li
115.287 157.77 li
115.893 158.914 li
116.499 162.347 li
117.104 155.48 li
117.711 157.77 li
118.317 154.335 li
118.923 147.47 li
119.529 152.046 li
120.135 152.046 li
120.741 156.625 li
121.347 153.191 li
121.953 147.47 li
122.559 147.47 li
123.165 146.325 li
123.771 147.47 li
124.377 146.325 li
124.983 149.757 li
125.589 138.313 li
126.195 144.036 li
126.801 140.603 li
127.407 145.181 li
128.013 139.458 li
128.619 140.603 li
129.225 136.024 li
129.831 139.458 li
130.437 137.169 li
131.042 132.592 li
131.649 130.303 li
132.255 132.592 li
132.861 130.303 li
133.467 129.158 li
134.073 127.25 li
134.679 131.447 li
135.285 132.592 li
135.891 126.87 li
136.497 131.447 li
137.103 123.436 li
137.708 131.447 li
138.315 122.292 li
138.921 132.592 li
@
138.921 132.592 mo
139.527 125.725 li
140.133 126.87 li
141.345 120.002 li
141.951 120.002 li
142.557 122.292 li
143.163 120.002 li
143.769 122.292 li
144.375 115.424 li
144.98 111.992 li
145.587 117.713 li
146.193 115.424 li
146.799 115.424 li
147.405 114.281 li
148.011 115.424 li
148.617 110.847 li
149.223 113.136 li
149.829 110.847 li
150.435 110.847 li
151.041 109.703 li
151.646 110.847 li
152.253 108.558 li
152.859 108.558 li
153.465 107.414 li
154.071 109.703 li
154.677 106.27 li
155.889 101.691 li
157.101 101.691 li
158.313 106.27 li
158.919 106.27 li
159.525 102.835 li
160.131 105.125 li
160.737 100.546 li
161.343 102.835 li
161.949 98.2573 li
162.555 101.691 li
163.161 99.4028 li
163.767 95.9697 li
164.373 103.98 li
164.979 95.9697 li
165.585 100.546 li
166.191 97.1138 li
166.797 100.546 li
167.403 95.9697 li
168.009 99.4028 li
168.615 92.5356 li
169.221 99.4028 li
169.827 92.5356 li
170.433 89.1025 li
171.039 93.6807 li
171.645 87.9575 li
172.25 94.8247 li
172.857 89.1025 li
173.463 86.8135 li
174.069 89.1025 li
174.675 86.8135 li
175.281 91.3916 li
175.887 93.6807 li
176.493 86.8135 li
177.099 85.6694 li
177.705 87.9575 li
178.311 86.8135 li
178.917 86.8135 li
179.522 89.1025 li
180.735 89.1025 li
181.341 86.8135 li
@
181.341 86.8135 mo
181.947 89.1025 li
182.553 85.6694 li
183.159 86.8135 li
183.765 84.5244 li
184.371 84.5244 li
184.977 87.9575 li
185.583 83.3804 li
186.188 87.9575 li
186.795 83.3804 li
187.401 81.0913 li
188.007 83.3804 li
188.613 82.2358 li
189.219 84.5244 li
189.825 81.0913 li
190.431 83.3804 li
191.643 81.0913 li
192.249 82.2358 li
192.854 82.2358 li
193.461 81.0913 li
194.673 81.0913 li
195.279 79.9468 li
195.885 81.0913 li
196.491 83.3804 li
197.097 81.0913 li
197.703 84.5244 li
198.309 79.9468 li
198.915 82.2358 li
199.521 81.0913 li
200.127 79.9468 li
200.733 77.6577 li
201.339 79.9468 li
201.945 78.8027 li
202.551 81.0913 li
203.157 79.9468 li
203.763 79.9468 li
204.369 78.8027 li
204.975 78.8027 li
205.581 77.6577 li
207.399 77.6577 li
208.005 78.8027 li
209.823 78.8027 li
210.429 77.6577 li
211.035 78.8027 li
211.641 81.0913 li
212.247 78.8027 li
212.853 79.9468 li
213.458 78.8027 li
214.064 79.9468 li
214.671 76.5137 li
215.277 79.9468 li
217.095 76.5137 li
217.701 76.5137 li
218.307 79.9468 li
218.913 78.8027 li
219.519 75.3696 li
220.125 77.6577 li
220.73 77.6577 li
221.337 78.8027 li
221.943 75.3696 li
222.549 76.5137 li
223.155 74.2246 li
223.761 74.2246 li
224.367 76.5137 li
224.973 75.3696 li
225.579 76.5137 li
226.185 74.2246 li
226.791 75.3696 li
228.003 75.3696 li
228.609 78.8027 li
229.215 76.5137 li
231.033 76.5137 li
231.639 78.8027 li
232.245 76.5137 li
232.851 77.6577 li
233.457 76.5137 li
234.063 77.6577 li
235.275 75.3696 li
235.881 76.5137 li
236.487 75.3696 li
237.093 78.8027 li
237.699 76.5137 li
238.305 75.3696 li
239.517 75.3696 li
240.123 78.8027 li
240.729 75.3696 li
241.335 76.5137 li
241.941 75.3696 li
244.365 75.3696 li
244.971 77.6577 li
245.577 75.3696 li
246.183 75.3696 li
246.789 74.2246 li
247.395 74.2246 li
248 77.6577 li
248.607 74.2246 li
249.213 76.5137 li
249.819 74.2246 li
250.425 74.2246 li
251.031 71.9355 li
251.637 74.2246 li
252.243 73.0806 li
252.849 74.2246 li
254.061 71.9355 li
254.667 73.0806 li
255.272 73.0806 li
255.879 71.9355 li
256.485 76.5137 li
257.091 73.0806 li
258.303 70.7915 li
258.909 71.9355 li
259.515 73.0806 li
260.121 73.0806 li
260.727 71.9355 li
262.545 71.9355 li
263.151 73.0806 li
264.363 70.7915 li
264.969 71.9355 li
266.787 71.9355 li
267.393 70.7915 li
267.999 71.9355 li
268.604 70.7915 li
269.211 71.9355 li
270.423 71.9355 li
271.029 70.7915 li
271.635 71.9355 li
272.847 71.9355 li
273.453 70.7915 li
@
273.453 70.7915 mo
274.059 71.9355 li
275.271 71.9355 li
275.877 74.2246 li
276.483 71.9355 li
278.301 71.9355 li
278.907 74.2246 li
279.513 71.9355 li
280.119 71.9355 li
280.725 70.7915 li
281.331 70.7915 li
281.937 74.2246 li
282.543 70.7915 li
283.149 71.9355 li
283.755 69.6465 li
284.361 70.7915 li
284.967 70.7915 li
285.573 71.9355 li
286.179 70.7915 li
286.785 69.6465 li
287.391 69.6465 li
287.997 70.7915 li
289.814 70.7915 li
290.421 69.6465 li
291.027 70.7915 li
292.239 70.7915 li
292.845 69.6465 li
293.451 70.7915 li
294.057 69.6465 li
294.663 70.7915 li
295.269 70.7915 li
295.875 73.0806 li
296.48 70.7915 li
297.087 73.0806 li
297.693 70.7915 li
298.299 73.0806 li
298.905 70.7915 li
301.329 70.7915 li
301.935 69.6465 li
302.541 70.7915 li
@
302.541 70.7915 mo
303.146 68.5024 li
303.753 68.5024 li
304.359 71.9355 li
304.965 69.6465 li
305.571 71.9355 li
306.177 69.6465 li
307.995 69.6465 li
308.601 71.9355 li
309.207 69.6465 li
309.813 71.9355 li
310.419 69.6465 li
311.025 71.9355 li
311.631 69.6465 li
313.449 69.6465 li
314.055 68.5024 li
314.661 69.6465 li
315.267 69.6465 li
315.873 68.5024 li
316.479 68.5024 li
317.085 69.6465 li
317.691 68.5024 li
318.297 69.6465 li
318.903 68.5024 li
319.509 69.6465 li
320.721 69.6465 li
321.327 71.9355 li
321.933 69.6465 li
323.75 69.6465 li
324.357 71.9355 li
324.963 69.6465 li
326.175 69.6465 li
326.781 68.5024 li
327.387 69.6465 li
329.205 69.6465 li
329.811 68.5024 li
330.417 68.5024 li
331.022 69.6465 li
331.629 69.6465 li
332.235 71.9355 li
332.841 69.6465 li
333.447 71.9355 li
334.053 69.6465 li
344.354 69.6465 li
344.961 68.5024 li
346.173 68.5024 li
346.779 69.6465 li
347.385 69.6465 li
347.991 68.5024 li
348.597 69.6465 li
349.203 68.5024 li
349.809 69.6465 li
351.021 69.6465 li
351.627 68.5024 li
356.475 68.5024 li
357.081 67.3574 li
357.687 67.3574 li
358.293 68.5024 li
358.899 67.3574 li
359.505 68.5024 li
360.111 67.3574 li
360.717 68.5024 li
361.323 68.5024 li
@
0 lc
361.323 68.5024 mo
361.929 67.3574 li
@
59.5347 261.914 mo
60.1406 193.247 li
0 .993286 1 0 cmyk
@
1 lc
60.1406 193.247 mo
60.7466 216.136 li
61.3525 190.958 li
61.9585 197.825 li
62.5649 214.992 li
63.1709 196.681 li
63.7769 209.27 li
64.3828 190.958 li
64.9888 193.247 li
65.5947 196.681 li
66.2007 193.247 li
66.8066 208.125 li
67.4126 188.669 li
68.0186 196.681 li
68.6245 190.958 li
69.2305 201.257 li
69.8369 200.114 li
70.4429 189.813 li
71.0488 192.103 li
71.6548 193.247 li
72.2607 197.825 li
72.8667 193.247 li
73.4727 196.681 li
74.0786 196.681 li
74.6846 187.524 li
75.2905 193.247 li
75.8965 187.524 li
76.5029 195.536 li
77.1089 190.958 li
77.7148 185.235 li
78.3208 192.103 li
78.9268 179.514 li
79.5327 185.235 li
80.1387 192.103 li
80.7446 184.092 li
81.3506 185.235 li
81.9565 179.514 li
82.5625 178.37 li
83.1689 179.514 li
83.7749 184.092 li
84.3809 177.225 li
84.9868 179.514 li
85.5928 169.213 li
86.1987 184.092 li
86.8047 172.646 li
87.4106 174.936 li
88.0166 173.792 li
88.6226 179.514 li
89.2285 182.947 li
89.835 169.213 li
90.4409 177.225 li
91.0469 166.924 li
91.6528 171.502 li
92.2588 170.357 li
93.4707 174.936 li
94.0767 171.502 li
94.6826 173.792 li
95.2886 166.924 li
95.8945 166.924 li
96.5005 169.213 li
97.1069 170.357 li
97.7129 164.636 li
98.3188 169.213 li
98.9248 170.357 li
99.5308 173.792 li
100.137 171.502 li
100.743 165.781 li
101.349 169.213 li
101.955 161.203 li
102.561 162.347 li
103.167 163.492 li
103.772 158.914 li
104.379 157.77 li
104.985 165.781 li
105.591 154.335 li
106.197 160.058 li
106.803 160.058 li
107.409 152.046 li
108.015 148.614 li
108.621 157.77 li
109.227 153.191 li
110.438 153.191 li
111.045 156.625 li
111.651 156.625 li
112.257 152.046 li
112.863 142.892 li
113.469 153.191 li
114.075 145.181 li
114.681 149.757 li
115.287 148.614 li
115.893 149.757 li
116.499 147.47 li
117.104 146.325 li
117.711 148.614 li
118.317 145.181 li
118.923 139.458 li
119.529 140.603 li
120.135 142.892 li
121.347 142.892 li
122.559 136.024 li
123.165 134.88 li
123.771 136.024 li
124.377 134.88 li
124.983 132.592 li
125.589 136.024 li
126.195 130.303 li
126.801 132.592 li
127.407 125.725 li
128.013 128.014 li
128.619 137.169 li
129.225 125.725 li
129.831 129.158 li
130.437 123.436 li
131.649 128.014 li
132.255 122.292 li
132.861 125.725 li
133.467 126.87 li
134.073 122.292 li
134.679 124.581 li
135.285 116.57 li
135.891 121.146 li
136.497 120.002 li
137.103 116.57 li
137.708 117.713 li
138.315 121.146 li
138.921 122.292 li
139.527 120.002 li
140.133 115.424 li
@
140.133 115.424 mo
140.739 115.424 li
141.345 116.57 li
141.951 118.857 li
142.557 116.57 li
143.163 116.57 li
143.769 114.281 li
144.375 110.847 li
144.98 117.713 li
145.587 117.713 li
146.193 118.857 li
146.799 114.281 li
147.405 117.713 li
148.011 111.992 li
148.617 113.136 li
149.223 111.992 li
149.829 108.558 li
150.435 113.136 li
151.041 111.992 li
151.646 114.281 li
152.253 114.281 li
153.465 109.703 li
154.071 113.136 li
154.677 109.703 li
155.283 109.703 li
155.889 105.125 li
156.495 106.27 li
157.101 106.27 li
157.707 111.992 li
158.313 102.835 li
158.919 106.27 li
159.525 105.125 li
160.131 107.414 li
160.737 108.558 li
161.343 105.125 li
161.949 105.125 li
162.555 102.835 li
163.161 103.98 li
163.767 101.691 li
164.373 103.98 li
164.979 103.98 li
165.585 101.691 li
166.191 101.691 li
166.797 99.4028 li
167.403 102.835 li
168.009 100.546 li
168.615 99.4028 li
169.221 97.1138 li
169.827 97.1138 li
170.433 100.546 li
171.039 99.4028 li
171.645 94.8247 li
172.25 95.9697 li
172.857 94.8247 li
173.463 92.5356 li
174.069 97.1138 li
174.675 93.6807 li
175.281 92.5356 li
175.887 94.8247 li
176.493 93.6807 li
177.099 94.8247 li
177.705 93.6807 li
178.311 89.1025 li
178.917 92.5356 li
179.522 90.2466 li
180.129 90.2466 li
180.735 89.1025 li
181.341 90.2466 li
@
181.341 90.2466 mo
181.947 94.8247 li
182.553 89.1025 li
183.159 94.8247 li
183.765 89.1025 li
184.371 89.1025 li
184.977 90.2466 li
185.583 87.9575 li
186.188 87.9575 li
186.795 85.6694 li
187.401 89.1025 li
188.007 87.9575 li
188.613 92.5356 li
189.219 85.6694 li
189.825 89.1025 li
190.431 86.8135 li
191.037 85.6694 li
191.643 85.6694 li
192.249 84.5244 li
192.854 90.2466 li
193.461 84.5244 li
194.067 87.9575 li
194.673 85.6694 li
195.279 84.5244 li
195.885 86.8135 li
196.491 84.5244 li
197.097 89.1025 li
197.703 84.5244 li
198.309 83.3804 li
198.915 84.5244 li
199.521 82.2358 li
200.127 84.5244 li
200.733 82.2358 li
201.339 82.2358 li
201.945 81.0913 li
202.551 85.6694 li
203.157 83.3804 li
203.763 85.6694 li
204.369 83.3804 li
206.187 83.3804 li
206.793 85.6694 li
207.399 84.5244 li
208.005 82.2358 li
209.823 82.2358 li
210.429 81.0913 li
211.641 81.0913 li
212.247 79.9468 li
212.853 81.0913 li
213.458 79.9468 li
214.671 79.9468 li
215.277 82.2358 li
215.883 78.8027 li
216.489 82.2358 li
217.095 81.0913 li
217.701 81.0913 li
218.307 79.9468 li
218.913 81.0913 li
220.125 81.0913 li
220.73 79.9468 li
221.943 77.6577 li
222.549 77.6577 li
223.155 81.0913 li
223.761 77.6577 li
224.367 78.8027 li
224.973 77.6577 li
225.579 78.8027 li
226.185 77.6577 li
226.791 78.8027 li
227.396 77.6577 li
228.003 78.8027 li
228.609 78.8027 li
229.215 77.6577 li
229.821 78.8027 li
232.245 78.8027 li
232.851 77.6577 li
233.457 77.6577 li
234.063 78.8027 li
234.669 78.8027 li
235.275 77.6577 li
235.881 78.8027 li
238.305 78.8027 li
238.911 77.6577 li
239.517 77.6577 li
240.123 78.8027 li
240.729 77.6577 li
241.335 77.6577 li
241.941 75.3696 li
242.547 77.6577 li
243.153 75.3696 li
243.759 77.6577 li
244.365 78.8027 li
244.971 76.5137 li
245.577 75.3696 li
255.272 75.3696 li
255.879 73.0806 li
256.485 75.3696 li
257.091 75.3696 li
257.697 73.0806 li
258.303 73.0806 li
258.909 74.2246 li
259.515 73.0806 li
260.121 74.2246 li
260.727 74.2246 li
261.333 73.0806 li
261.938 74.2246 li
262.545 74.2246 li
263.151 73.0806 li
263.757 74.2246 li
264.969 74.2246 li
265.575 73.0806 li
266.181 73.0806 li
266.787 74.2246 li
267.393 73.0806 li
267.999 74.2246 li
268.604 73.0806 li
269.817 73.0806 li
270.423 71.9355 li
271.029 73.0806 li
271.635 73.0806 li
272.241 71.9355 li
272.847 73.0806 li
277.695 73.0806 li
278.301 71.9355 li
278.907 73.0806 li
281.331 73.0806 li
281.937 71.9355 li
282.543 73.0806 li
283.149 73.0806 li
@
283.149 73.0806 mo
283.755 71.9355 li
285.573 71.9355 li
286.179 73.0806 li
286.785 71.9355 li
302.541 71.9355 li
@
302.541 71.9355 mo
361.323 71.9355 li
@
0 lc
361.323 71.9355 mo
361.929 71.9355 li
@
456.929 55.9136 mo
758.929 55.9136 li
758.929 261.914 li
456.929 261.914 li
456.929 55.9136 li
cp
0 0 0 0 cmyk
f
2 lc
456.929 261.914 mo
758.929 261.914 li
456.929 55.9136 mo
758.929 55.9136 li
456.929 261.914 mo
456.929 258.894 li
517.329 261.914 mo
517.329 258.894 li
638.129 261.914 mo
638.129 258.894 li
758.929 261.914 mo
758.929 258.894 li
456.929 55.9136 mo
456.929 58.9336 li
517.329 55.9136 mo
517.329 58.9336 li
638.129 55.9136 mo
638.129 58.9336 li
758.929 55.9136 mo
758.929 58.9336 li
0 0 0 .851 cmyk
@
0 0 0 1 cmyk
WOOECZ+TimesNewRomanPSMT*1 [18 -2.20436e-15 -2.20436e-15 -18 0 0 ]msf
538.429 302.148 mo
(Generation number)
[12.999 7.98926 9 7.98926 5.99414 7.98926 5.00098 5.00098 9 9 4.5 9 
9 14.001 9 7.98926 0 ]xsh
456.929 261.914 mo
456.929 55.9136 li
758.929 261.914 mo
758.929 55.9136 li
456.929 261.914 mo
459.948 261.914 li
456.929 179.514 mo
459.948 179.514 li
456.929 97.1138 mo
459.948 97.1138 li
758.929 261.914 mo
755.909 261.914 li
758.929 179.514 mo
755.909 179.514 li
758.929 97.1138 mo
755.909 97.1138 li
0 0 0 .851 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
WOOECZ+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7A73DB6B62B7A95EE6C20B94EAC94CA9AB50BFD020369D
6A63C8EA15A0D9A89B2ED9293078F8D3EE629592E255C65B246> |-
/d <1C60D8A8C9B7A73DB9CAB5EAE520FF5085D357A7F1B1CBAAAB9D3C3D2030
65B58561B55699E1F852D974E24DCDB3FAC1151DF1DB63800C3FA779DDD3329A
86B4E9458DA578ECA7DC82AB1CB5558FB398EDD8AF237A44BB61AD8FF07FB857
EAFB03E3B7223E134D0A703B89A6CB54355CD1F1518C86E0EAFDD151579F5CCB
01DCDB1BD56096AB78D2E9ADD609F7B156D422E9074A62B38BF35F82A0AAD104
E0C2CB94DA5F3F39F8DB246ADB5F008F682AF80FAED0C691E7A618879362783A
36815EA1CE5876FAC4F83CDFE1BD4A> |-
/s <1C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC22A
CE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A03
9A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF40
BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359FA
AB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C593
B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF509B
93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WOOECZ+TimesNewRomanPSMT /Encoding get
dup 52 /four put
dup 100 /d put
dup 115 /s put
pop
%ADOEndSubsetFont
/WOOECZ+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three /four 12{/.notdef}rp /A 5{/.notdef}rp /G 25{/.notdef}rp 
/a /b /c /d /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /u /v /.notdef /x /y 
134{/.notdef}rp]
WOOECZ+TimesNewRomanPSMT nf
WOOECZ+TimesNewRomanPSMT*1 [18 -2.20436e-15 -2.20436e-15 -18 0 0 ]msf
444.129 267.413 mo
(0)sh
444.129 185.013 mo
(2)sh
444.129 102.613 mo
(4)sh
WOOECZ+TimesNewRomanPSMT*1 [-1.10218e-15 -18 -18 1.10218e-15 0 0 ]msf
429.128 261.912 mo
(Average population diversity)
[-12.999 -9 -7.98926 -5.99414 -7.98926 -9 -7.98926 -4.5 -9 -9 -9 -9 
-5.00098 -7.98926 -5.00098 -5.00098 -9 -9 -4.5 -9 -5.00098 -9 -7.98926 -5.99414 
-7.00488 -5.00098 -5.00098 0 ]ysh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
388.429 43.2373 mo
(\(b\))sh
0 lc
457.532 261.914 mo
458.137 220.713 li
.872374 .519982 0 0 cmyk
@
1 lc
458.137 220.713 mo
458.741 235.821 li
459.345 216.594 li
460.553 227.581 li
461.157 219.34 li
461.761 223.46 li
462.364 222.086 li
462.969 217.967 li
463.572 219.34 li
464.177 216.594 li
464.78 215.221 li
465.385 209.727 li
465.988 216.594 li
466.593 222.086 li
467.196 215.221 li
467.801 216.594 li
468.404 216.594 li
469.009 222.086 li
469.612 223.46 li
470.217 219.34 li
470.82 212.474 li
472.633 216.594 li
473.236 216.594 li
473.841 213.847 li
475.049 213.847 li
475.652 212.474 li
476.257 215.221 li
476.86 213.847 li
477.465 220.713 li
478.068 215.221 li
478.673 216.594 li
479.276 213.847 li
479.881 208.354 li
480.484 215.221 li
481.089 211.101 li
482.9 215.221 li
483.505 206.98 li
484.108 215.221 li
484.713 213.847 li
485.316 211.101 li
485.921 215.221 li
486.524 209.727 li
487.129 212.474 li
487.732 206.98 li
488.94 206.98 li
489.545 205.606 li
490.148 208.354 li
490.753 206.98 li
491.356 206.98 li
491.961 208.354 li
492.564 202.86 li
493.169 201.487 li
493.772 201.487 li
494.98 206.98 li
495.585 202.86 li
496.188 205.606 li
496.793 197.367 li
497.396 200.114 li
498.001 201.487 li
499.209 198.741 li
499.813 194.621 li
500.417 191.874 li
501.021 190.5 li
501.625 195.994 li
502.229 197.367 li
502.833 191.874 li
503.437 190.5 li
504.041 190.5 li
504.645 186.38 li
505.249 190.5 li
505.853 185.006 li
507.061 185.006 li
508.269 187.753 li
508.873 185.006 li
510.081 176.767 li
510.685 185.006 li
511.289 178.141 li
511.893 182.261 li
512.497 179.514 li
513.101 174.021 li
513.705 175.394 li
514.309 179.514 li
514.913 174.021 li
515.517 176.767 li
516.121 172.646 li
516.725 165.781 li
517.329 169.9 li
517.933 169.9 li
518.537 172.646 li
519.141 171.273 li
519.745 165.781 li
521.557 161.661 li
522.161 163.034 li
522.765 165.781 li
523.369 154.793 li
523.973 158.914 li
524.577 156.167 li
525.181 158.914 li
525.785 156.167 li
526.389 157.541 li
526.993 152.046 li
527.597 154.793 li
528.805 146.554 li
529.409 143.807 li
530.013 146.554 li
530.616 143.807 li
531.221 142.434 li
531.825 142.434 li
532.429 145.181 li
533.032 146.554 li
533.637 139.687 li
534.241 143.807 li
534.845 139.687 li
535.448 142.434 li
536.053 135.566 li
536.657 143.807 li
537.261 138.313 li
537.864 139.687 li
538.469 135.566 li
539.072 132.821 li
539.677 132.821 li
540.28 134.193 li
540.885 132.821 li
541.488 132.821 li
542.093 125.954 li
542.696 123.207 li
543.301 130.074 li
543.904 127.327 li
@
543.904 127.327 mo
544.509 127.327 li
545.112 123.207 li
545.717 124.581 li
546.32 121.833 li
546.925 123.207 li
547.528 121.833 li
548.133 119.086 li
548.736 119.086 li
549.341 120.46 li
549.944 117.713 li
550.549 117.713 li
551.152 116.34 li
551.757 117.713 li
552.36 114.967 li
552.965 113.594 li
553.568 110.847 li
554.776 110.847 li
555.381 112.221 li
555.984 114.967 li
557.192 112.221 li
557.797 113.594 li
558.4 108.101 li
559.005 110.847 li
559.608 106.727 li
560.213 109.474 li
560.816 106.727 li
561.421 106.727 li
562.024 112.221 li
562.629 103.98 li
563.232 108.101 li
563.837 103.98 li
564.44 106.727 li
565.045 103.98 li
565.648 105.354 li
566.253 99.8608 li
566.856 106.727 li
567.461 99.8608 li
568.064 95.7407 li
568.669 99.8608 li
569.272 94.3667 li
569.877 99.8608 li
570.48 95.7407 li
571.085 92.9937 li
571.688 95.7407 li
572.293 92.9937 li
572.896 97.1138 li
573.501 99.8608 li
574.104 91.6206 li
574.709 91.6206 li
575.313 94.3667 li
576.521 91.6206 li
577.125 94.3667 li
578.333 94.3667 li
578.937 92.9937 li
@
578.937 92.9937 mo
579.541 94.3667 li
580.145 91.6206 li
580.749 91.6206 li
581.353 90.2466 li
581.957 90.2466 li
582.561 92.9937 li
583.165 88.8735 li
583.769 91.6206 li
584.977 86.1265 li
585.581 88.8735 li
586.185 87.5005 li
586.789 88.8735 li
587.393 86.1265 li
587.997 88.8735 li
589.205 86.1265 li
589.809 86.1265 li
590.413 87.5005 li
591.017 86.1265 li
592.225 86.1265 li
592.829 84.7534 li
594.037 87.5005 li
594.641 86.1265 li
595.245 88.8735 li
595.849 84.7534 li
596.453 86.1265 li
597.057 86.1265 li
597.661 84.7534 li
598.265 82.0063 li
598.869 84.7534 li
599.473 83.3804 li
600.077 84.7534 li
600.681 84.7534 li
601.285 83.3804 li
602.493 83.3804 li
603.097 82.0063 li
604.909 82.0063 li
605.513 83.3804 li
607.325 83.3804 li
607.929 82.0063 li
609.137 84.7534 li
609.741 83.3804 li
611.553 83.3804 li
612.157 80.6333 li
612.761 83.3804 li
613.364 83.3804 li
614.572 80.6333 li
615.177 80.6333 li
615.78 83.3804 li
616.385 83.3804 li
616.988 79.2607 li
617.593 82.0063 li
618.801 82.0063 li
619.404 79.2607 li
620.009 80.6333 li
620.612 77.8867 li
621.217 77.8867 li
621.82 80.6333 li
622.425 79.2607 li
623.028 80.6333 li
623.633 77.8867 li
624.236 79.2607 li
625.444 79.2607 li
626.049 82.0063 li
626.652 80.6333 li
628.465 80.6333 li
629.068 82.0063 li
629.673 80.6333 li
632.089 80.6333 li
632.692 79.2607 li
633.297 80.6333 li
633.9 79.2607 li
634.505 82.0063 li
635.713 79.2607 li
636.921 79.2607 li
637.524 82.0063 li
638.129 79.2607 li
638.732 80.6333 li
639.337 79.2607 li
641.753 79.2607 li
642.356 80.6333 li
642.961 79.2607 li
643.564 79.2607 li
644.169 77.8867 li
644.772 77.8867 li
645.377 80.6333 li
645.98 77.8867 li
646.585 79.2607 li
647.188 77.8867 li
647.793 77.8867 li
648.396 75.1406 li
649.001 77.8867 li
649.604 76.5137 li
650.209 77.8867 li
651.417 75.1406 li
652.021 76.5137 li
652.625 76.5137 li
653.229 75.1406 li
653.833 79.2607 li
654.437 76.5137 li
655.645 73.7666 li
656.853 76.5137 li
657.457 76.5137 li
658.061 75.1406 li
659.873 75.1406 li
660.477 76.5137 li
661.685 73.7666 li
662.289 75.1406 li
664.101 75.1406 li
664.705 73.7666 li
665.309 75.1406 li
665.913 73.7666 li
666.517 75.1406 li
667.725 75.1406 li
668.329 73.7666 li
668.933 75.1406 li
670.141 75.1406 li
670.745 73.7666 li
671.349 75.1406 li
672.557 75.1406 li
673.161 76.5137 li
673.765 75.1406 li
675.577 75.1406 li
676.181 76.5137 li
676.785 75.1406 li
677.389 75.1406 li
677.993 73.7666 li
678.597 73.7666 li
@
678.597 73.7666 mo
679.2 76.5137 li
679.805 73.7666 li
680.409 75.1406 li
681.013 72.3936 li
681.616 73.7666 li
682.221 73.7666 li
682.825 75.1406 li
684.032 72.3936 li
684.637 72.3936 li
685.241 73.7666 li
687.053 73.7666 li
687.657 72.3936 li
688.261 73.7666 li
689.469 73.7666 li
690.072 72.3936 li
690.677 73.7666 li
691.28 72.3936 li
691.885 73.7666 li
692.488 73.7666 li
693.093 75.1406 li
693.696 73.7666 li
694.301 75.1406 li
694.904 73.7666 li
695.509 75.1406 li
696.112 73.7666 li
698.528 73.7666 li
699.133 72.3936 li
699.736 73.7666 li
@
699.736 73.7666 mo
700.341 71.0205 li
700.944 71.0205 li
701.549 73.7666 li
702.152 72.3936 li
702.757 73.7666 li
703.36 72.3936 li
705.173 72.3936 li
705.776 73.7666 li
706.381 72.3936 li
706.984 73.7666 li
707.589 72.3936 li
708.192 73.7666 li
708.797 72.3936 li
710.608 72.3936 li
711.213 71.0205 li
711.816 72.3936 li
712.421 72.3936 li
713.024 71.0205 li
713.629 71.0205 li
714.232 72.3936 li
714.837 71.0205 li
715.44 72.3936 li
716.045 71.0205 li
716.648 72.3936 li
717.856 72.3936 li
718.461 73.7666 li
719.064 72.3936 li
720.877 72.3936 li
721.48 73.7666 li
722.085 72.3936 li
723.293 72.3936 li
723.896 71.0205 li
724.501 72.3936 li
726.313 72.3936 li
726.917 71.0205 li
727.521 71.0205 li
728.125 72.3936 li
728.729 72.3936 li
729.333 73.7666 li
729.937 72.3936 li
730.541 73.7666 li
731.145 72.3936 li
741.413 72.3936 li
742.017 71.0205 li
743.225 71.0205 li
743.829 72.3936 li
744.433 72.3936 li
745.037 71.0205 li
745.641 72.3936 li
746.245 71.0205 li
746.849 72.3936 li
748.057 72.3936 li
748.661 71.0205 li
753.493 71.0205 li
754.097 69.6465 li
754.7 69.6465 li
755.305 71.0205 li
755.909 69.6465 li
756.513 71.0205 li
757.116 69.6465 li
757.721 71.0205 li
758.325 71.0205 li
@
0 lc
758.325 71.0205 mo
758.929 69.6465 li
@
457.532 261.914 mo
458.137 220.713 li
0 .993286 1 0 cmyk
@
1 lc
458.137 220.713 mo
458.741 234.447 li
459.345 217.967 li
459.948 220.713 li
460.553 231.701 li
461.157 222.086 li
461.761 227.581 li
462.364 215.221 li
462.969 216.594 li
463.572 220.713 li
464.177 216.594 li
464.78 227.581 li
465.385 213.847 li
465.988 220.713 li
466.593 215.221 li
467.196 222.086 li
467.801 222.086 li
468.404 213.847 li
469.009 216.594 li
469.612 215.221 li
470.217 220.713 li
470.82 216.594 li
471.425 216.594 li
472.028 217.967 li
472.633 212.474 li
473.236 216.594 li
473.841 212.474 li
474.444 216.594 li
475.049 212.474 li
476.257 212.474 li
476.86 202.86 li
477.465 205.606 li
478.068 212.474 li
478.673 205.606 li
479.276 205.606 li
480.484 200.114 li
481.692 202.86 li
482.297 200.114 li
482.9 198.741 li
483.505 194.621 li
484.108 202.86 li
484.713 195.994 li
485.316 197.367 li
485.921 194.621 li
486.524 200.114 li
487.129 201.487 li
487.732 190.5 li
488.337 197.367 li
488.94 189.126 li
489.545 193.247 li
490.148 190.5 li
490.753 191.874 li
491.356 194.621 li
494.377 187.753 li
494.98 190.5 li
495.585 183.634 li
496.188 189.126 li
496.793 189.126 li
497.396 191.874 li
498.604 186.38 li
499.209 189.126 li
499.813 182.261 li
500.417 180.887 li
501.021 183.634 li
501.625 176.767 li
502.229 178.141 li
502.833 182.261 li
503.437 174.021 li
504.041 178.141 li
504.645 179.514 li
505.249 169.9 li
505.853 169.9 li
506.457 174.021 li
507.061 171.273 li
507.665 169.9 li
508.269 171.273 li
508.873 174.021 li
509.477 174.021 li
510.081 169.9 li
510.685 160.287 li
511.289 169.9 li
511.893 160.287 li
512.497 167.154 li
513.101 164.407 li
513.705 165.781 li
514.309 163.034 li
514.913 161.661 li
515.517 164.407 li
516.121 161.661 li
516.725 154.793 li
517.329 154.793 li
517.933 156.167 li
519.141 156.167 li
519.745 154.793 li
520.953 149.301 li
521.557 149.301 li
522.161 147.927 li
522.765 147.927 li
523.369 150.673 li
523.973 143.807 li
524.577 146.554 li
525.181 138.313 li
525.785 142.434 li
526.389 147.927 li
526.993 139.687 li
527.597 141.061 li
528.2 136.94 li
528.805 139.687 li
529.409 139.687 li
530.013 135.566 li
530.616 139.687 li
531.221 138.313 li
531.825 134.193 li
532.429 136.94 li
533.032 127.327 li
533.637 131.447 li
534.241 131.447 li
534.845 127.327 li
535.448 128.701 li
536.053 132.821 li
536.657 132.821 li
537.261 131.447 li
537.864 125.954 li
538.469 127.327 li
539.072 127.327 li
539.677 128.701 li
540.28 127.327 li
540.885 127.327 li
@
540.885 127.327 mo
541.488 125.954 li
542.093 121.833 li
542.696 127.327 li
543.301 128.701 li
543.904 128.701 li
544.509 125.954 li
545.112 127.327 li
545.717 123.207 li
546.32 123.207 li
546.925 121.833 li
547.528 119.086 li
548.133 123.207 li
548.736 121.833 li
549.341 123.207 li
549.944 123.207 li
550.549 121.833 li
551.152 119.086 li
551.757 121.833 li
552.36 119.086 li
552.965 119.086 li
553.568 114.967 li
554.173 114.967 li
554.776 116.34 li
555.381 120.46 li
555.984 112.221 li
556.589 116.34 li
557.192 113.594 li
557.797 116.34 li
558.4 114.967 li
559.005 114.967 li
561.421 109.474 li
562.629 112.221 li
563.232 109.474 li
563.837 109.474 li
564.44 106.727 li
565.045 109.474 li
565.648 108.101 li
566.253 108.101 li
566.856 105.354 li
567.461 105.354 li
568.064 108.101 li
568.669 106.727 li
569.272 102.606 li
569.877 103.98 li
570.48 102.606 li
571.085 99.8608 li
571.688 103.98 li
572.293 101.233 li
572.896 99.8608 li
573.501 101.233 li
574.104 99.8608 li
574.709 101.233 li
575.313 99.8608 li
575.917 95.7407 li
576.521 98.4868 li
577.729 95.7407 li
578.333 95.7407 li
578.937 97.1138 li
@
578.937 97.1138 mo
579.541 99.8608 li
580.145 95.7407 li
580.749 99.8608 li
581.353 95.7407 li
581.957 95.7407 li
582.561 97.1138 li
583.165 94.3667 li
584.373 91.6206 li
584.977 94.3667 li
585.581 94.3667 li
586.185 97.1138 li
586.789 91.6206 li
587.393 92.9937 li
587.997 92.9937 li
588.601 91.6206 li
589.205 91.6206 li
589.809 90.2466 li
590.413 94.3667 li
591.017 90.2466 li
591.621 92.9937 li
592.829 90.2466 li
593.433 91.6206 li
594.037 90.2466 li
594.641 92.9937 li
595.245 90.2466 li
595.849 88.8735 li
596.453 90.2466 li
597.057 87.5005 li
597.661 90.2466 li
598.265 87.5005 li
598.869 87.5005 li
600.077 90.2466 li
600.681 88.8735 li
601.285 90.2466 li
601.889 88.8735 li
603.7 88.8735 li
604.305 90.2466 li
604.909 90.2466 li
605.513 87.5005 li
607.325 87.5005 li
607.929 86.1265 li
609.137 86.1265 li
609.741 84.7534 li
610.345 86.1265 li
610.948 84.7534 li
612.157 84.7534 li
612.761 87.5005 li
613.364 83.3804 li
613.969 87.5005 li
614.572 86.1265 li
615.177 86.1265 li
615.78 84.7534 li
616.385 86.1265 li
617.593 86.1265 li
619.404 82.0063 li
620.009 82.0063 li
620.612 86.1265 li
621.217 82.0063 li
621.82 83.3804 li
622.425 82.0063 li
623.028 83.3804 li
623.633 82.0063 li
624.236 83.3804 li
624.841 82.0063 li
625.444 83.3804 li
626.049 83.3804 li
626.652 82.0063 li
627.257 83.3804 li
629.673 83.3804 li
630.276 82.0063 li
630.881 82.0063 li
631.484 83.3804 li
632.089 83.3804 li
632.692 82.0063 li
633.297 83.3804 li
635.713 83.3804 li
636.316 82.0063 li
636.921 82.0063 li
637.524 83.3804 li
638.129 82.0063 li
638.732 82.0063 li
639.337 79.2607 li
639.94 82.0063 li
640.545 79.2607 li
641.148 82.0063 li
641.753 83.3804 li
642.356 80.6333 li
642.961 79.2607 li
652.625 79.2607 li
653.229 76.5137 li
653.833 79.2607 li
654.437 79.2607 li
655.041 76.5137 li
655.645 76.5137 li
656.249 77.8867 li
656.853 76.5137 li
657.457 77.8867 li
658.061 77.8867 li
658.665 76.5137 li
659.269 77.8867 li
659.873 77.8867 li
660.477 76.5137 li
661.081 77.8867 li
662.289 77.8867 li
662.893 76.5137 li
663.497 76.5137 li
664.101 77.8867 li
664.705 76.5137 li
665.309 77.8867 li
665.913 76.5137 li
667.121 76.5137 li
667.725 75.1406 li
668.329 76.5137 li
668.933 76.5137 li
669.537 75.1406 li
670.141 76.5137 li
674.973 76.5137 li
675.577 75.1406 li
676.181 76.5137 li
678.597 76.5137 li
679.2 75.1406 li
679.805 76.5137 li
680.409 76.5137 li
681.013 75.1406 li
682.825 75.1406 li
683.429 76.5137 li
684.032 75.1406 li
@
684.032 75.1406 mo
699.736 75.1406 li
@
699.736 75.1406 mo
758.325 75.1406 li
@
0 lc
758.325 75.1406 mo
758.929 75.1406 li
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
WOOECZ+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B7EF322B88F9F448EE5C6C6600BEF9C3C9A017B9BABF876458
925BFD3DF1270B888D0A52682DD77562B0592DCEFA4305CC7C82B5C217C153D7
D799EF75C3E1B47B2F2C3741BE023ABA656D3600645948113D9E1ACE5988E886
C2CAB89042DA868AC9EEC60CE17BA00926C89C442DF26FC8F7E4DF94B56A18CF
B31DE37DED0B361C6E9E1A158721E9F2BF357AD3A9D82EC3F61E7737142FF120
86F5CF2AAB01A87FB3B34AEED6F7C6CCE06EC32D6DE2EC0B548299344251FBC6
28> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WOOECZ+TimesNewRomanPSMT /Encoding get
dup 80 /P put
pop
%ADOEndSubsetFont
/WOOECZ+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three /four 12{/.notdef}rp /A 5{/.notdef}rp /G 8{/.notdef}rp 
/P 16{/.notdef}rp /a /b /c /d /e /.notdef 
/g /.notdef /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /u /v /.notdef 
/x /y 134{/.notdef}rp]
WOOECZ+TimesNewRomanPSMT nf
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
592.227 14.959 mo
(Prime number problem)sh
559.227 8.95947 mo
589.227 8.95947 li
.872374 .519982 0 0 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
WOOECZ+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B59F85E8A8526E50FEB33438675EDBBD0866093A4555E3EA3A
35849B91EFFB88205281CC77395AC14DF328B50F1F179210F0307F50BFB242AA
7F76F18203303EF0BF46B76E61FB539D568EF9F434EC657F4C5CDE1BCAA90A83
BAFEB02869664DC06CC8CA4FA1E876C39F3F5371AD261F117CDAF8F6A4E96ECA
4F5088752E105CDEB8FBEB2F7F82D31A2FEB6DF3C053295A006D723DEE7CEF30
A9F16E8C6EE80DDA09053247> |-
/O <1C60D8A8C9B6079F6288DCC34B8AB15434B53D5CBCF7E29104F391BE1572
E1D4E07ABEE690B714C43DA0F68F9B727CD1B8007FE243EEEBD45E7815504A31
13BAFAC54AC3D3B019A1C9ACF716BD3362CCEE1A09F2069AE9AF5406AA47EF07
6128BEB6A74EB29D02BFBE8F43F41B56E48CC0FA84987A887327DB516D9441F2
C6BDCB9AC2AD82E8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WOOECZ+TimesNewRomanPSMT /Encoding get
dup 77 /M put
dup 79 /O put
pop
%ADOEndSubsetFont
/WOOECZ+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three /four 12{/.notdef}rp /A 5{/.notdef}rp /G 5{/.notdef}rp 
/M /.notdef /O /P 16{/.notdef}rp /a /b /c 
/d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /.notdef /x /y 134{/.notdef}rp]
WOOECZ+TimesNewRomanPSMT nf
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
592.227 35.6895 mo
(OneMax problem)sh
559.227 29.6895 mo
589.227 29.6895 li
0 .993286 1 0 cmyk
@
58.9287 341.914 mo
361.929 341.914 li
361.929 547.914 li
58.9287 547.914 li
58.9287 341.914 li
cp
0 0 0 0 cmyk
f
2 lc
58.9287 547.914 mo
361.929 547.914 li
58.9287 341.914 mo
361.929 341.914 li
58.9287 547.914 mo
58.9287 544.883 li
159.929 547.914 mo
159.929 544.883 li
260.929 547.914 mo
260.929 544.883 li
361.929 547.914 mo
361.929 544.883 li
58.9287 341.914 mo
58.9287 344.944 li
159.929 341.914 mo
159.929 344.944 li
260.929 341.914 mo
260.929 344.944 li
361.929 341.914 mo
361.929 344.944 li
0 0 0 .851 cmyk
@
0 0 0 1 cmyk
WOOECZ+TimesNewRomanPSMT*1 [18 -2.20436e-15 -2.20436e-15 -18 0 0 ]msf
140.929 591.099 mo
(Generation number)
[12.999 7.98926 9 7.98926 5.99414 7.98926 5.00098 5.00098 9 9 4.5 9 
9 14.001 9 7.98926 0 ]xsh
58.9287 547.914 mo
58.9287 341.914 li
361.929 547.914 mo
361.929 341.914 li
58.9287 547.914 mo
61.9585 547.914 li
58.9287 479.247 mo
61.9585 479.247 li
58.9287 410.581 mo
61.9585 410.581 li
58.9287 341.914 mo
61.9585 341.914 li
361.929 547.914 mo
358.899 547.914 li
361.929 479.247 mo
358.899 479.247 li
361.929 410.581 mo
358.899 410.581 li
361.929 341.914 mo
358.899 341.914 li
0 0 0 .851 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
WOOECZ+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7A73DAB2BA6B835CAFB4C9A41096F555C470FE6294A70
7AE711C017C95446B200870C2B6A47FB931BCEBEB5BBC6B53605850C75701306
FD83F9DC906687C2B3A2C9C0DB9DB68E95D3478DEA01153491C8534F5AD89998
0F04C195BFB522EDEF282420AA1F12E08397ECA941D5934294BD451B3952E622
9D3E7987DD36FC8E43559904E0205D3416EDD1402AB05184D2018B2C7B816330
FD0C2740A24C74F80E34F93317BBB1D6B8C4D916C15B7FF1D533D7762324A101
7022A27246D93B9768262BFCC673CAD6781894C98679A5889F9338F377D1995A
EDF5695FBA7A65628522691535557B2045419DD63F87D7A64B6A962B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WOOECZ+TimesNewRomanPSMT /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/WOOECZ+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three /four 3{/.notdef}rp /eight 8{/.notdef}rp /A 5{/.notdef}rp 
/G 5{/.notdef}rp /M /.notdef /O /P 16{/.notdef}rp /a 
/b /c /d /e /.notdef /g /.notdef /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u /v /.notdef /x /y 134{/.notdef}rp]
WOOECZ+TimesNewRomanPSMT nf
WOOECZ+TimesNewRomanPSMT*1 [18 -2.20436e-15 -2.20436e-15 -18 0 0 ]msf
46.1289 553.413 mo
(0)sh
46.1289 484.746 mo
(4)sh
46.1289 416.079 mo
(8)sh
38.1289 347.411 mo
(12)
[9 0 ]xsh
WOOECZ+TimesNewRomanPSMT*1 [-1.10218e-15 -18 -18 1.10218e-15 0 0 ]msf
36.1279 481.493 mo
(Population)
[-10.0107 -9 -9 -9 -5.00098 -7.98926 -5.00098 -5.00098 -9 0 ]ysh
60.9917 338.507 mo
60.9917 338.435 61.0127 338.367 61.0537 338.304 cv
63.9595 335.414 li
61.0537 332.507 li
61.0127 332.456 60.9917 332.392 60.9917 332.32 cv
60.9917 332.247 61.0176 332.181 61.0698 332.125 cv
61.1216 332.068 61.1899 332.039 61.2729 332.039 cv
61.3359 332.039 61.4028 332.07 61.4756 332.132 cv
64.3818 335.023 li
67.2568 332.132 li
67.3398 332.07 67.4077 332.039 67.4595 332.039 cv
67.5425 332.039 67.6108 332.065 67.6626 332.117 cv
67.7158 332.168 67.7417 332.237 67.7417 332.32 cv
67.7417 332.392 67.7207 332.456 67.6787 332.507 cv
64.7729 335.414 li
67.6787 338.304 li
67.7207 338.367 67.7417 338.435 67.7417 338.507 cv
67.7417 338.59 67.7158 338.659 67.6626 338.71 cv
67.6108 338.762 67.5425 338.789 67.4595 338.789 cv
67.3979 338.789 67.3296 338.757 67.2568 338.695 cv
64.3818 335.804 li
61.4756 338.695 li
61.4126 338.757 61.3457 338.789 61.2729 338.789 cv
61.1899 338.789 61.1216 338.759 61.0698 338.703 cv
61.0176 338.646 60.9917 338.581 60.9917 338.507 cv
0 0 0 .851 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
WOOECZ+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B7A73DB97C1FD4849B14157B765BEEE66B9438731A1E1DB
F6D904609867EBF49E3E19DC6BA786F7382AB36C8CFA3690DF4F8E7A258691DF
DD71792965BBA1DCE407BE309901C1513A762BED3C73A852D4EDA1BE20A2B364
C59E2224D36D9C8BEE5DE8D6C54C49D0F66DB7448A8FCE0E63D5DEE7BBBA026A
808CDA9AD5556005639017FF42B963FB833B4B64B6445B350600BDCDD563F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WOOECZ+TimesNewRomanPSMT /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/WOOECZ+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three /four /five 2{/.notdef}rp /eight 8{/.notdef}rp /A 
5{/.notdef}rp /G 5{/.notdef}rp /M /.notdef /O /P 16{/.notdef}rp 
/a /b /c /d /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /u /v /.notdef /x /y 
134{/.notdef}rp]
WOOECZ+TimesNewRomanPSMT nf
WOOECZ+TimesNewRomanPSMT*1 [18 -2.20436e-15 -2.20436e-15 -18 0 0 ]msf
69.9287 338.913 mo
(10)
[9 0 ]xsh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
86.9287 325.914 mo
(5)sh
0 325.125 mo
(\(c\))sh
0 lc
59.9385 547.897 mo
60.9487 547.914 li
.872374 .519982 0 0 cmyk
@
1 lc
60.9487 547.914 mo
67.0088 547.914 li
68.0186 547.897 li
69.0288 547.914 li
74.0786 547.914 li
75.0889 547.897 li
76.0986 547.914 li
79.1289 547.914 li
80.1387 547.897 li
81.1489 547.914 li
84.1787 547.914 li
85.1885 547.897 li
86.1987 547.914 li
89.2285 547.914 li
90.2388 547.897 li
91.2485 547.914 li
92.2588 547.897 li
93.2686 547.914 li
94.2788 547.897 li
95.2886 547.914 li
96.2988 547.897 li
97.3086 547.914 li
98.3188 547.897 li
99.3286 547.914 li
100.339 547.897 li
101.349 547.914 li
102.359 547.913 li
103.369 547.913 li
104.379 547.912 li
105.389 547.911 li
110.438 547.911 li
111.449 547.91 li
114.479 547.91 li
115.489 547.909 li
116.499 547.911 li
117.509 547.91 li
118.519 547.909 li
119.529 547.907 li
120.539 547.906 li
123.569 547.906 li
124.579 547.905 li
125.589 547.904 li
126.599 547.902 li
127.609 547.9 li
128.619 547.899 li
129.629 547.898 li
130.639 547.895 li
131.649 547.891 li
132.659 547.889 li
133.669 547.886 li
134.679 547.882 li
135.688 547.88 li
136.699 547.878 li
137.708 547.874 li
138.719 547.87 li
139.729 547.864 li
140.739 547.857 li
141.749 547.853 li
142.759 547.841 li
143.769 547.837 li
144.779 547.832 li
145.789 547.819 li
146.799 547.805 li
147.809 547.791 li
148.819 547.771 li
149.829 547.753 li
150.839 547.733 li
151.849 547.708 li
152.859 547.685 li
153.869 547.659 li
154.879 547.63 li
155.889 547.593 li
156.899 547.549 li
157.909 547.495 li
158.919 547.447 li
159.929 547.389 li
160.938 547.334 li
161.949 547.264 li
162.958 547.195 li
163.969 547.097 li
164.979 547.004 li
165.989 546.881 li
166.999 546.763 li
168.009 546.637 li
169.019 546.483 li
170.029 546.299 li
171.039 546.115 li
172.049 545.903 li
173.059 545.679 li
174.069 545.396 li
175.079 545.102 li
176.089 544.747 li
177.099 544.353 li
178.109 543.911 li
179.119 543.442 li
180.129 542.92 li
181.139 542.317 li
182.149 541.655 li
183.159 540.897 li
184.169 540.052 li
185.179 539.077 li
186.188 537.994 li
187.199 536.801 li
188.208 535.464 li
189.219 533.923 li
190.229 532.266 li
191.239 530.332 li
192.249 528.13 li
193.259 525.703 li
194.269 523.025 li
195.279 519.97 li
196.289 516.588 li
197.299 512.913 li
198.309 508.685 li
199.319 503.924 li
200.329 498.648 li
201.339 492.734 li
202.349 486.106 li
203.359 478.542 li
204.369 470.142 li
205.379 460.756 li
206.389 450.154 li
207.399 438.39 li
208.409 425.148 li
209.419 410.523 li
210.429 393.817 li
@
0 lc
210.429 393.817 mo
211.438 375.103 li
@
59.9385 547.897 mo
60.9487 547.914 li
0 .993286 1 0 cmyk
@
1 lc
60.9487 547.914 mo
63.9785 547.914 li
64.9888 547.897 li
65.9985 547.914 li
69.0288 547.914 li
70.0386 547.897 li
71.0488 547.914 li
74.0786 547.914 li
75.0889 547.897 li
76.0986 547.914 li
77.1089 547.914 li
78.1187 547.913 li
79.1289 547.914 li
80.1387 547.913 li
81.1489 547.914 li
83.1689 547.914 li
84.1787 547.897 li
85.1885 547.914 li
88.2188 547.914 li
89.2285 547.897 li
90.2388 547.914 li
93.2686 547.914 li
94.2788 547.897 li
95.2886 547.914 li
96.2988 547.897 li
97.3086 547.914 li
98.3188 547.897 li
99.3286 547.914 li
100.339 547.897 li
101.349 547.914 li
102.359 547.897 li
103.369 547.914 li
104.379 547.897 li
105.389 547.914 li
108.419 547.914 li
109.429 547.897 li
110.438 547.914 li
111.449 547.897 li
112.458 547.914 li
118.519 547.914 li
119.529 547.897 li
120.539 547.914 li
123.569 547.914 li
124.579 547.897 li
125.589 547.914 li
126.599 547.897 li
127.609 547.914 li
128.619 547.897 li
129.629 547.914 li
137.708 547.914 li
138.719 547.897 li
139.729 547.914 li
140.739 547.914 li
141.749 547.913 li
142.759 547.914 li
143.769 547.914 li
144.779 547.897 li
145.789 547.914 li
146.799 547.913 li
149.829 547.913 li
150.839 547.914 li
155.889 547.914 li
156.899 547.897 li
157.909 547.914 li
158.919 547.897 li
159.929 547.914 li
160.938 547.897 li
161.949 547.914 li
162.958 547.897 li
163.969 547.914 li
164.979 547.914 li
165.989 547.913 li
166.999 547.914 li
168.009 547.914 li
169.019 547.913 li
170.029 547.913 li
171.039 547.914 li
174.069 547.914 li
175.079 547.897 li
176.089 547.914 li
179.119 547.914 li
180.129 547.897 li
181.139 547.914 li
182.149 547.897 li
183.159 547.914 li
186.188 547.914 li
187.199 547.897 li
188.208 547.914 li
191.239 547.914 li
192.249 547.897 li
193.259 547.914 li
196.289 547.914 li
197.299 547.897 li
198.309 547.914 li
199.319 547.897 li
200.329 547.914 li
201.339 547.914 li
202.349 547.913 li
203.359 547.914 li
204.369 547.914 li
205.379 547.913 li
206.389 547.914 li
207.399 547.913 li
208.409 547.913 li
209.419 547.914 li
211.438 547.914 li
212.449 547.897 li
213.458 547.914 li
214.469 547.897 li
215.479 547.913 li
222.549 547.913 li
223.559 547.914 li
225.579 547.914 li
226.589 547.897 li
227.599 547.914 li
228.609 547.897 li
229.619 547.913 li
230.629 547.913 li
231.639 547.912 li
232.649 547.911 li
235.679 547.911 li
236.688 547.91 li
238.708 547.91 li
239.719 547.909 li
242.749 547.909 li
243.759 547.908 li
244.769 547.907 li
245.779 547.905 li
@
245.779 547.905 mo
246.789 547.904 li
247.799 547.902 li
248.809 547.9 li
249.819 547.899 li
250.829 547.899 li
251.839 547.896 li
252.849 547.895 li
253.859 547.894 li
254.869 547.89 li
256.889 547.884 li
257.899 547.879 li
258.909 547.875 li
259.919 547.871 li
260.929 547.865 li
261.938 547.858 li
262.949 547.848 li
@
262.949 547.848 mo
263.958 547.838 li
264.969 547.829 li
265.979 547.812 li
266.989 547.801 li
267.999 547.787 li
269.009 547.775 li
270.019 547.757 li
271.029 547.742 li
272.039 547.717 li
273.049 547.699 li
274.059 547.672 li
275.069 547.641 li
276.079 547.607 li
277.089 547.572 li
278.099 547.536 li
279.109 547.479 li
280.119 547.417 li
281.129 547.369 li
282.139 547.296 li
283.149 547.222 li
284.159 547.151 li
285.169 547.066 li
286.179 546.962 li
287.188 546.839 li
288.199 546.713 li
289.208 546.558 li
290.219 546.387 li
291.229 546.199 li
292.239 546.015 li
293.249 545.765 li
294.259 545.504 li
295.269 545.235 li
296.279 544.922 li
297.289 544.565 li
298.299 544.154 li
299.309 543.708 li
300.319 543.19 li
301.329 542.613 li
302.339 541.954 li
303.349 541.225 li
304.359 540.421 li
305.369 539.568 li
306.379 538.567 li
307.389 537.497 li
308.399 536.257 li
309.409 534.816 li
310.419 533.284 li
311.429 531.524 li
312.438 529.537 li
313.449 527.336 li
314.458 524.813 li
315.469 521.922 li
316.479 518.683 li
317.489 515.072 li
318.499 511.006 li
319.509 506.571 li
320.519 501.536 li
321.529 495.945 li
322.539 489.528 li
323.549 482.39 li
324.559 474.272 li
325.569 465.221 li
326.579 455.048 li
327.589 443.675 li
328.599 430.958 li
329.609 416.7 li
330.619 400.409 li
331.629 382.299 li
@
0 lc
331.629 382.299 mo
332.639 362.107 li
@
456.929 341.914 mo
758.929 341.914 li
758.929 547.914 li
456.929 547.914 li
456.929 341.914 li
cp
0 0 0 0 cmyk
f
2 lc
456.929 547.914 mo
758.929 547.914 li
456.929 341.914 mo
758.929 341.914 li
456.929 547.914 mo
456.929 544.894 li
532.429 547.914 mo
532.429 544.894 li
607.929 547.914 mo
607.929 544.894 li
683.429 547.914 mo
683.429 544.894 li
758.929 547.914 mo
758.929 544.894 li
456.929 341.914 mo
456.929 344.933 li
532.429 341.914 mo
532.429 344.933 li
607.929 341.914 mo
607.929 344.933 li
683.429 341.914 mo
683.429 344.933 li
758.929 341.914 mo
758.929 344.933 li
0 0 0 .851 cmyk
@
0 0 0 1 cmyk
WOOECZ+TimesNewRomanPSMT*1 [18 -2.20436e-15 -2.20436e-15 -18 0 0 ]msf
535.448 588.802 mo
(Generation number)
[12.999 7.98926 9 7.98926 5.99414 7.98926 5.00098 5.00098 9 9 4.5 9 
9 14.001 9 7.98926 0 ]xsh
456.929 547.914 mo
456.929 341.914 li
758.929 547.914 mo
758.929 341.914 li
456.929 547.914 mo
459.948 547.914 li
456.929 465.513 mo
459.948 465.513 li
456.929 383.114 mo
459.948 383.114 li
758.929 547.914 mo
755.909 547.914 li
758.929 465.513 mo
755.909 465.513 li
758.929 383.114 mo
755.909 383.114 li
0 0 0 .851 cmyk
@
0 0 0 1 cmyk
WOOECZ+TimesNewRomanPSMT*1 [18 -2.20436e-15 -2.20436e-15 -18 0 0 ]msf
444.129 553.413 mo
(0)sh
WOOECZ+TimesNewRomanPSMT*1 [18 -2.20436e-15 -2.20436e-15 -18 0 0 ]msf
436.129 471.013 mo
(10)
[9 0 ]xsh
WOOECZ+TimesNewRomanPSMT*1 [18 -2.20436e-15 -2.20436e-15 -18 0 0 ]msf
436.129 388.613 mo
(20)
[9 0 ]xsh
WOOECZ+TimesNewRomanPSMT*1 [-1.10218e-15 -18 -18 1.10218e-15 0 0 ]msf
429.128 518.412 mo
(Most complex agent)
[-16.0049 -9 -7.00488 -5.00098 -4.5 -7.98926 -9 -14.001 -9 -5.00098 -7.98926 -9 
-4.5 -7.98926 -9 -7.98926 -9 0 ]ysh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
388.429 320.825 mo
(\(d\))sh
0 lc
457.684 539.673 mo
459.948 531.433 li
.872374 .519982 0 0 cmyk
@
1 lc
459.948 531.433 mo
467.499 523.194 li
475.804 514.954 li
482.976 506.713 li
499.209 498.473 li
515.063 490.234 li
523.369 481.994 li
532.807 473.753 li
538.846 465.513 li
553.946 457.274 li
562.252 449.034 li
577.351 440.793 li
590.941 432.553 li
601.512 424.314 li
609.062 416.074 li
620.387 407.833 li
631.334 399.593 li
643.414 391.354 li
644.546 383.114 li
655.872 374.874 li
674.747 366.633 li
684.562 358.394 li
700.416 350.154 li
@
0 lc
700.416 350.154 mo
709.099 341.914 li
@
1 lw
0 lj
460.184 539.173 mo
460.184 537.516 458.841 536.173 457.184 536.173 cv
455.526 536.173 454.184 537.516 454.184 539.173 cv
454.184 540.831 455.526 542.173 457.184 542.173 cv
458.841 542.173 460.184 540.831 460.184 539.173 cv
462.448 530.933 mo
462.448 529.277 461.105 527.933 459.448 527.933 cv
457.792 527.933 456.448 529.277 456.448 530.933 cv
456.448 532.59 457.792 533.933 459.448 533.933 cv
461.105 533.933 462.448 532.59 462.448 530.933 cv
469.999 522.694 mo
469.999 521.037 468.655 519.694 466.999 519.694 cv
465.342 519.694 463.999 521.037 463.999 522.694 cv
463.999 524.35 465.342 525.694 466.999 525.694 cv
468.655 525.694 469.999 524.35 469.999 522.694 cv
478.304 514.454 mo
478.304 512.796 476.961 511.454 475.304 511.454 cv
473.646 511.454 472.304 512.796 472.304 514.454 cv
472.304 516.111 473.646 517.454 475.304 517.454 cv
476.961 517.454 478.304 516.111 478.304 514.454 cv
485.476 506.213 mo
485.476 504.556 484.134 503.213 482.476 503.213 cv
480.819 503.213 479.476 504.556 479.476 506.213 cv
479.476 507.871 480.819 509.213 482.476 509.213 cv
484.134 509.213 485.476 507.871 485.476 506.213 cv
501.709 497.973 mo
501.709 496.317 500.366 494.973 498.709 494.973 cv
497.052 494.973 495.709 496.317 495.709 497.973 cv
495.709 499.63 497.052 500.973 498.709 500.973 cv
500.366 500.973 501.709 499.63 501.709 497.973 cv
517.563 489.734 mo
517.563 488.077 516.221 486.734 514.563 486.734 cv
512.907 486.734 511.563 488.077 511.563 489.734 cv
511.563 491.39 512.907 492.734 514.563 492.734 cv
516.221 492.734 517.563 491.39 517.563 489.734 cv
525.869 481.494 mo
525.869 479.836 524.525 478.494 522.869 478.494 cv
521.212 478.494 519.869 479.836 519.869 481.494 cv
519.869 483.151 521.212 484.494 522.869 484.494 cv
524.525 484.494 525.869 483.151 525.869 481.494 cv
535.307 473.253 mo
535.307 471.596 533.964 470.253 532.307 470.253 cv
530.649 470.253 529.307 471.596 529.307 473.253 cv
529.307 474.911 530.649 476.253 532.307 476.253 cv
533.964 476.253 535.307 474.911 535.307 473.253 cv
541.346 465.013 mo
541.346 463.357 540.003 462.013 538.346 462.013 cv
536.688 462.013 535.346 463.357 535.346 465.013 cv
535.346 466.67 536.688 468.013 538.346 468.013 cv
540.003 468.013 541.346 466.67 541.346 465.013 cv
556.446 456.774 mo
556.446 455.117 555.104 453.774 553.446 453.774 cv
551.79 453.774 550.446 455.117 550.446 456.774 cv
550.446 458.43 551.79 459.774 553.446 459.774 cv
555.104 459.774 556.446 458.43 556.446 456.774 cv
564.752 448.534 mo
564.752 446.876 563.407 445.534 561.752 445.534 cv
560.095 445.534 558.752 446.876 558.752 448.534 cv
558.752 450.191 560.095 451.534 561.752 451.534 cv
563.407 451.534 564.752 450.191 564.752 448.534 cv
579.851 440.293 mo
579.851 438.636 578.508 437.293 576.851 437.293 cv
575.194 437.293 573.851 438.636 573.851 440.293 cv
573.851 441.951 575.194 443.293 576.851 443.293 cv
578.508 443.293 579.851 441.951 579.851 440.293 cv
593.441 432.053 mo
593.441 430.397 592.099 429.053 590.441 429.053 cv
588.785 429.053 587.441 430.397 587.441 432.053 cv
587.441 433.71 588.785 435.053 590.441 435.053 cv
592.099 435.053 593.441 433.71 593.441 432.053 cv
604.012 423.814 mo
604.012 422.157 602.669 420.814 601.012 420.814 cv
599.354 420.814 598.012 422.157 598.012 423.814 cv
598.012 425.47 599.354 426.814 601.012 426.814 cv
602.669 426.814 604.012 425.47 604.012 423.814 cv
611.562 415.574 mo
611.562 413.917 610.219 412.574 608.562 412.574 cv
606.904 412.574 605.562 413.917 605.562 415.574 cv
605.562 417.231 606.904 418.574 608.562 418.574 cv
610.219 418.574 611.562 417.231 611.562 415.574 cv
622.887 407.333 mo
622.887 405.676 621.544 404.333 619.887 404.333 cv
618.229 404.333 616.887 405.676 616.887 407.333 cv
616.887 408.991 618.229 410.333 619.887 410.333 cv
621.544 410.333 622.887 408.991 622.887 407.333 cv
633.834 399.093 mo
633.834 397.437 632.491 396.093 630.834 396.093 cv
629.177 396.093 627.834 397.437 627.834 399.093 cv
627.834 400.75 629.177 402.093 630.834 402.093 cv
632.491 402.093 633.834 400.75 633.834 399.093 cv
645.914 390.854 mo
645.914 389.197 644.57 387.854 642.914 387.854 cv
641.257 387.854 639.914 389.197 639.914 390.854 cv
639.914 392.51 641.257 393.854 642.914 393.854 cv
644.57 393.854 645.914 392.51 645.914 390.854 cv
647.046 382.614 mo
647.046 380.957 645.703 379.614 644.046 379.614 cv
642.39 379.614 641.046 380.957 641.046 382.614 cv
641.046 384.271 642.39 385.614 644.046 385.614 cv
645.703 385.614 647.046 384.271 647.046 382.614 cv
658.372 374.374 mo
658.372 372.716 657.027 371.374 655.372 371.374 cv
653.715 371.374 652.372 372.716 652.372 374.374 cv
652.372 376.031 653.715 377.374 655.372 377.374 cv
657.027 377.374 658.372 376.031 658.372 374.374 cv
677.247 366.133 mo
677.247 364.477 675.903 363.133 674.247 363.133 cv
672.59 363.133 671.247 364.477 671.247 366.133 cv
671.247 367.791 672.59 369.133 674.247 369.133 cv
675.903 369.133 677.247 367.791 677.247 366.133 cv
687.062 357.894 mo
687.062 356.237 685.719 354.894 684.062 354.894 cv
682.404 354.894 681.062 356.237 681.062 357.894 cv
681.062 359.55 682.404 360.894 684.062 360.894 cv
685.719 360.894 687.062 359.55 687.062 357.894 cv
702.917 349.654 mo
702.917 347.997 701.573 346.654 699.917 346.654 cv
698.26 346.654 696.917 347.997 696.917 349.654 cv
696.917 351.311 698.26 352.654 699.917 352.654 cv
701.573 352.654 702.917 351.311 702.917 349.654 cv
711.599 341.414 mo
711.599 339.756 710.256 338.414 708.599 338.414 cv
706.941 338.414 705.599 339.756 705.599 341.414 cv
705.599 343.071 706.941 344.414 708.599 344.414 cv
710.256 344.414 711.599 343.071 711.599 341.414 cv
@
.5 lw
457.684 539.673 mo
459.193 531.433 li
0 .993286 1 0 cmyk
@
1 lc
1 lj
459.193 531.433 mo
519.971 523.194 li
527.898 514.954 li
534.693 506.713 li
553.568 498.473 li
560.741 490.234 li
570.557 481.994 li
585.278 473.753 li
590.941 465.513 li
596.226 457.274 li
604.53 449.034 li
622.65 440.793 li
631.334 432.553 li
645.679 424.314 li
657.382 416.074 li
664.554 407.833 li
673.991 399.593 li
682.674 391.354 li
697.019 383.114 li
714.762 374.874 li
717.78 366.633 li
730.994 358.394 li
745.339 350.154 li
@
0 lc
745.339 350.154 mo
753.267 341.914 li
@
1 lw
0 lj
460.184 539.173 mo
460.184 537.516 458.841 536.173 457.184 536.173 cv
455.526 536.173 454.184 537.516 454.184 539.173 cv
454.184 540.831 455.526 542.173 457.184 542.173 cv
458.841 542.173 460.184 540.831 460.184 539.173 cv
461.693 530.933 mo
461.693 529.277 460.351 527.933 458.693 527.933 cv
457.037 527.933 455.693 529.277 455.693 530.933 cv
455.693 532.59 457.037 533.933 458.693 533.933 cv
460.351 533.933 461.693 532.59 461.693 530.933 cv
522.471 522.694 mo
522.471 521.037 521.129 519.694 519.471 519.694 cv
517.813 519.694 516.471 521.037 516.471 522.694 cv
516.471 524.35 517.813 525.694 519.471 525.694 cv
521.129 525.694 522.471 524.35 522.471 522.694 cv
530.398 514.454 mo
530.398 512.796 529.056 511.454 527.398 511.454 cv
525.741 511.454 524.398 512.796 524.398 514.454 cv
524.398 516.111 525.741 517.454 527.398 517.454 cv
529.056 517.454 530.398 516.111 530.398 514.454 cv
537.193 506.213 mo
537.193 504.556 535.851 503.213 534.193 503.213 cv
532.537 503.213 531.193 504.556 531.193 506.213 cv
531.193 507.871 532.537 509.213 534.193 509.213 cv
535.851 509.213 537.193 507.871 537.193 506.213 cv
556.068 497.973 mo
556.068 496.317 554.726 494.973 553.068 494.973 cv
551.412 494.973 550.068 496.317 550.068 497.973 cv
550.068 499.63 551.412 500.973 553.068 500.973 cv
554.726 500.973 556.068 499.63 556.068 497.973 cv
563.241 489.734 mo
563.241 488.077 561.897 486.734 560.241 486.734 cv
558.585 486.734 557.241 488.077 557.241 489.734 cv
557.241 491.39 558.585 492.734 560.241 492.734 cv
561.897 492.734 563.241 491.39 563.241 489.734 cv
573.057 481.494 mo
573.057 479.836 571.714 478.494 570.057 478.494 cv
568.399 478.494 567.057 479.836 567.057 481.494 cv
567.057 483.151 568.399 484.494 570.057 484.494 cv
571.714 484.494 573.057 483.151 573.057 481.494 cv
587.778 473.253 mo
587.778 471.596 586.436 470.253 584.778 470.253 cv
583.122 470.253 581.778 471.596 581.778 473.253 cv
581.778 474.911 583.122 476.253 584.778 476.253 cv
586.436 476.253 587.778 474.911 587.778 473.253 cv
593.441 465.013 mo
593.441 463.357 592.099 462.013 590.441 462.013 cv
588.785 462.013 587.441 463.357 587.441 465.013 cv
587.441 466.67 588.785 468.013 590.441 468.013 cv
592.099 468.013 593.441 466.67 593.441 465.013 cv
598.727 456.774 mo
598.727 455.117 597.384 453.774 595.727 453.774 cv
594.069 453.774 592.727 455.117 592.727 456.774 cv
592.727 458.43 594.069 459.774 595.727 459.774 cv
597.384 459.774 598.727 458.43 598.727 456.774 cv
607.03 448.534 mo
607.03 446.876 605.688 445.534 604.03 445.534 cv
602.374 445.534 601.03 446.876 601.03 448.534 cv
601.03 450.191 602.374 451.534 604.03 451.534 cv
605.688 451.534 607.03 450.191 607.03 448.534 cv
625.15 440.293 mo
625.15 438.636 623.809 437.293 622.15 437.293 cv
620.494 437.293 619.15 438.636 619.15 440.293 cv
619.15 441.951 620.494 443.293 622.15 443.293 cv
623.809 443.293 625.15 441.951 625.15 440.293 cv
633.834 432.053 mo
633.834 430.397 632.491 429.053 630.834 429.053 cv
629.177 429.053 627.834 430.397 627.834 432.053 cv
627.834 433.71 629.177 435.053 630.834 435.053 cv
632.491 435.053 633.834 433.71 633.834 432.053 cv
648.179 423.814 mo
648.179 422.157 646.836 420.814 645.179 420.814 cv
643.521 420.814 642.179 422.157 642.179 423.814 cv
642.179 425.47 643.521 426.814 645.179 426.814 cv
646.836 426.814 648.179 425.47 648.179 423.814 cv
659.882 415.574 mo
659.882 413.917 658.538 412.574 656.882 412.574 cv
655.225 412.574 653.882 413.917 653.882 415.574 cv
653.882 417.231 655.225 418.574 656.882 418.574 cv
658.538 418.574 659.882 417.231 659.882 415.574 cv
667.054 407.333 mo
667.054 405.676 665.711 404.333 664.054 404.333 cv
662.396 404.333 661.054 405.676 661.054 407.333 cv
661.054 408.991 662.396 410.333 664.054 410.333 cv
665.711 410.333 667.054 408.991 667.054 407.333 cv
676.491 399.093 mo
676.491 397.437 675.147 396.093 673.491 396.093 cv
671.835 396.093 670.491 397.437 670.491 399.093 cv
670.491 400.75 671.835 402.093 673.491 402.093 cv
675.147 402.093 676.491 400.75 676.491 399.093 cv
685.174 390.854 mo
685.174 389.197 683.831 387.854 682.174 387.854 cv
680.517 387.854 679.174 389.197 679.174 390.854 cv
679.174 392.51 680.517 393.854 682.174 393.854 cv
683.831 393.854 685.174 392.51 685.174 390.854 cv
699.519 382.614 mo
699.519 380.957 698.176 379.614 696.519 379.614 cv
694.861 379.614 693.519 380.957 693.519 382.614 cv
693.519 384.271 694.861 385.614 696.519 385.614 cv
698.176 385.614 699.519 384.271 699.519 382.614 cv
717.262 374.374 mo
717.262 372.716 715.919 371.374 714.262 371.374 cv
712.604 371.374 711.262 372.716 711.262 374.374 cv
711.262 376.031 712.604 377.374 714.262 377.374 cv
715.919 377.374 717.262 376.031 717.262 374.374 cv
720.28 366.133 mo
720.28 364.477 718.938 363.133 717.28 363.133 cv
715.624 363.133 714.28 364.477 714.28 366.133 cv
714.28 367.791 715.624 369.133 717.28 369.133 cv
718.938 369.133 720.28 367.791 720.28 366.133 cv
733.494 357.894 mo
733.494 356.237 732.15 354.894 730.494 354.894 cv
728.837 354.894 727.494 356.237 727.494 357.894 cv
727.494 359.55 728.837 360.894 730.494 360.894 cv
732.15 360.894 733.494 359.55 733.494 357.894 cv
747.839 349.654 mo
747.839 347.997 746.496 346.654 744.839 346.654 cv
743.182 346.654 741.839 347.997 741.839 349.654 cv
741.839 351.311 743.182 352.654 744.839 352.654 cv
746.496 352.654 747.839 351.311 747.839 349.654 cv
755.767 341.414 mo
755.767 339.756 754.424 338.414 752.767 338.414 cv
751.109 338.414 749.767 339.756 749.767 341.414 cv
749.767 343.071 751.109 344.414 752.767 344.414 cv
754.424 344.414 755.767 343.071 755.767 341.414 cv
@
0 0 0 1 cmyk
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
57.2256 562.814 mo
(0)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
146.546 562.814 mo
(100)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
247.828 562.814 mo
(200)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
348.899 562.814 mo
(300)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
453.184 562.814 mo
(0)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
519.399 562.814 mo
(200)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
594.727 562.814 mo
(400)sh
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
WOOECZ+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7A73DB682174C160AB8115D90A4524BD5B352C23110F23E
E4E20266716093AE0643A076F6C57BA527F49BB819243E28C4CA7F711F41FA01
318856C15674E51D546E83D25FE9DB7A4B9EDFDDE57E488CC507C2304526D6E8
0E07D1EEFCA86373B2F664DD3DA4646061C700F112AB44ED3896FA596FE81443
6AD1F1DC5FEDB207A575A17735F66E79BF0D0E423C92F1E9255D38F15B49459F
3693E95DCE92EBF25C243713EDA9138A49C42AA83683249878EEA825672AC6D9
9C32B9109B3D5797A7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
WOOECZ+TimesNewRomanPSMT /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/WOOECZ+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 6{/.notdef}rp /zero /one 
/two /three /four /five /six /.notdef /eight 8{/.notdef}rp 
/A 5{/.notdef}rp /G 5{/.notdef}rp /M /.notdef /O /P 
16{/.notdef}rp /a /b /c /d /e /.notdef /g 
/.notdef /i 2{/.notdef}rp /l /m /n /o /p 
/.notdef /r /s /t /u /v /.notdef /x 
/y 134{/.notdef}rp]
WOOECZ+TimesNewRomanPSMT nf
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
669.491 562.814 mo
(600)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
745.045 562.814 mo
(800)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
54.4863 276.914 mo
(0)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
106.026 276.914 mo
(100)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
226.828 276.713 mo
(300)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
347.899 276.713 mo
(500)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
452.561 277.014 mo
(0)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
504.1 277.014 mo
(100)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
624.901 276.813 mo
(300)sh
WOOECZ+TimesNewRomanPSMT*1 [18 0 0 -18 0 0 ]msf
744.973 276.813 mo
(500)sh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/WOOECZ+TimesNewRomanPSMT*1 uf
/WOOECZ+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 17.0
%%AI8_CreatorVersion: 22.1.0
%%For: (Evrim Selin Altinkaynak) ()
%%Title: (figfile.eps)
%%CreationDate: 3/31/18 4:24 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&kBcDSYQ/uVJ9Qemo]AJ96E^[r&e`V[%%';Y0sKDnqs7D'*SZsecT^N(I1*82CG\JTR?9sZ3qJ9SHn_.Ak8/WEcD$.O.Xm[k
%W3[<UYrSB*nNFA0PR*CkMG>G=(``d66ZeJ_7\U:pXqD-\U8So'O\$l@"][7M,fN13&Xl>1US,3XU;*+9o6#suoXWMPYa@'<<U-[T
%2`j79A\Z%pp?[L&:)ADOjelpEU3NNIR'/g'L[g=-27Pm>(Gg6kC>V3'MR5=cj`J]UN/Qh5d;F4ljiRs[`idWQqabsqU:^6GGWKMS
%Aj)/MSH39ZD5N40pp^AW"-%uKiU(m!2?S0Wgj0Ec!W[d4S;#^a)^SPCDC?Pt`b?n8"5f5O/.1g`i^kU;U#T*/(5X:\kRIoj`?KC\
%Oc7;Ci(fH2,1/B8,bl%eUSoupgHG9o?EJKr4^Q>s]L'g:`H&uh'*oZW99RM%N+DFa#B$u?Z>0s?.hX-qd5-NQ^o-2$:_M+VQ&7BU
%!<k\#A/ouKeqdmJSoK7=\Na#*XTGBC6`jV5,gGlFp@o^p,:X<L8c4F;gi'&0s#;)fINY(+n[l8g!B12DV>&/3p05<9<$6\M!Y6j^
%c)lOF/uBRYKbS3tn-JNbcMl'S0g`9FnSTDpCC]:Hf:^gQnZ_lqGRWHoI]l[8\gcEpk)u2u/34'5+@VEd#T8[l&nE2XN5s6'Ys^"+
%TLa%<OCTmH(^!%OB+u@6cf.geN/jS911q1gC,I;e$;JW:f,R![]F^S(57"kX+*9R]F)IY(+%>ZBFHLT`+MfWPdnP9"8=-&Is2VEO
%iPu%'eDp1(!e2?\^imOYMFu<-P"o2oP=0oj(_obA&_bAJ9K+(?COh,[C:[WZ<HLS`FPFfpIMdX-4D2]2`+[Lu+I!1_+qfhY]4OuS
%aVY[QX)`]\jo8Y./"73\OC@'[/-\>&8bcF:Lj'^@IPVC[atW<6_r.Gs'8USG@LV65]Sa[9WE9RpMT*_LZ-HkmQ:WE3)2KG`4.1bu
%P"Aa_rdpcH<1s:b'ajHT6308!'O[>L)*TX=@kmb%\I>*sbP3+5@bb;F*XiWFKl;jp)5&Y@-S,F@JtK7]`(@l]5D'fh:KRg1"@"'d
%+sl`j&1@5ZY96=('@qj$KPQ;Z_,#kGr.]D=:(SbL-AE%(6+l,'/5n1=HQmrIb;"u2'eu!3-[l_=Na%S!Nn];^_j63C&kh.I=:4$m
%5@I9RK,AD%%!)i+_bq%1Oi*P9pg&[tr.J,_43W3LM-CJY^e\&>iWh\&(U934\mkFGU*p,JjeD[/4N$R(</7;(h*eh^b]2rWbAk-J
%>[4VV03gjAK4Q0KU1?UWi7f)ar"S,q5@Gulh[i"G'DsK\KOl9L2Q%tV@c,"d_[s%oM_Zj+MC<>Gj]GEb/;X6kj=-rfDB5T8L5Y:#
%>:sqa`!s0rQ4fnOg@>(83W?oJa#t)/1Zg]p%BcC`ril=C]cFjtF,IY2mTCa)AD,#O/]taXJ+.;XL;]Z9F'5<EbQlcEOco3NR2TO=
%`V,1.EP;-A0Gk,M)@j"H(]L1Dr'^P(IrMWIJ+>PtZT4dXHq41UJ+5M4QG;rs65V-a#n_>Iprhdg'DWUIjn&7Nrl0FGB<d9]aPZcr
%<5R8X2uY%u5HN0Sn),SU/%ue&n2J.DNYE\bE\U%MbOK&S=>&bLjW^+G=5Z.MYB($F)j\PkL&[!M3D.2ul+$LQ?B!=jN<m7Ms)JGA
%WH\s('S/,l;%>pM`f%'Mpb,7_hmimhKJeW_`&Gk.MM+k.>?3@G$GsJ=i-eAsO5@d^6tlo-QH%gdjl0R!AJ/I)n!&`(!TG/si>kaq
%:a>mjmm8"1:*iZ6NW^non;foK_05sHLLjjFEh*b"W3qRuW;Vc]M4k7MMI[4Sa1QtJ$VuZhi"![=;1XDp+9n3;9L5Hb;hWesFs)6D
%#jVG9pU:)hN`dk]PXAEc4FhA1G$B<#q]GFal@/puL1u\0>bG1?F':li,!uZYNa[qsT4'na]T]#6A@s2/&H%9)K`$iZ\W,\c^IqM8
%YCO*)\W,mm/WF3h.H&'l-c1VB?s,Ns.c^r!68"TQjIo90P5(#'*n4'<Bmh&]NGk$p5Yc?a+>7;.L\b5P!gIKEDlG&f6:2H[&E]5,
%$N*Rb"5%B3hDt?HluVYJ)SD?%HDaRqVA=i`BK(q."tc^83Iin6:GY',_09<:=ECX\i0%%R9<'ND.a#VW;NAd_Ba.fWjgN>PJGgF.
%L8#gH?oq21e8d#f]X,j?=>q)aU'tckWY<Pom[:RK!551[/Q9:fI<KioM/akr&oj%'9)1df9ZE!p/inlhUXTca&[iKP*q5]F@nN\u
%#A^62$k(df#f_gj>Y`X772"lc7]8i<[>G/*(6VW([>%RC`LIZb\PQ?O!_O1R\gVkQC,Jr*'Vpug_bu*[6LYAnI$'6dE@TBKl0SV.
%.,p$9SPZ[td3;`*!o#,Y8sPYn&t\,!K-$ti7AVGtYR<IA-S--6[TojN`7@G"3VYLG^QCqC3chMe'cD%]LO`m55=$pM;7Uh4XQ2&m
%1"GKtZDX#-&NHNG.ACGUj/6Pqp^OfP1(hM%'%W-#Q:iJ8SW`48W#hMjrXSfTHoh[\SD<7se05%'^`[?JbO7g#-u*ooXUHVIK4Po)
%;[SSQK&jl_>kB$0mqlnhNk's)d6\oHHAG3hh7e+GpG#5PUDP)G-)+j!`VU;*@gESF)eoW)^5+=Q;YspZO,682e/Ydn_DVeA]>,\[
%GT=jhib2ZO\hY3""mY'/+btAJ'U;BbOt+QkJkcEe%O;1b^SmA#C_&"+%8e"MZA`<VWTGt52Q/2O85WOC2J@A,qEf"$)0(Rtod'<d
%1^K;/lbn3FiXgh$Ot_q''ZX!`W26:%?/V+N)pnhL-r?ZhE8AqK9O<lNWIG!gU!Z@"?;.`qn9ZWh65g4XN==_pSk!c2`;%G.'tp)g
%)URVW80p+_q)1'_JV^)j9XM%3>"+)jpGB8eKV9O'$]RMg3(aXE'<G$c)mM6YqB=*P$.lObJq<f__YSf6XC-<%n*6/lGod^i`]d(!
%PU*r*H8WdJGJR0d#H97VpLT29JokIo#16Z'=#sE.$sS$:N]f-*Dan_.7*R!'DX\I,c^\Ap^mY\8Z)sCtpiZt1`HNH,-/F`KBS3FX
%KOc7ck@3llqem?f#DFdsoW[hnXAe./(m9WY3CQJ@-Xk+4rCX.U"oTWjPG6p1&`1$fUl2"B^Eo0ZT>R,^(bUmJ=n"??Em)N[`:UiK
%)#cjF/^he9"boZY57pKqp)mpb;LA_W/S6V^l<Y[^9<_<mr#TcdCJa(h?IfH#;qZp@BnS&K9G,Z-_3,/KiSUrd&7Q$G,btn;Ts1?V
%^P\<iVI!Mb4,=rinie&liBMBj;B4$-WFk,(,a$)b)o4:b%=Op<6s0TGTk$L>)R9j88"sj6jg(.i73C!-$iSb[%`oNo#Ru2+lu:.e
%hM6JC6,"OPYD)f\Q;<D3'`O.s<Y3;+C&AOr9FF$u::A#[@\b=ufY1Hcl([+H0rd1UU=H+0@t[qsSJUaq4U]c'U\J\'C8&<bBdNj-
%ne'&91C7A4=VNFh0bu)1?0InsT1]"cD%U2$%@G*$=1'q0eql6iQ5Aad6JE5YRM\9U9p#`RNs`""o#`isDjN/$kj>;K:Z*&[;[hB2
%@stY20'](!P,m5F=3-qGBdrFC$KI-A':#OEp'%_?P)gZNocCQ0[-c!bHj[q4Ct[j[;+*g:(_eud$W]C@?_WKW8O5Q#ReVTRa-!)q
%>A_f(&QOpd@YmTS;d"o[Wta9H9):h5d$>tffS`0Tf!4>dA#WeHn0f^KClqabHpq]nUYqeU_(,;j&7*aM7"#O=#"].YSgo1.abuj7
%D:M8c]g!t22,$A:IfWJN.q^p5&(#>'59\HC`RUJYael&=akW"JNac.IJ]TTbF:;q3dJ&aZ'"En&@jqIceC"oG(@*^9ZjATYIL@.9
%d:,\]j]9Op+F.W,Tmu)>V$s%KQ]gja90HF\2m;pBYtYP-'8lco2JP8C^ZBf?bQ;K>0`n<E@b#U1YGNkh9@]/4<5,FR(W=B3NTWKi
%qE1os<EVU8nX6[_GXN/)>g&Q+[VVZm5h7kBVC#/7SF;7`lVWW]#t4tfd(&ZAXVieRW7KOuYVl9Xj?nf.l*a)R+o&JkBe_n`an<U%
%n-+eUL@GOO9%7WS3@2=k%QnRNTNF#"WM3]1,L<`?XOa`tnV9G[/1K!%TWAh4'k/8@IY(i6,o+GN;5E"25CQAfp;,Y])r&H.*JEgW
%*/Yb04B1P^Z1lHA(%W_Le4'2J]Np`\^=$'3]HQ3lB&qtJF^Stq7fBT_Npd;jS`1SNMo#E)Du%,as"7e7<3h0u=C9-l.SH(ihmP[D
%,gJ#W0bWq*27D.17&XZ?MP/I^Gbu$8/''mp]E\4;ECYCD.%:on*A.`sBK;dUW8h>?&So;`5P?k;O,`h)-uHK]@QTZPN!ONg4>lq<
%.%(e6<*%616E4bgaAGkeNUV3kO=/0)/rCQMjG,]YW3>`@jZ"adck(Er[clt4T",IuV.WO21dF5[^]TR+W-tn/GYb+P/OlT;[7/DF
%i'nE%!rCfqVO-F$E#Zaq@N2Pl0(PR!jBQ'kom.&c9#)CkdX2$rDrG&W`=+@l>`%dX>5Vj@pr:XUhrmY$>Aoh92]Iqhs)&TfDDe#8
%:V!fB/H!c!IrK@`=?&5VF$+]Q$Kl['3*bZgKCO'+L.c?4Zf],aolrOU_G.;&/c7$1_;ZXiW\)Hga*`@m)c!rY_Q6uH^X&XsqdSY,
%HIEYln>i)=<DIj_N2n&\11Nb@YuG=qWjdZu\Ej9`>q!iJUp:B`PRT7V_*p;';-S8iPo[*dh]*^ZJ-L%!\.@dD?EH5:$F*]QICL%K
%gtPN#gcE)YGt<MJ-k+t"Z1C8"$E1n<[B#t/6+F[3rlpM=8*fZ5B*TD]]c+n-OMHS4MtMT>L3'21F#@N1,F`dj3SgcKj7u.s,_#d<
%c,6lIp9nh=SG9eU#=Au#24emYpP`DN2cFrE(1=t,!W)8>><sM>Ma-B5m]ZVSSY;Z@]#K/A$=8hN)GV*!\_GC(h>gStZc.75%G1.c
%V?AiKNgC=KeWT<@i>cH!:(T>BWt\l*)4;"#PJZ)`I3Cl\,Y"&V(V!4^-/Za%#NJ%g:d?;#8MkpZILUQ<F0r=5(T=1/Vb$2E=/\/a
%GW5m5$fV10LR/"d@K6Q7nQP?n4a+e9%7D#*k^'VgXFQ,Z_E!=+Q5%)T=>EKHj%>[q21309'\AdQW.k[;EM98(4q[610(F`j4=[CW
%`/b+a;leG.XEY[?@`J+e..99RMm7][+`Ndf4k^YmD<B_,^R7gLbo65l`LNENq^d!<p/")6Dkkq?LXg"VV9U";+^SZ<e5U/=?bg7H
%WO)$DdWM,"lu1kM@c?\jnbV1!<t#Au7M3kt"2Ee9ra'WR2_%9'?2TY=1LWNumWZQD_*on;Se"+g=oYVfJ<2ml!77>X$Q0F-CfH"<
%r=J1DopD9[`ku4%i&O0Jf#(.01"c,LQ5G5mf21@Ul4_9YF2iX7B/V4W%0NF,qpZLKN/-(4Gi:<L(!/kRaA(:Q),3O&5mAA!+)_)&
%S^A#^(7kTTm^E.eobQ"o(k8S?Ns^f^!QePr?Z<ugXg*OT'&D,\"!1J;`F`8B%i7-"DQr>EB=O8tC?@\.\^Q.4p8;0mDkPou+a1Nj
%Rb-,G/!p(<4MP$Yc5maZWEcRj&Ukfa'Q0\XYl+M2(bPBs]K$3]7XC/L!a8,TIZ<7\?OBGP7h6)SpjWH:H-5]J>Qq\Q^N[Fu@)7)@
%#4Z\?YE:ll,uD`sHSi57X9^M!rkf2jR_9e^!NJK^2*aA,;el:@Y,*lhA;9,G95'^j+]@8-Q'#Xt\:ES$A`5`R,8=g\!A)\Tm6B9H
%IoINa<gKBZWL3f,?mX?`04b@;6+c[#h=]<L]q]ET\d-a=T*p)LR5!Q$3EO@Tp6fk"SLl,Wh8?9FE^NZ$d4*GudejVn\l^F-*LF)t
%aXK;aGn$P68/bSa0ZY!GK&$4UX@C8G0KK\o@Vp&'CJO:FMqJ^ic(274m#j`RKikW4<>\.B3f4Lu(c3>7P5#@-[T`\?#%:a2Ae'bs
%FE*TJ#gO6ZiSau&j3@_7E-j\Lj.c=54DTQKh_m4$MEH7b)dHX#+$\]7T4\j`G'irV6(SP$mH8gqn/5>AQn0&^1GB(F_7'p$ZUi:[
%DMX1CI%E`hAE\7`qQI:OrZC*kp`G:g#4Addl2"lpA2uj_<6Kk4!5aRJ'*WJueo@GnE'qJOH@md&48VO+"\pH7SKZK`n&.2"F"S%.
%TDu05j^P[p[T6^LXOsCuH>ss)VrZtU/Pq!ce-/;#8(_X3ebhYKD,?AWVEs<1>K%:Q*.7"*`G6T,n7mop7[F&n?U*H!)iF`pqs`Uh
%o@FD\bl]R(`^YF4"'uf]d/pOcNp#*qR4:s.^S4\W"M@*nS)Z9r=h"Ya,<^`&lbDC$!2"RBo2YMqQ=!pJDVJJbf25iG%sGMrbJO-,
%K5u%[j`*#K,qINrs&&(R`[K6)Z9TBp`&>)B+>W;\OKrud^VpeD(Ih,"i\t08-euKEDIU^$Z2[A].9#RbnTE(LVOSC;hoX"?9-$1g
%LZPZKMuLap%+4BZ<pR`k^XZlpSfFV./@;;4Qj6TG<H7rgqZUZVs.ZCgs.Pd^L4B1U*f^3[DQoRiqu>8jZ$MV&n3+feN=l0E$B+r`
%YOufj)%4E^A5(d6B*V<Z%aNd1_+ZEUhkCpJdigIZ8YUWcFs6VCGd&5l_+c?Q+*12bJ'nhVrj&><rbIaKNl`pi-><#eCLAR?\`"HF
%0Ok9em<AOG(^3GL[MKmsc_4(<rc>+?N*ZI+'5$$g*<7>KfQJO$CklLC6m\p*Q_H1H_pIpU>_'#F"b:qAFml"jXRMb4:=?4K?><7e
%)J,XT7IN[;/P:n85dt!>anEbj@Dn!j:!8jU5*pn[>BZ9drCU9R@Fu("<>;*=EP,J]o=e$b5p^6T?W\QT[h_>L[MEA__c1ilL@uNS
%bYS=;m&6I.oi\P>7RW#9MhubF$jf"?cr;hoRF8),f370^,asNZ%&tsV(COQcHS[ZJAS(l0/1U1^NmX(g"!F3Mn3&TKU-bYB_C)lt
%Gr)"K&NO:70CVr-.V@\5Uku?IU8FtZ&dl3AlX_eH,SQD66()i7d*Zg*"ATn8p`M#G*LI7j.o)="6h1r$l*LH_]hjeKDI=2S;_I34
%Kb_QD(5CAVIIkr4SuY`<R1s'uCY-ksm/224k<rO4-(MDAQA7O&k'2p2To-=M$]QGDO%6.T3&!S(]anu1V]9J@!2/("VsN<M/=aIB
%;OHLr]`lRic=!:TFMU.;YG+;)0fHQMk3g2,@jIh"Hd>D.(AAXmec:WY=OIkI0J8H+P<5fud2J4E[LsP6k,*\&U,;-L&45lGm/]j2
%JZ-/^hK-(MSD_=2l,2ltJSseqi_2l+KQ0lclru?Wi+=,]&-o2@aaDL./2h9?F<U4)B=5AR=+aBdCQ`ZlB]"'BJ/_78JfG-U>,7;1
%_OVtf,bc%8eiZ$$/QlIKo`#,,`e1U_Z9O1?9qEri--(XnZcs0n6lI46fX,m@`USFsB+Nd)CG]\Mp;U$&ePItI_+:fL%U*9'J$>u^
%*`OV42T5J-!mp:]4[*AR@s57cN`;5F9SR<pcW4h11#XZ!?@rFi*FI:MV)JEgTsD1!^qk%2&l_h(m&E^%0[RV*Yq)O*Mh;^O$EkW2
%C:RG>``90bQJ8JWBD3r^q'hFqa!ZurQGA]'l*'3#?c0ZWD?Z9qlA#1?Ce?BRDX"4(JXqFprI[I`]u/.9WtCF]KuIJ8\=qUTc?M4d
%/;NqVg<PO&Xk5XS>n;ji!qos?P$CR"3C1f6@_ad[.L'ukZ.0ccBG+*1kthM$q3OY#%,C\<[_"^_%\j6F+\ZT0(t)M->\`j2pK*jM
%0BRk^,pJ;$'1KnS(>Bs1l-Mnaa8B\m.nH%dA]*^hM*AsQPZ60F![ZC%,u=%j-1O3kLffoi=J;<G;$MoX592D./r/uh^Wtc#n:_]&
%20ra].c\Ji*5@/jdc(Y1_GF.E_'<e1qua&946s.Mfi@RTh/\/<Ap,Ni+T/K]\`ao;AZ9u43ipXAk)F0\_@bpr>E'nfLW1/71slq8
%^!YW:QXE?CJ*-mId9lAFDQp62cbb[\>4kuAkE[bYB9sOU^/\^Npp3"&C_(&5.?gScrem7t2hu(CT$k3K"$At=WE.M)(J:ef6lHM;
%&(6OSO"(TG=9_\LN*#tKjcu@kJ\LIeL#qf#Qlkgu&>#t$2d':^57<<'f:W!n>.Ud39)bnm._o/%/-qcLD6_coA2,'"3E&2LKh,cY
%^AqL_XmB"hBXVjmKn$L.X!7_Z(@)P[%,;nF4AbG3I(i]%=1hdlVA/CGXHo!k;L^8cWig#3e"$;IAbQ@N/\S07)5usE#3EYY!n>4n
%[YkR0JfYA8BMLii%\h(_U]<3\W8)c[VY;t(>mkho%Ud;.J8IW^fTHc)iB#U&beF_5A;W8pWebN\Wc,RQ)G?u%4D]S+AqD16jb/0c
%<I/0-?VQ3!M+-*f%E&!&[+b/Z,IY&%@(PES$[K69/1,R-`^%,G5Id[>LnH6g4e%+T[E8po_kDZTHJP7?%miq*:GqC;T[XM]Q(nN_
%O(bU6Q!<`fG[,j;RF)g0=EXiMBq^Xq0"Ao>7@A"M5]i>XJB%3>_?>WC+-OY1*^%AL(KaLYatCq(@iUf`rneLWqI9aKg`3mCK,pdh
%E;?&$-6uC<Cm>rY6TCql]&4(kMVe24o[`'1#f+S%GR0L'(W2"%q8IAE&L=h4K+t&)J$/!P`^40%D-1=3Sk:.,L,@90]N2@/P7_jn
%`li[@Vs+.hY4+]C1Da_%,m#`$cmph<BgAS:5`HoN=USedPnMoLCXrjdmOG99H&%=ZJIKYa,^Q8:,uD?g=2"-M-<cX[7Z:<R-d7dB
%O]PT&7Sj?FCA^5-c./]pF(*oqqG;uEkf>N/AF49eUNjc#i*H9p7^[OnDaG3^Q7uj&,">K!d?emun8DQ&1K5;n[8=f[j&*^F+88)a
%9e4:dOW+?b3&p7&I9,E[295/^C7l?-^_sOafcgN-/XH?hkj0a!`gbZHMs1pg0ZuZ9NZPK0:IE=e!/g)aY)IF?[0W'<i+@KUXB,n.
%(EOF"7t^<0+@.`XcX:6f!.,BKH%/=).hfAq'Nf4<a@uSS1gY68<[Qn-5TZ,l!Xe>cg6?^![+g/-C?2i>(XO;8>=E#WW8joEdacLc
%A3hXnMsF8D<V^7G!A?VI0BL_u6JreZmOTa"GQrT_,M[.3L4O4B$MJfOV-kD#$DqMFXX<'S0I5fp93hV5+\j+->+eA-GrV9gc'n\h
%^A/KK1$>[h-T48WeCTU"9H[7F>+VH#j!<?_QQhSZTB0fc+Jip3;%Q+fjP[[<:,RoF<E4Rs\UkB`]2qJbeFgYf^3Ok2mDeg9QdnOB
%TO4]#FmrtKkaZ\eB>0JFLhGa.MF9dDbWJ"d!/JX+!f]%rNZ@1ZE#=qg0N]1s6Np/X@&hQu/mX%]o.WGMc3HZedOb6N?U>X&0_$!o
%KP%p)0<$+'Wp^<&^L[G3844;qHl<#!mWS+*i';M*IA<?>Fqe/dl]J[m/3anm<j#`,eIp7R#8IGj8.\1'PAFOf]>R?'bnS(?C@\+C
%3r,h(H[+kT1D^LPi1EQW'rg&&;pFYi3A04's-%-1Cdqu;V7uljT77-`qc+mITA**PSnks_R>BEec%"e=!/7)Pr*>9`5L+P!q2gMa
%Hr%Qhk8j?%-S"pC=$c4nNSsDA[e'%T"[Cd[FBSJ*f<4)o"hMo6M2MeTCuW;BYPf0Jm%_a/if7/n+!*MFq_FLOr=$LqmhNK_YW46%
%:bD`sqd:TEIDn3\0]6$*!T,LE`iFkK]L33g(.7i4(&/B:d*m#dj+$%L,J4GN^='b;pk&_la_77eoltS8E(PYI`M,0aH+>X,\G@TH
%)I&4o]a)tl^+=/B+f:k$1&5dmQ$`:33Qn83Ns;ubI$As?WOLm6?$-p$2U!Nm)'UE_I1?nIT5tPg\l`H[l/MMCMYua9p](0O>+Y?=
%=R:A3*IA(+][A)MQk,6iBtq_"RhL5p(.74I%L)"j-Em3AiorH68E6pA3r?PQ-?pKb^'88^Da)#)a]L*0:I4D*]AQ9J?>aU"8PB&c
%SOkO(N=]+3^V&FdmKXV2^(b`Y@!b#0n)$oj0g3&s\JEN*9)_!IQ(OiVJaDjK33Nl>\^i*h1K^g^rIJbTS!u"D2s&5'XVm&QoK.cs
%<Aikkh:ARlDl+WNQg3[%N&fefs7n$)\\96bkqsP!-oA\6jk>:P]J0=+XDQ8Xloc@=EiVmHoK"PdZ`1sj,^_E?8)gj6l;?$!gPadc
%g+;p<^a=9siYV_lrqQ*$jP=%F2Q40'cMTL\Ab+<KZPS[X=$n=TpM6"CP5Kjd_gZe=+P.F?p4aF[o-J]ba\dH4T.RR"\O8,^0+NX'
%9JM$DS(=kZoC<tK_uC8X0,5`PiVne?&#qhs;1+6$RH4eZOh"f9G1m++H$pcX_V9>7-%)\f&'6fj.juS5=O.5bEg/_F"Skj[.6.!5
%=5NBKHk_7>9t1J@lQ\hX!lY@`:A]Bk1Ch"!l`(g+ZL:PN'uH0&^(K4"HU7FE/jb6kcCQBbS^.cXHnYF0TjH)=KYPQ/"?C8R&_&;U
%&WC4J:,&0X(_Lmr?5'Soj-,9t?(OStD]'a%N`:kb,On?1o_X/+`0KX;:8H@j9d8&sqBiLhb"q(s^*6F!F**8%Ma&T3Xkt[,FY;R.
%>'&pNDM">t;.lG*U64tmM3]Ym,OTlg1"!/[7YjS*q2slWIdG#E,#BIi]2p3Wjo,!0:41nmhheOlBRo;hmb>\<H$N-n#O+9(>-MdO
%iZbGA/G8R,/=N7>n_8Qi-.W+.C+!c_`pQskDsa^?_e&S$SfdA!6ADiP=3`H\H-9OH)<uBWF5!BRWG?jTiV(nW;Y,*Zg<EsXZi&"M
%]eI$9gWQ3J&UWo?2RV/oX%dq^E#Z(>:[dH>a*$R]r^)3_hK)W-^"XmFp>-3C*a[?0qtLb&0QSd0m)rG(#,&'RO"lF'c(@(&Oj(o*
%*VZ-F_02pFTU;(!,O/b9Nl6l^3A/'!L5tX!c`<hn\8F@-D6iN,5>A:#XnTG`j5K/Nk]h)lh2[QWddCLI/FVN2gG?k\IIgri3p-0j
%O^mLqI@o8`RGk\<;#!6KIo]&%jMfBiH'EQDSL<=,^ZXjN-#m6>;XX-+P7*u>qOaMFpOUlFq,8\A3I_Q`>3B_EnTI+/]c!A:^/g`p
%jgl(F&f7#fS($VJDUb6VNVhO'2;#Gq[a+]>QOR$MR4!c,B4Z0DEo,YXH(F>I.-l8cYFhAXe&ee7n2$(bJ%Au=kAo4I\VL8*EOdHL
%4'0K\>Il"uqh6QNU>B/.ER&'8\gju1NU-:`13Ymk!`uPV]1UDgP2hAaRu>"kk/F6[CD6>(\Qu86TKC5KTA>XT8'$*uGOb+Hh^fu>
%>-gA2\),ROpX@d$FFS0t\*d\k`UBDKCL-[\P0F"*k>#@rT$T1em"m#u.F6O?@dPV00:k>95V%.%k&$IJrLN>&#1q&0B::2XSot%P
%mWI^'^,K<d\%M6W4mgLAY!V!fDfOlUKdHojo6'$6qm@Pa]]8VdJE$Nu-DE\:n^m4;\_\=?fLPJ`Q`3G$^++3Lq<hJqf(ZK.5(15a
%GkXqP+)emdUAO*IHG;]BFCNYj?W?DUJ+8F:qAY"FeGjXfbkkQ?b3Ar:9n`F[qgI8^%!]@DI"3j$)M-)ii[mu1Q,eGfJ)psKI'f8+
%s,/<0B"c;bcourH"G>",58[0"F2;,ApF1>C*A2r7kW9IUH@NL8:."]Mi9'p%%/KL5\"T1i2[s=g9)p8[e+#PS3q^\f&:="N%8F%h
%e$/e>\I8`3msF$3^_%"l2V$,m1UUi3YE.;-@3CBRn8IX!7s[;.99ORB9ZTnl/X+fPQ@nOO(SAe**>9a^!&!B7H0Xl]J;-!V?+%?j
%WlC42eDh`J;a%.bT]Xd*LN`ZWF#8=,p=&7pBhI7s5%!Md?`69nG:ZMhefAYJ>AVWR=N(*U'V\rq9Il^LAj2C@=luX]SVYpjR\\1G
%$*Oa9aOOkW'tJe`gEY%Yo6#_53F>3UbkWaRTD7!bjAXhTXV;,fk[V-eNV8"^AFqh=MoU4ZHmY/P^8eGY52;/]gpao#hUF?@r?blV
%ESl*g(/K5]E'NX1kKS(\PGT_t!Pe-C<s(Fjgbtc;Qdt@VEDsqK'!LPX7Ugb/rCK&==ZT,q2m$WIeQF6f8u'Sj(O$AcHf?fBnr7#E
%;Q6sm!'2W/8\K)<ASV-^<O=b>c>TS<Mb'O>^*jcQX,Dbm8,ZodFR?eEZfKR]l#B*EZ\>%AAS]f!?*]<2n)a$-p$4)pGq!!pI08q<
%K,sWg\t/G^X6"Jg8I$_(I/9kqqa`Y`I'n(jobML2]c8\2R:*6QaeTmR8#Ehu[k_b[:sAE%2OP"5/)b:scFC2tO-@WpAs6edq#$N?
%)"qg:.h,h!F&1[h_q^<B*Tc+DPFm6nDDTJn/4i&*RBJU@9>9l(3=DO8O"'/RHFhI0YHJ>O?DUR_J)1TknRc92]P`Hj`K-ooY.4D@
%D3r,BoXL,]pq3HDG9U*,qdqKmpX@HgHk@DGb7/@[=RJ&uWsY![?<*`9`+Pq/D#buL%qkpNo'?&@<AJhuW"rV8V#!2'V5lE0oXbl`
%\4P:m?LL\WnZ?/sr?Nok[<FtsY1&oYJ),PjI9_go>l)IhHs>E3]mb-BJ?t@@qJs6OHP66LrMg7OVPpu[3F@3aH2G/F;FK\+4jFj]
%+!/Jpm8*_5B_^WFUIHk:H>>W3*KA)*o"EZah3K^_`D;Y7^=bGrk&4tnDUB][dAgd72m)NEF+$Q+$o`Beo"ok-9R<3ekM=K,oA4i2
%/b2*Cr5A%cM/_U+ep+iFLH3sr]+VjH[6L/;jTAq@pHKoE17&NRPc+?H]cQkgIJo2d1&lE\H@0RBmiM:[Mb,;mGsujn8*SdRcrKpf
%o&e[=S+A*'4a_X'9fVN9r%ME&N`A;mSst2T`Uiib[f>@e3fh#i59>/)+)c8\Q!hYMf@6ajH$oso(9b'-\,Ji+=2)-_k54aenC^IL
%Ha!:aHbh^kI=L];diZLuaCTFA>Vo?lO2nkUrF>@ONIOFMR,bME]FI0HESk7bo_;PReiZpEgOC:?^V#]_k,U26-=<B`lTTZ%lb0Wm
%D!-Y'c*l?mVUi?E?/2nm^!<;"lLDUFI6Z+]GAPQRHUYX@(H43p&.<mc%.<s;5F?TM]NjNdN,l&$f/tuD>hfjXl>M1)I!XWX-c7M,
%c-T/O]@h@M^F-&c0k0S5(Sb#Ueeq104?nk=HS<B_O/]VY]MSpbk>/20YPkicrNi-XGO9..FA3"(:,*QWXF?K%oWiS*R(dAbDJ"Bi
%V.\K)p2'FoQ`oRi:XVBZ\Z,=K5>5B8!qFW`EF!.I(8G44E_2Hha0O7`IOu@binEPm9mie4^J?`<c4`m-j0PG?%c?ru.k@fER/DH_
%;XB0>XJ*I'7*^Z<CBcfC<$\2[s0mmN/hh.KIrMldl$C"4E]J!LBe*:5n$8\Ec3&CVGaf6-Q&Et)@<c.)8(X1&Vk[U=J#:[&P@=K.
%d%;2X)>K,M>i):ol+rq_$U)"-1(W\uEL<h$WfHs,[Q#O>daD(JIruhP&RM>\70LNrHXMm1e!!F4]"]SK^h=,tI1:aA]h,Vg_!Q3*
%#a2YR)8:Fe+Ri7&i4Y&Mkg_7u>]CCu1r%I45/ALp$T`XJ%"=HXnL'&2aA9omQRg^Y4OCXP>[Z6pcJBgJksY48.9'Wd7QMjprKSqJ
%Q<t]U=1P@qjibX+!YjdE5L]\P0QK8tJUTnE#UY-0_VYm3+]\noY=&N)K.,\!:SrehSKC5K]LpZtJU@/B%iY#16YN9Zeajk#+e'.=
%Zm%]h7G=<@(H$n5iDlU=B,oGtE*8S1-h=)^U/>:fr5G\R^J>M%A2r#W7$[!>hK1q;ffK]u'Z#\AU-qrB)uie)AV#3#f_Eo1_Bgu>
%!KAYugN+U4TDV3'eCFU7ECj-4^7rBV-)h:E1\TNX!a9_?Hf8%STU3UOb0bKK!@YOhhHd\@WP[Dt*`2l*5B:H<2!/b!?5l`N:^@5U
%NP)oeja=//$e/M^8Y"+pMj>D\Z97JT%=u+Sa@cj48f_.]0*ALXiEu43/cS#_Kng`1Bk4Kf;thgh!,]:&#Uk9KE0]BDi=Q+u7']ll
%F7kOm.!Ac*W-;I1+s2qikV9"HFBJbS<WcA,)JbEN%O7Wpr\Hi'lN;!gI#d+:k#MZnbY\]5$@&^b,G<Qq4f;WZJO[:*rep#N6Pl]7
%bXR/IW!9<`lHNVk!,0U8N$b8:"/%;QZFkF,OF[I<'OWHS=0=SCHIN+%\P%#Q0m*YVOMK>nqkU=Y1j6(I\T2<b.gX_8Kkn(X'74JA
%W<HJ/2*M/900tX'ds*\`HBj$_),oPkRO@F-]=:&ORXLBu^[r2N5at]TC'`>O]F"Nh"8]MshY^orrk$P_HGb-]bN0/+$hU,NY/rp0
%?drK<\$:]A,G7K26[gBTJ_#I6LI'O9Ta)9FR*OmFaq30bL[-RPJDQGb_+`\cBZ^:=:%/;heE59?qAOVR1^*YbJ#MN>JA0(F&,+2M
%#8G7H^%"(RUn!Ep/qH5OT=]hC(L4uOD$9Ksr$p6T#UkolD-q^em*G"0RN>:sDZh'^clV5tF;fYW=(3j[f"S<.5bW=?8Yl+j;]m79
%^_Y;ZQ07nJoUH(MYB]G*P?PU%"JCsS:BT*,I'X=q:n*Zo^JHeqK"*1$NOK5t)VeAINM&8Z'\6IYQ:a@b$oHun"_=8k-\kdNOaH"&
%Zk@GO.bpt&+m6U41u9A%n2AX\dsgsfXTG0IKE`hjkF3\!'_3Pm(Xh7<Za_JZ0[S$R]riF!!KDRu$T,MYeZW">q3543#Waj3Bq@pA
%1;.Z>b[@m/IllWnSL,B=N1TT*(iI@u:Q]cs\nm]%o;uHsonoh`)&bZo<q*:1Z@8F&(d6-+ota?24gd:mSeoIPi[J=.G):&/C\L:o
%]4AN-=_jVO2U#BUCj-kP_:rlOnf`AG0mX`a+,Sm:rmOMl"T;n!`.dC/R]8u'*f2EF<8Gs[dqc8\*R#?`XclQDadbo,mH4rL.97o8
%^"jl>*UsZ8Va'7_o;b[Y<2S;pSG`.""q9@;:Qh?2(Q?bj/D6#*P6Ogp4MW9(]87FgB0B5bMnV&ng2g)9f4We#Bq)]EZX4YLXM:DH
%'7+Kap:s>7r7ngST12'.%i:Su=!NUMWts[f?6br^"$@Gs<Rn!K3?hGIVX[Tek+gO,i\GQQU]311I0U\QP5`0OHN)m<]U7M*Secpl
%Hbn_E)D/Yp$m,?B`N"Ks=8H[r<4HP:G:kO^99""IZlm\--tbHNFr/:3RJ7/1/rQp0b7M0RQ4*Lb^JN",DuAP$p/6/&b;k9Y@5'eI
%A-_-af(enH]/u(sl'nb5_mbK5)u,N@)s$DejZ:&=Hr`a^I+@h?*b[2-B.)5-.;Rd8]<>C(dFi6jWlBGm<Wj<]q4*ei66Bn%jk1KL
%]fZR9J:^Wl!_\h$nok:'JRR=Rhm,^:^J'/YJk=M&5B+.Q1/NFbnuj=3N!a6m)L3CS01;IuWJ\?3NtQ-%I;X,K@/8%`'f#oLUs/lf
%n0W_Ln?*9Yo(%OJ,UHP-JS2>5:uj\T!em5`5R%R7;1[hfJL2:Zcc/5D4^prgRhJsN>pEVC[^bTn"U+>YQQYH?o5[[F#UM,TeJNS8
%>:\lRiGqb!+Ig+e;b)XC?+7HII_,EY+@n_DT1ASs<\>S-jW:%j!fp;GqKN\K,1mSrKP7@O:LF)]XQ!OuMG(E`$eRRTbI=fM`<="a
%8"EEI!SR:Ep;I.79rU9EkW+r++VERR7L1nP*a@RNjV0o2kFueRCLVCYn6;#)IB4nX%O3*tBQC]F'KuT-$VVRWo8Dm9`W/P;5t+$b
%h=KS;=*+L8#%'V@1M"bC;,S!Y-3[!Br#sFN;?R28mhHLa@tEk-6bj6.jLY,o#T5i`<c2=oIG?>Y+<CF^)uFdps1005,mfRO*g%fA
%M1nQ2ntGu6Ys+-*Kmum-)%4>N5Z<p^+YaXSI:9=l/BoJ6Q7FN.`f`b#.Jo#,b+$j#Nr+@t]>W3>cab1kkUu@92mLl4-a_N(4YMA_
%$@mdmW8?[lLDqOq7R^1.e7=j0n[af])YM7>^tQ"U6:69@7iqg":s`3tG,=qnVH55^[skO!NfOZb)="):!B$?FK:E:VTYha,r5#d-
%Y4U.h\^[NsV)>S>NJ8Yq.i62t?e@S9,e'4)R3Q7kjd&AZckmq6J^KhUb)K&(X".`i0WGsR"_#!^UGTc?><diGfo[Ntq_u*Ooi?g4
%)-3RNOk'Dj>&O#F*rTjTB>%WLZM?e5atNru1Z;nhis)sKD*ZN@]$k\m0O(D=2L..$`8Cp6!CPh$d!-PKhNeV$T3;K"WX@fMW(G(:
%:peGbfJ7JL#e_)uft>e?_IW(DMQ'_kq;#N%,f,t2ETX8k3Jmj=Sl\A`PHN0/[MWTD<]!tpoh+nmA=:2b$H8UKWtqcaft*jK-<;:p
%P/Jt^?1g>B9nJrrBG@"e9j[-E9![T<9KI<[*%#0lbWH8c#GC8@gsiQIm'-;N*8FuNmD2#ca4Th?Bdt@<+0MA?(#mEnQ)P"Qh<e*R
%bH8pAmbd2k;/D"n[h"Y>Piq^M'[pa&I46L2[_t/L3rQ+!>j;1XVkFaO>0!pcN4#Ln[GP!W5]:8]l4;6A3'1%reRM2R>LumU#YjY5
%lBP@/LN9_^U[0krjEK/:ABliGl:4]a\(bQM9q?1CEYuV0(IPU7#Fi<9?AmSMS!Bl;dK2KL!b^D^]CaK-1$nV4+ZAMlDj^CO+/7?N
%Q-!^;k8C!C9u0Ih6#Ir5ddf$C-ome,g@J5F>(A2-#G;E=W,.i^eXY8^I2I*gT:3dd:j[RO)l7;tg0mt^W)qekFh-4?'EHSZ5;ha6
%^`:+shlVYU^h%GYn$3Y71)j@eRU7YS),G6Hq=6c3'B$><dB[V'/_4XoP66lDo)<DQ$o[9t`%p`>HGi.X^j,E.Z1dPD.UoA=GXr[j
%<*alpXmY0Q:>4"W&p'YMgT<k79OeC8CD/pN4!^k/UUVmh'FkiD$3]]*aheWM7CeHfPK^1t9]tBc&2frB!!dS:r$@C1DrA?Z%A7eY
%7jFfM;\_#ho-g/e:"L>l7^jB3;3!;k0[]i.+9qA)CJDI]=HX^$OTr3BSOp6?)H3*H4?<cXn\mACVT/6d&!f/$`QTS:UDBlR,@qo!
%e69^Y_r(tB#)0>1/@]E1&mjFnLV^n)9BPceH]4I>8RC7eLHg^EBVh5smKiKqVa/>c1m`<llpM=_!"'UUfc';h:]Q"sRXkr,8Q[uh
%0[pumZB.-4JSrLf"JLY&XNjZ*#*9jC`DeD`<<2bUZe[SkHC\JDiOOBpr.G]`8o(;k9<p>0RDc.6AQ$1k[(f_![t;cH4.dgi$p+o@
%Cb-WJc0Nd,U-H]-],oj9XjN[Q8+lXQJsF3-3NA[DL"=m-N-qS0ck1oo;SCfXbNmu-.A%]BSmd^<%&ck[G9&g$^il\(IB:]`)3T$u
%U92X,fi/0SR77:]9@U#iB]*4>Jf3a%1F"t4M<DpS2&bN`0Iun'i6=(sW(KRTi=ut%c6.\\p<mXNQ4f-L1Iq1f3"bU@6/UR+rEq$`
%46s/G6d0=3l]X!'W/oc:#obquckBd]Y='hnMJVN2b\oBc,YT5qO0EGqW+$QfJ.oO%oQbi<7:"iC'h2;.F&`4$C5-fU(+llUNiZd1
%Z1?h0>Ys*k-#9ieAij$p5No'aWUEnpQKI&2"]H=Z9tdLI:rDY$a3_1PX@59Q9(a19"9R1!3Rjo^mlTj?](!e<4+M#q4"ODaO+iH^
%Y8[n_'u+oKAF4LI50XS@)L6_V:T(Gchi1\h8Ck<4d1B8hC>\?:Ka'86=P89!]oo:X4aMu_N4%Q7A/#.=*'a:m%#EZ5<tM(V(^K>j
%CZ0Hg6Q(o=k$t*FL8!tMrC95=YqY9jCTY">@EPpS(LaNRYQ,U4[MJi?*K-iVAJg.o.-31,7hI1e3ZZX^p'ith#?n^nEILm?hS%[J
%?)V\27MX-hXdW]RF&(GjL/fBM4'&FV^"H><a7jBg\i*kiB@J2\7&]+2]=XE$P=F`-?\4_T8[EHS8j(eR8UE02QBWoOJ0*0B];EP3
%s#e^6UA*qXW]85,&DH(^=^<]bX,<A8AZsc+=P40-[N6Tco.P:=4sl#-%AH1P?Vm9;C1RU?]slEoHn.Q]b/DSZOf1jk@:=$9')82X
%!@bY"#]:GWmco\9^]TfQQYqg5dgk+a3X2'O3I.4p/3fq7-'U].F.O_6c>T.;VoT]9.Ygd0Lh]#(::X$50fa@<)0Bo-i,Lc!$D9Et
%FGc@$8*/*cB@&*6"cpd!1XD^MaVNY^LX&#7:73\Y9FdV=#+[eZnF.DYo*dZBMB/<VB:_Bo-2A68FQOH_(mk2AkgU!':"%mo\:?R9
%[`bg0cG9:acm0!]?I5WV$b($jk/KDf78VK'ndf%8qc6[#^[r,#hNiMl[H,>KHuDGrM!4n#M0W[d/=Z$lAh'.j/.'XE4eCLMT1NV+
%emTHSVp-*aO?$qk5AfKH#blOfdmS2>/7h$5MHlQ+BrSP)pJ%+26e?^O@.r'3d6l:Uk1Y23#kff#/-[OD1H25=PRqk*a/]2Tmg]eA
%\uT^l-G/ZW'L^"!LWOF\7uXnh.Yb$M8\:/AX=j`3e<YV=3f?96E^QKF>KtO#Z32]6UDFg^!elMUA3O2G=Zq);.md]*acs2WmCO70
%RprC]a(L^T\6%Ss`ZSuZ8?XL:@LtLt#7dH()c2;].Zc2-p$.P^;U^Rp2FUZ8V*)!#HC$Xs7ipRNB!7.,P<;$oje\Hek>MSeN)S1b
%_^$)$.D94#I)Tn2I.L[%/FVMhON4hG%D;?r52?t5b+/2ho(Y$Rb[&)9<^[d+[NiW.C:fRggbGBVh]'\.]*.J!RITX_!>O:NI^:-8
%Qt%UE#Cc4:P,a42./R^Kp5C;%[]5>_DJ'C"S_[J`S;F[.VuZC"Qa;Hn2mlRGIol<54e6`"(7`'\Ak2iUCcffTW&'1Z);"jfW%(?A
%8=ck[eD@7EBd9)58sD-iOMZUODU"--\7(-&G.QL0h=l,V_fC.@-oSdi95\Ni1U(+,64jYn>AHaZmZlI'ISZ*XB#T5#^=RZV=6*J_
%m77=N#".Q[@109UlJ%FD[mTHuB1-H8&05SJrR;7&]\M%SQ?kZdPND54[gkuqZ(Ka!i>n-+1%d(-&-8n?Bi,"VB?$p>,jbl;gShe0
%1+#_I.j@_5:M(1VC!SDINS6$0U[aMsn_^CT2Bi6%P)bC?a>,Zc4usn*S>SL4H@DA^_cV""Y4n!u)#F-9l_>[[!4@X'G]ef71c1+&
%)70:+:`A&m&K-sh`b7,*%uA;3>DUAQXQAU_7q=.skD2#)Us<<23Mri&_AZoebd#laLMFq5^+ik8Ytn,(l>?h?%=Nl22-3K60lA.W
%eAAq.2tG*oUG]`N;"IkU:Db2&Qd?\09,DcJO27Y#(:"*fk1/j"Z8N)9F]S''9fjuMHo)/A=]llATT2kT<%Z3]rE$=)&*QQnFrhCR
%1DU26b-'Qa%gV:8WI6KU,OX(WE6%B2Ah>*BQ].I^*tIb8Vp1%P^E2uo39r(oO3*/UfZB#0\5VS.mG&<G,l)C+X._p[o*"l.b*.d+
%]&AM:iU@b1D+<<[oAL+`3)?%TBC:Zq:$Yb>M\BXP_Z=Yq>&qf%,!f4n2;?QrRRg6mI=f0DkhW[$A#3rF-rrYuT#.!_[;;rRhLC7r
%eY@;ZGIBso%YO%,3l`;l,'6/j=K.[`fk\R5i?#d\CZ$eHGQrnIg8F=mV>#R%!V*`b$f1=6W(g^>\E2)NCY'9d99\2Hg7GWTNu9QE
%G5k`@-T/?P$[PGbp(k$\Bm'SJp$CC:`e*rBlIiK_lAf>EPB=^&iE0d+S!N"gld"(I^q4bWo:,1!#k6SP<<VdXm8+a4UpB]@_[VR,
%'(G.M)6$E0bXd.C9h+FFmg1aI.=:P0)6':#P@UK+HB-<BKsdEp,8FgomG8%NZ`_V.Ig^?0P>+t-/M^4rQie&@FuSdY8&r$AL/B56
%*PJ1;0,75BMHO*0UIN\3gV/"fkYn:oah:SCLAP%Mi=>Q3pI^,qhLk$VWGm)N`/aK2UJp-u*ibjp@u3YSXLBra9ZVfc-j+7A:[/)r
%]6Appc:ZREYBF^?K/ZcI'`6FO!89Mb%,82@[I4U0@:$=1%.Bcm0[*"A8Sf0>E6NLgKrR7oL-26DfA4QnRO2`lqGp7B@MQ9G)H>Bt
%c_I$oFPnU/7JGT0a,.UqV[X/*YM5T:!:_]#]=FSj5k4g[*['<o#DbSU^5#r%rbB94"X83?NKW8`8R**kXqh[^PJr?AqRAMTMl#nn
%<QT-\0WCkR.dq385$o]K:K8dSH$\ZJ';GuJM"f^Vg$LS/#S\;ZD#cET5\X*8)0VWaa_jMr(aqLG>6;r`T>tT7GBQQ*QlMiDQb?H#
%eJoA1O.%uNY`"NhfdG\*-jAtV/D9E[e,WL@a7iFgcEM@b_O[81:t>b_KhRo+a7k#L0Eb"\4(=7?j:.Jff\+G*Q\MQF]*8jloLmEH
%gC,WuCH=HJRU2bPp?!)uTgjL[SL?GVL,dA2W"^<e].S=ii6_t3B!LCP95_3ifTp<M>pun9W#h2WK?pf+)?uf*UF+"D=ClWaC,T=<
%AXqJ\o8K"&aY1>0hf1$cWLL9BXL(4B8TK-YZP\C3\a@FJ6ctPJ\)Qfh7o\gN9TCmW*[/!S$Fe&!EeaAV55/pG@3\hBe([O_i"T-@
%kDWLhqMpaVXS3NO=HC+!U6@@pBm]oOjRJclRnh;CfJ="I+e)6Q&($<Q*L0?sQV4f7J!bYjl1AG:2Wq'Gl1B#\@"11R2P$H#fM8#4
%B,J$?Bf;O=6BZb?#dK[i[qgu_BsR!qk%XJN?B<4*;tC^ddM^Ai*1BU"5PKKhCc^UHO],l@=kr3*aD<oV_L!_u:3Tb2W,+N._8rJ\
%&tU;::9R6Hg$05^e*5uBl(",^A2]u"s.he$:R4_Q=-YJWHbsS[]j*UhS<5&&kmjQBIbAg).!D>$3k\e04XjtdRnbW'c610mLho+8
%b>Xm7I=*rDT#+?sRrF7$3ka2ZjB%p0Rnd7?CR=dA?oFPsT+,F&%aLqME_)^(0c==.bbik`.h0U??oFR-(m6=^SB5ne2OtmUMEQcS
%N)J<,,99$+^Rn\H-1?)94&$-i">R.j5;hL%Wci/?2">:X[SU0EV`:ktLNRU2oBOabVq($7(Y7fWo42'ZOJ7Q*n[WU#PMrX#!8MX?
%f1E>5CTJHm&%9&"mEJCmgN<Y$DNhM0GJH[Nl->T`,^Pgn22hj4@b*DqTh!%k-RW?17s(m+LpgA,BnKdtVe)h<\iVTY9o^#/XbX/p
%P$:'2c=SA3I.T.;.!Dl]TKA'gF=5^(ql"#mPZaN2#MiNY;_g>pDU4-uJ]HR17MN68h<gW2[!g0SekY.L#MgE)fE7'?MR1qGh<4(c
%KR"?VS($`T%Jc0u4$&_k`dB@mZk@Cl,+[TE_`cUT6_5BJ7*^eNg0a5>Q(800))(!RR[&WQVVAAgc.X?s8=R+88N&\>9/Qb0okZ_4
%0G@5>cmaCJ^#jZLB\mc=Qc\N7d*RSo7!t'G:rqc`c"\YkqgYu3!I@sQ#\>1NnH;c6W"tZ7Wl'7Cp$=Kq)6W=Xoc2H`[qYprm-[PU
%$\tUSb)H'1Zu?)Y2R2t2o5#`(rbss^P,p$[rG\'_r7/(@[T@R'b']M>R:>M<,\;=_8@dW'Y@^^+^foK!6/BAHhO:("BdNCQfNL:U
%=D#_9.8MXF4P^<uO.&Ik"8dO[Z'YE,SGDA5`gi-+0jW>?:Hcbe&qK:.m'LMmrrVL@=YdAA>#ip8F:oIOR,J4Wf60(UpN.#c%Z%nB
%E5J/`IV%^+DQ'N!FQZ]n3oSAQ21FluGDaU7h)"Kmbe,YiiU3A&o(L?V1,p`OfP[WJiQcOpILGrpekW`])-<\0X?Gd#40,u^=5JFf
%:@*SE1fO)g4'G`^XJP9pI\UrP60jB8P^U;FdL@uS3=EA64#7ttm.Or_\O,skMIr9[\O,s/QWT/\6"B$HM7$-Vqncq'=Lh4VqpsaF
%9?6-CD&@+.e+Vc>R(r<-5(Mn;[Ihdn1[0X@-8@ZYR3ogK9L"NY/4lsV*4usYla,ldK??Y!Q4%H`G5Y_R.[sQ(PnoOMSrrJj)S`T$
%Rlg+C^X?L`8pN`MCDh=7L75%BBU!3Le%UQF&'q_"TRaYPfXhUTV[X=ZUh`cKgGd0\&2IR)-`[<n54Bm:@E31Y[7.?a*V\2jaV1nU
%\^_I3QpN3=@FVZ/;VlKHqC/(,F%PR`\s"0/#b#;4GDG9"=1S(&UUP;MGQJ-8/"WZjk;K6"Uj&AWJ_>G^n0:U$qk7emelP,II3GJZ
%4I915dSNX4V+OJB=-So8JO2q/T>P9=;b?q8\4aHW0HZ>4I"dNCn,S\GqHJ=/S6nI8:$6U].80$X/G&=c;Yr,9gqR9mD$\W[?$H08
%5R3%CBf>-(dE&d3\>iKV<fRc)PRj+ZVLQp)&uM+F33OM4:HC"#6/X9I&1C[VOpqMd0us+gN;h</C3)^H9bIs'j]059BI3/u0a-e(
%4RnOR\^IA6L!5(uh1e2jeRP&p");o:gqW2Gn3P#n/h)BB^B@#N$a52NQ#`Ldfj(Lb$qeMZ^Rq@ck0=m?,=1aN@1oHY]]V+@Vn=4j
%1Y[eePW-8F&1%d-(7%[(:L%NrkcK)m6O8Rrf.*h6XEH051-'k[Ab52X@V3#F<Yo4_:NS$C5N#c!Hp8[QQ>TP5cIFqC`H!6gXgms6
%'R;"#3M#kH>.#S*c"H6Hm?a)MZpI]t:Tl'ig2iOFiS#?/hp++D<jV4Eh/1kQXCpAV=NtI4UJ]#MhX&p&/kf$:a0"$$)ln.aFZ.-*
%-\%](Ppi&=7r'g`q\!!Q'AQJ_XRt@(?OC:chR[fl=e:tQj7rCOknO"Q_AkhGpE%&P2*+U\@R(Ss7h)d)GAPoG/I0XC^=Y'AV.@/0
%b>N^]]kE)QT%iMW^ZIL[eM(h8F?X`+Z!1XiKfjV2I]H:G>H;Z8h!>@Zb@E,N0gL@Il`ETU-AeSm=;bt+dD-g>]?oogD?H2oJ^V#l
%81)Y.%P$V,gE)2^M2c-F3$u\G[pu$43F%<GV/^[JnNI0nXDt)5Zk`)c2\f0*5L";E?N.\#<6h%IhJD`.BPl'@_=((IYq-<rKsT4/
%=([i'.\/6$:M"lG]EuQ#k47k+YuC$M!\-!r\NGOS-4+Bjl,'G<h?1(aX]gMFZdSQl!`\ndiuC=T>rD>s!`ZYF3!W9$54Y:JJ6$^k
%"jLuL!Z>"ChhcY?o4!&W!?.oJXW0UT1K&F/!U_"4%+ZopPm(hdc`J0PZQ(J_EpS4KT"^8%2%.cG%\TMVgjIVllC^N?%QokjcU7L:
%1K%"p.,U&`_MJcaZWU?J7i][Ld:<4)TmSg\HKYZ[<Y+:*UN$8$TmT\V@&*_W6i$F?^[dIRq/iA=YYgqYTpj&G`i[q%2jEl45NO>+
%Vq;q\s&?bH1V!q>ofHQ"Vut?<1IUU5HUGp<qAln;aniPsk#lmUfGb0glZ`9`:fbm7Z]ngBoXTE+FnA!<3g+m;\UJ8A;uLN-$RWJR
%*TM5>p<2MXoNXV_7&WoSe#lY1oNXV%e4e2lguDX(o2GUJ4on&2f?YE[gPO5KgU0B@2!=_'+,"3Hm]koujBOq@hCDdig@V.gch0(9
%kVW"c_<:ZoQ7-U@l?C/V<2t$<ba2)X:3<YrmVIn^SEjg:Wo&9gnJRtb\)2IYLS!h0Y!m];T>=:)H_9V:]UTBt3R,*`jqB4HNu`_Q
%T4rTY=uUo1/2?0`rNpjRLS!gE5#2:$rDT6PB>3<X0I(_dF8_''^_F*]8*2sbb'#0DS+XE!cKne#l[Af#F8[@Mdll7M_"7?pgr72#
%4MKkI*YbOK*L4n>B]sbXVMHh+[^C(WTD??).=Y^iL52>cB>1!nHnN`bkP@b!=1X79b)@M0kssLkqX)jDV`<;Sr)CG[SB&*SObVEX
%p^Z.S8+p7bE3>g8MnUjXhsLs.kPFR.MU,DB*,r'Q=gH$D0D6oW5M&\4]VJL)Nm12&B'(N(.uuaCceQ`AAC_iFY+JC)]e%r+cK!YD
%$eO<!^13p@RT'0F4-.^&(9YcJ/"Lb[%S_ZoEY=Esf2'p+[ncT`:eku4T:!j"J#XUAA&k5-B>2_!=g085f?`5h(FXI4S1"86rN+$k
%eJ-K(lZ]R?\_"B@7QM*Ql?AuQK*CjFrA;.2++15`q5Jg$VZkOG:1lXB+]`eT52][1o2GU2fONJG@SKYk;a_=\3nNg#)s2Zlr<t]C
%-?(MKfBtWMccURWj3RBS*un[1<'*3]lYRRMgbTukKQ1F9`J5/['l4_-pm;D(6bD9JM1RZnGcskH7+iOeH!4rl=F`E6K&#`nZ`F)9
%Op!1-5Y?T:mIPop:Jd=&"]:U:n9k(]S.2YTYB*\&WD1"Rp*(sfo;SbhLDJ&Hc?I$]J:Si[rE1-QTrXfUs!%E2oNtq[^\AnjP6G)=
%rIi;@:G>5'DshX2o9U9R3a'!d#0D1nd3\+biA]G[E[.l<b9Y2bg:0L6Y!tda6a!=tkOWFU4p="hnhoq#,sQ_L-MdK54=%Q5baSH=
%T&&JZXlk`-q,3Se]e;#5%5mV,SG]7Rn>tDb(GlHdf.a\_*?5Tic"\I`b]Z0V^BpOUq:n#,>YOb7<kED>)GQ`FHSXCG32V+:/Wt35
%HU#iq9:qRW88J@N8E1)_"Jq^CS4'OXnDGS<\H04p>3P5_JM/FdFL?_bUidlKIu,S6J/$9@9]\.M6DOYsX5'NqJ/k%co'>kqbO^^d
%?cI3rdtmbOJ'#4,A3#.'-d0F,2-FWOAh1o7X9UO_#m"B/\)b:r1u?;m\P(kN`&k9SM0I?%Iq6(2"Z45b])/Fdm/-@tjER^,20nhV
%`dO@klQX!.N<g+)]/q_,[Rco)'4E*Cc">qJCVkR6Dnra7#(2LUJiRF."E'j4K^[Ln0P,_IJkY4b1MK)'S*-$>5[E$4KeXOD+C<mj
%7@i?KF35g*2?A97QW2o?3t6X]IZ[i1L*u[+HCHojcIO9*$&-bQ</MaUf+7$HDcFCehU)5e8,]:L(N-$26$O7]0'a+C$D7RRV>fO7
%8VWut1,iFe=1OfuV[oF(ek)R'l*sfDJ1qNV>QH718*kN[8pjSDaq*_6lXND3:^bGWJF3$#'-B%[l+n`TQublS.p"oV%mY\iQ*;cm
%J6Z=c\P`e9H3\h*.!t]@H5p8fA+d//&+1lga^cG!E7rD1U^F]S7"j?6Pln7P%p7Li*bc:d$55[oee::l2$%JsbqP)-#LL6o/g!ru
%50TO9l\u5.[O2K.pAki_ETr!Lr;])r7YY:85m>6A6muDmnZg\R1!Et8;VuQiA,3DEq,+(aXACFnG=onUoNoMA\"4:6k#VV)rtI>J
%=r"HlH_%Z>-7\,YRsQR7#$6K9<s$%+.8bO9BR_bpglstP>)i5N]+.->?J('e33*as?8DjY'ECO\cb\^Q=:kAd1J.9)2)"#`mu>1b
%Dn,O5Virua!Ih;4phLF,<=#[sgnPd?B_VducXGegaVu].qNRhY#KG)9>3_B:!Mao38MJt@fDB_YJ)1)b"^EC\(t'p.5/AKs\52Rt
%0T)-bq.[^.:kWT3jinJK],2^(].*`=K7@@CNXW+`6P@b[+=uhSP,_>]&,=+Aii`A7QNI?^4hu"7'@F/ki%g1m4(Y$CI1boNmC22\
%>A"S.Wf4!jMNcX,Ih_D;,N^Y%Su]DkB@=%pp_I\'H:kl"9HBTh#7p\qar<=!4MrCu90api4VQ\lX%1O+RhRnr\-d=lk(3#^VeI>7
%^O(aI1o[s(JN.9S^3[W<%Wn/0#B`&C2$5=,.)PsM/bd*a)FkpT4<\[s?&PF[Fi,N0^JJ/2"`4Rl.91**QUM22mAA]BiWCnV)NFj*
%Gn9C*05KP:o/_Q"=lVciO,RYCa%Fs0Tj9"oC#!NE+$OuR:u_D=E^a76kZ+n02Z]_ZTcFGZ\I&/^nP6L]29?;,>.%+gdG>=k:#&PF
%(T@X;Q2GP/0^$%S*]8<XIU8OPNeJ#-;LAurFG;Y$d[S$:qoMY$o.j;TQ75o:-.`R,^1udOlFB!K-@Upp#^L)X?S,i1(G>!aWlT@S
%Aqkm9H?sF]a6?cqWdI<GE+cDq=bc5!QYqqn.^rXBE[[u%4>h[ol]8r9951Du=V]3=<R)hihkoV@;W`_6I"%q'"&G%<"ZA^aB:3OD
%'u@Uaga9#WBCh#&LSo>3.M-gMG$S_FE9s;R!<\%,GdQhf9*@n@^*O&Obg:nh:cRPNH2ZNnJ=eX=C>RcQ4_XWaNJGc?>VDALMEU!/
%/uo8)jB:7b)40g)"E[]"Mg>j7V;mi_!V..mq^U]Y&>pDWqtbBQ\=T;WL>]O]'@\!)\3/V\%c`"k0#"L28:1p.IZ%WTj&2!l&[@LA
%mXlu1>&k?Wi02Cd!W(HH%t-Q,/JeOb/=RA@cITKINe1^:3<S"6OC2=i#&)*$GCqMC+1m!lAEqo$(L7VUS\7u#Eu*a:Gn-i&<Q+s'
%[C7[05t6+nZ;_-k(=!cah$eUU($M2EU99*i",57)>meCM$f/jm82AKi.O0,/=i'6"OY@N4!\/A=GebK9gS+WK^`,+t>\=VAIDi2-
%8H@UPltoM;2$X$o&:BAr-E4M,h%96rK+H71TT:_o1Rt"5M8_gkm5Q]>pY@C8%0]JXnFE@cqIQS<EDWf9W2J!.DrgD/R/o2%i05JB
%)."2kCS8PYZW+_=\,\;H"l7$c19s)oP\gd4!B.M$C'_q'*:]*&DSCJ^i`i]3do1I5LC._[4!t(=?dRWoMR!@!?r*+Ao+`B8e0TuU
%pEO&[J'.pED1&B+V,BkB%nh9,gj(6eO#m=s*<uXD"7jt=A.3URQ=;_keTe#j6"d8&cXXMYHJabed%44QRTQ@!^qtr+5T>NHabg@h
%FM-H2g6ToI%*ub_*F,J0gh!]4b^:jN^S$T[+t7M__X8UnrK>FYjS8]DF;!4/VkCK\P0tqR$'-U_-"I3`lN2DWC"&a>JJu3sHY8\q
%'-_.3)PZIlpGNH,Jgo&pP3\m)K^3"tn^>an^8c<rfKDG!8N=HNb=gbln1e<1?<mP`Y=;Y[dcNYm@/V@[cDI7S(Y<nRo!k?!2ssCF
%d)@,3VG#,`0M>#<0XC?me'O?YP")?+:ecS:4=&!@4FeI=X+;m."$X7?';@YIZN;>4_5S<MK,hURs1Nq@Il;PHK)J63)Y2Gd<M74S
%ZZO;jWWM'2!Cl.J4O=_+D!@=YKBHTb$<<o5#*2C8$HC9k<8a)o6!O$i$-3Sq'P^u?Z%M^f,"d&pk7o\04C*VY5>jomEpG-<mS=3+
%lqr@o<"uQ@8*:VLffs03n4Pe20+/\k=?kjs!;5m9!Zl#:!9eZQ%8F+O#tG);Isru]Vlh9b%BAJH4*"hSK)tlO-+E6F'WTi6'c,(]
%Agb]oVjp`>r5P8pnh0,P6J8;=TdAY(O,!0[n=6#P]3M2U]6cBKXJ<SF%g&N<dAZ8rRX.Z9"2!\O97+uL9?_[E,8&p72-026nrXe+
%ELmc<nb)8^\-VgFHN5Y95r0U#+a7X.RB^nSj_]J5[P"/K:Z6:M>GCsK<5i..l9!=-._FI=1)Pt;$<;4(..>]+irLJ^YR9@eRQ5-a
%0-;hJY:eh]Jh$nN+0/LO/6^FA#XM7Z$4.]*ndW1hmADRfQ/qTmA_?&Dkd-TZ!<0M[XE`B7?+>Go_%`Rs7$.km\G37l?@jDl8@[$9
%"d.q4@PD\dKTWergip+IaqFfeN2AbDE-`c5,CD?cf=Qh0+YNPs%AuP@MYRf:cNf7+n`>M3/fdZ*%oD?0&$\GO)8)X2Qeop#deq;m
%PBg8C9C,_oP+DW-^TnmSrCcS;il>!!]u@-qm>]/X^!)^.d_+HjWYWhZL.BNX5g<4VU8S9s#IH0;]6F>Eq)>panh9*BT^'TU^G"o`
%LLT>W34rJOUKPYQnGu>7JTG/Yq5[R%RXLrhrFSO2(P+3U3frff6eBbK@LC'q5ePu37ou&k(D381TZ2.CX.@4$-o^!;;qN,^Fq3[i
%K"-N1pH1a)X5Z8!Ch5iR`G"m:L2:r!,W12OSid]Bh=(2VcKrOIW*9\dJ+86Oe\&@-d@m%-Zp=2Gb#nMFlRQ]G0a]#_n\pQ2K<W=/
%\a)bjC,o<:F/8*qfi3eIk9h=s?)cNr;q^&53*33+`iF-"9'(c@(b(L,H/_YrR[YHaDoZ;[Tsn$:gRLl^B2Wq-9Q0['2_IE-o`Gd2
%gp`=?_1Dmfr][:H,+c>9]9JN)E7VkHk20(4=uGSd4"cB*n$3GRBH>BWgjfVq*\,JoSo=?!nc9r%#_&dd91Z]3F9YO0.&61MF`rb_
%UE+IL3r:XHVSct,2cmD-GPsdk^1,?Lc"X_p+/.G*:(%=LXkQ\%H5FGQkX%RN!M1Vr_K=N+9"1.^op2LbZCoE&k=&*P6e_)j[;M\A
%TfouJ;sP4=n3(;U)TDH+$mR%tK$e%A'Ka<Jd3H#+?!&6B53Q_b%;;,"2=E^<P>+M$h4AbbN+oCO?n!,!=-dOIO1^iTj5?Z`$Mb5>
%`g>+PrhY_b/BM_2J(H(b1]HT\0!ImWMm)788$3d-C1N)1bDR#5d;)4L^!H<0L2AfS@=EWrs(]pJEmbOoQ]pV,K>P[:UO'3@:'^?`
%#iD?3).,hX8;56+,&NCN&UX9mp@o2f3*33kENDe3n`qUtd!=V(\0O9>fFt%TDtUhN@TdoRoK'4;&D\'@E%X?4bQtEaBKH/[ePoXT
%Km\=Z/;`8.a9,g$(I$aLlmQRZQbo7p22'fJ%flGo(IOn>-_SdMW9hLrjPHmGK7Kt]LjcBQS+B1gd?6]&3N\=tHWX'Je.tg"5*4W%
%EB\CWgWNLC*Cc(mY9Z-lq^8WjbTR)&m-Q1eY?t)jM$*8;QGPNV4eL7:h%07Cp(;I)^1\JTG3TopXs[OMV[@@o@Rn&Af+K*YWmHSn
%q@P)K]C1"0UNN%/6Ur[8TN#EfGq`&S)X,3&AT3&(7Z^4_$p<p'2S@>jjJpVJ&/]:GD/`(4;m&PD<HJXYjM*Ia*2ij<%F?X*%<p@f
%pi7qHAYG3X\EE>":u&ai3VOFqs(BB=4\%CmmdEEn**o4GQKRDH(aNUh@^>(@]7]]_@OdFTU5U*IW*e>M(Z1.9b1-XY($8R.EM3,e
%3.7S/V<hG@$F`P"3`*bKfn@8\@$Vo[)od3u3j<[^=Z.WD1gN7fKT'&!=".Vp]%;Km""=%gY6,A<b*[nNA[QTqRD]n%ZdE.qFJ*kS
%_iS2Wn@s:TKRXmh'7oT0)IC#6o&pUS4lX5_?bkT+POO#1'>fpsmXW,$]Lee]Ro:!u4"Bl8ACZ6Ns2<<.4bF6IZp/Dt_K(<?^W@4M
%m-?+RJ)<bN<j_8TE=+kI"[2Qt3AH*rATJn0MEEWuHZ7VegR^SO5'Db#Mi_f$J!ogVn($3Yp_RGELAmYh4pJT_Vg;HmCqeuR&"1Kp
%E_4DFq^-42=4-?q-rX6OT=[7?1%FD6g;WUOL6<T2a0@"V,QZ[XG)bQfgulgp8#+kp\hK"kE#*TNY97?Ep[%/3_:?P>4ufBKmt!ZD
%msEAD4T9_3oTIS)EgHd@/cn"!U^2S?.;cV9G;Agl)9Yb-*t*K*r;uZeb:DT;6d3MYImY!QBXDsThdjAZPPFT%*jOP`r0J:^fT'us
%s%UKX[Tf3^3JR'[mBH'ZX,PqGNpd7n,IXA<>5q=:,A*]An%Zth9,=This!n\SajmS1Zc=W5U+]=)=7J!s0;<pCN9!fRTI9fJ3SZh
%MbN4BR!gjEfO/ObJhc3>GkZ:Ar0_>mGbnZ@:_^<':\W)tIbJ(,7>@%16F"4tC;emdQuJ?hpqr]W0?%I]LXS6;K\I&45(<adXe9^3
%]#"?_NQXpK^2T2%qBTA!IGUKiC@182giQJEpWq1XmmG>"]CPsS-ti)Er:*QU$QXSf*a!?R^Dj_5E`Lkl8'ZP,HHo;;B/&!lA'+I>
%c6Ctffs!Fm/1RH0@ZZWT'"RfBH#9T"@/o9Gf'.qilX6Ibmd8=lr>eAobFL*TqY,85,$U[(^[qp[%,9[G\T"R_I<T`-q;bbn/BjC0
%!9EGf-H;BYI^M)Qjk02ba^h`#kH>B\>FJo'H[>\Wd3Ec*%_KFmdlH:/bON[JfaUlniRdA:bBd6=*'_2bn4HaeMRTNKTduC3hl@@d
%44;VO(l<aW*38e``%c`9Vs02Sps.FaC'^-#dR.IJ@<>r=X;Zb:[M]5?k=[T:)@KaZ_><W<H3dj16h'j3IQ[hSg36s7_K6TH&1p*a
%+"rE-mF&^)"EV?D=q\$-+i&NcH:g4/_G^0eGI`-&-[+f!fRDYfoD.VHF\l75&3`CjLpR%5jWLM:TfiYtq[_G`K6p)%RSd$+T!3oJ
%Xg.1p?o>B(d00V^,u"fb_Gp9BG!F?c>dksGd3NX)%FPKp+R<=d*t)A4Wq3ZRKPAJYUeY]e5"'UQ0=-qNlu,boZmrIIk/eut?$<]h
%3<O%s&d++dlB-e6.f5D`j7^'k=`c_Ej7]LS(mkn^h6%Qa73a58cc4DgQZ!Uk8b3R\7rd<jQi/J8n[>L(ngAWndB(N,L9f&.05m%m
%en))!IX#2(3;M\p2:3th@.WVth:n.FS?BI]G0O5coIft7)OkEL`k#I='?qG2('rJnpH*i@5)ahj+P%I#Yh)uaYL0F+[a)Kk@h\7\
%=>tX^CM]^Qff*qirRI*pL&-5_p0mN<a]G+Uf8RXYZS).AK6ng:1E2POWbf!cE$AXF)jA^]lp>YK%/N2N[E8+0o/inCgXC%_ZB#9K
%]KeU?"_&V/,LcN'dfqP&bPPRGe[2bhA^(fh&MglXp[Q>WeCsQ9S[F_ED<la1#$LaSG(H*^C5T12;jm,.Ip"\#M%Na1:Xn[OeAd_T
%pS>@iZa.mfJ*;JRb\RRA+'gLf?f00M!."4DANKs*s7s>^FYs-!Y5%Y&>]N&h`Xm3;3c]F-q[6Wplf+LAW(<CHFeL!cSB._uoK47k
%pW6N?d]`;dY1@_.X!a(]]r%q6mKpXXnl=::&hMleNqe*/JKn5Lf,H*TguXHjPHrukgRlf_I/\*JhE4E(l!e"0>pBr^6?"a7qbU"D
%p?"K\rDqG$pFY[GnSe,"TI+ka:^M/orn1L#KCnDj=h9Mu/nTb1D^K[#"267B&>&>rDFJ'MIP'l:<oY:Y0'c[Y#*F40Y<hR63,nT-
%_b"^Gk`TCt.@t&0^2Y4KCtg@UqUY?$lL*p/+F(K^L\i7_3L[#:l?W&,5ZK.G]f!)iYBr+$c5p7N37HI&H?fF/jAC&$=tnfZiD7DW
%/ks:=[IF+3<(*:']qm&GFruq+3_@5IS\+4;YB6r`"]n]T\p.]XiR@=U#4(9:4tq);n*u@*BMIn]lqQ"_RNGkDb&SHt57!oH]kPIs
%mf&tK[^9C`l)L/:k\7G_neWW<414a&Oa\>*F\>e]*,WFrr*Q;98Z:7a\i):ikZiLOIJdl!Wk,'84!A0l..$.ei0Z<3EU-QHjMOZX
%BNJ+^$anPZWN>K,oAIR8npJ-8<g,b/n%RP&rSm`r=lAZAb<M)]D_X:0,&])?N/[/=bi%maA"C\NeJbNOO`"mDeX)JtVR5(R`P0ci
%_89WHnnr?MOeC@gET>$R)I%Ra!\@Y7cSR=Jf4jthb2>+YIK'#[P-iO._6BV:R.8!R&EEA$lbhsZG]?PB5TQ#X#&nH[^%m"og65'9
%!i=>cDHN\gJRYhi9Vc@61GBK'6?p);=F"AhLpe6GS:/,\]kGruYr]Ae,+eatXK=jA,cD6[\@di%oL]WJFnG&U8V,:(!;but1$R3I
%?T!^MFSAXR32</ersJi=dAOs1dHKJY"BXUuoOi3R/EH_Ar.MT(c_7u_DIa\j=A>Qqab;lmO4rGO)NTO,nAB;9mX/kSfD\)KMY1A$
%r5qPj?&jnE(aI#Ya/YTLAp/:,Y%TAT>_uLQmlo7-9=sc>p>l>^Y"+0uCDL08+.S_0E:87*\`_8bUbbBMj)3tbp+jb'[Cf4E1YA(E
%X;^96Zc#MJ`db&fgf90idBr=4mH<)lWqMA@=psHj3fC3k^!<*F^,fFao.kW325=T"\m?I]#9S(O`g5".8>8oPWOXj3M]3BO896Mn
%i@W<Nd9B:=PqFn[HZf,Aa;#utl'$=8(JAc7m\WKmQgX1VZpNT?NSVjjdSW\.kNB.lL+X!0_S#!=njF6QN[3&%9E!>NU=Yp)@V7.3
%U@[(7,b:1o\Ls-).LtlN%?8ZJ^3]CD.E7>':(AOSQKH4kXAOBJaQ-CkrcHgu+Kc)+o"'<TH[C[H@_>sq$4$rtrV<`AfA,Whi5+H+
%9d<^h*G(8lk4(c01;5tCX\A*:>sSe.*-JF,$>MCD8N?AhbA.DGOAKoiITogKX\_!(FqSp@'PrFC'+6`I'X3bTLkQc^$D``j'+6`I
%'T?<HMM3[:_KZk`!Eu*D(,0RlKu-rlhX'%P$FeU[Vn.ru\1d)-fl/a1@Anfp\/ED=MP/SCL=26qpMmd8A-fH.2q6Mk[*Bu8mbI!e
%E9kQ*9gmlX+,qNbG/mtH7sUO.^18)(_Q@ci3Li:E;I)ftB>f*n(qPe;iRlKJGfn0]m9O/a8M^'dY[&^e4\:A8Qdi@Yd$&"eB4X:7
%6ar)9ZIV`W$3T;&f1:YLBP$c&L71(-@f:%/UP!4hh+@lgM>+,0F=S5VC"\Eq:eHK#gIrR.n?@^LcBd$qNU;a5DK=G"i:5M@f`=ki
%R%)BLaUh:8^@0K<*3H!!nsh3J:s8duQC>>\6^;klh23Yt,_K1SeB!Bplq9*i.D[8sR0S)fV?E(k2#Faj8heB6Y!W#9V?E(k6_j$Z
%_dreE"Bt?\_)AT-@\-V@'!=]6NumBbgCoQWJC\pKp-^,Cb.NX:YpW/c;#G$m(#("eJD+?\iV)iZ6WZ#G,W)*2PBb_e2FY2&aft>L
%Rq2)1qN-Hnj#jGS9/b/0OGW^P+W;:KdMm9`e2QL^TJ\!%0CH5Aq1./U5F,?YUQ84%s1WpUD#NhuSQBU1GJ:4u(3f40?%9,)noUm&
%Y4dW?2$T;$?6.IH^RhU"4\D;`I6F)>]*/MI[JD]J.AYBt5c),.`T3*5Q`\IYU!AI]Ej"]+0#C_9ZM&<eGA#uuB(c/sY@!4^ce"M\
%%\KmWNF0C*?U*@1F1PoQ8Iq?FKD&;;:W#5-m4FkO&#[g;W$utIV^DT03ejGU;ZuKbS,42j]/f4.]W*fuXfistqaB[O-SB"1OG-3Z
%NQ6WMOHJ+DXG!9)2Gp=l*e/HN@Z$EUhY,l^#;Z`WR5B&uXj6m%a?H*K-7pcC?#T)7)6jWq4Vpb`kedpPdG;@aSGj0scic5u8#!9a
%QhlK62U9``TqNG(]9D2L_]W,c5L+C.iQhQ34*AU6T":3/a,fZo&&.B^(pdmc,ZkMbISN'\5*!4148SnJQtOi"E'_\Gi8+5",c'#o
%P\45fWV-/)qmjnHEcQ9n[#sX#3$qJ_Eanakq;j49'k[:Dk1XP)K(V%LSK)^"BErB52ibhYi84@1[PGt:?`\%$871u?V:OZN+E#A(
%1,O=+(6PEc<0;AJptN,D1g,k`&,cut[LN5eU#0S*^.B^E427lRD#[V4Zh\=/cCR7MJu-#X-ITGk;OjWSNcp<0$kfHUl8hg!8EdNF
%/&h#)qpWmGl>5MF,=r!cGo%a>IO[;UHQK;L4kV"/VqAo.k2@)h/uiPS)]<MiHWr>8F3Bq&HC*gLlh!NIGKkgbV(T\uj680ZYt)g\
%p1>@.38%M4D_>[G@5Q5a>GoLe"^]Jj<O^+W)Zd[@phq)[n(?dMm)[i/lKKG-h<I1pa(p!-8COLr:ie!pF]R(fTF5nAg^hpuF1B?U
%E_M1a*\<s6cd_<Zc&\%j7rtM/mSG"Q>ZXb1f3B6-V2FhGR`ig^^O9lMoW74:\[Fu:mV$$J?;,-:4a?\A=(t'.#PmK9\eY<.o]F.n
%F6L$Z,ecS8-^46qb(S->^Y<-re9J6>omK[0--$pmoY\0lT5"675$/kPEU&OUs7j8oRsfX=QK1*KLkWVoaph4PJnm(&D8jB*Wabhs
%/UXec+$QbkBitKMBKa#\M%\n>4G(@O1R42Iej?2k^B.*pSgEi;PAIN:ZGGm:4Dl[r,SY&ZIp73W=#r93A06ngp7OhE07MSA@F'A.
%LM/W[!1\O;s#N!jD5LI*4L<(DK('VT_-5T1F:\,KJ_Tb8C,pI44r6fbJ>UhUcUEPJ"JpP7*gh\5rBu',Df_t\_%cX,GZO,O1U_CC
%F7GQV=.1Xc=(P)-.Y]Tb*_N0)fKT,C7Nunb_HH'rEHACmdW$":FYc`:FbGb!XK@[Q1TQh\7)7:^dOfgk3?poO_^^he[V7o'$#O+*
%Rc'+e++L7K?h\S3Mbn&6d(=+m&,4W?5GRhH0f6-WBu<G6(gN,`f&fo^80WEUf7'fUdiTr]Ls,Q5/oi0WD("&hM&g>Zk/S8*)E?Ae
%`6\V75(7!r^*GCef$rBip*7Y[H+7m\e\o\pfk>2"hZn;:JW<uY+b/9mnKlN^o&k!;<W'2/J%7>^<[mS:ak`sC7[gD"^X5WZ1K=M1
%X5>u(]"/r*^K!b(%CGckrnQ5MdFeB+jn[if?%!!D?E/'M.E2N+a+)Y(pFg#NQV8I0Esk6S'+C9/0+LLZ5,muc4V#PZNDl_t5B?3L
%(:Hrs=a+Rmfrlm>hhS4`CFY#gdE3EM-IW4^6F>I0.<Wh*EmB!?A.V9!2<RZ;AB(g^AB[[6+B#S)M7H[ZS4?4B;ube%QfSBWH^BYM
%`r^S*P4htm2]aPf2u+Y.)dY-R(6QlWCT\lR;G,G\<dN4bU6qgRfUDd6rm"Cf<D0#nDD(?E/a5hTY^5?E%rObfQuFf\DT#S<KS!OP
%Z<4V&TeOu&/DQmpO<X.7^\bEGQH%O+8OB,b-ZLEfd<?V^=.7p?ZJkR2THW*BZ8)$sADE11OXT\;Kgk2gR*;pQFJYPmEn!'+ZlF-U
%l:A-L@i*EX_[XNJUCXcZ(e[EN6lT[O]I5=*_3QT]\;fu1WNfg]-?3B<*$PUu0JC3@`51m:O*.kE'0R>f'.QS)lK59f4JDMa*0%t!
%et4dmp+G>OjbZ[2;/<$e,c@i&HhO)0?D4!QWIB2>l5Gq2NGkR&c\<,.:2GE#>Mk/o7,dQ-H(b?n,I=iEj#\WJ\`W5[26A)J/Y0c7
%Z>Di'$Jp;6f%H@8oA[f2T2#hO0;;\2#+ZZM%_UiQd(LIDWA,3e\l!!\1@sPrS"Fk_`#ZIT?Pa7&fjqZ[l[2>U#tAI(ZfdsPO_W6H
%1!0I*B\\fn7!*E>`kp+1nkN.DIJVoOGk(@P*l>]#aA1V<N?d*C!p_%U3kOrgFG"]Z42"X@0pZbZaV.oOndPQ2)B-S+,jR)^jY:!\
%cce1$q95PCnS&!26fT_.`Ih.$]tKoW.k0eDhf=UcPL4d\fr.Ifq)D%uh0:r=,ap@b'R`Uk4?^fo%jG8]9Tj(MR3Xp5,\Z;JE-7.+
%@TaK%,f+]`?m(iWcP9i)n69dYLa-713IOK9AS#,Y3p<^'+^R6Y#CjUs0mb8d;b%#N^\D7:T'QKG\FW4]c!N('b>[A0U9S?4$Za$a
%9`mWLp:^k.^ADuU:aNM6``82:Qc"a4]e+jm)#nP/mfn.]!%hkk]<!j_V@<6;m-XoIZ\1CBk@c-t/m2?M]r3r)V5'd6A&*<SB>O_a
%jk]-QVncUXn9+I(D5=tu\CXqZJ^raNB<$'-p?a*_>Nngs)CsO2drcT*aLJ#7kf^NYJDXY)bRs>mg_b;9Goi+YZ/2WG,d_4Q01TNE
%?9DpDlWlOiNLX,>eSE*L2tTh?d)Q^bSbeMo=$(j;aPEnF;Im'i>'[ieAgpY*f#oH#l%@ZMn#*NJ($`;*3;kY]EM5MM3]^A0/?.pf
%mDXC,7QY9KP97M'?CCflq<W9HR%"NUR]:nOGuT-7S_1I(DEY#O\5&Pl#`\/GN`UDa;,u(nk/Q\1;:Buik/fo;Fma9kMf#)h'/)G\
%D5:bTf1D1*_OMuCoFBkAThUt,Dan6aFtkg'q,Xb9TqagKm\gurN[IP?j,(J059SMrr,\emf8sp]B&iYY0<6l@qOZP)/M07>G_o+j
%-em![<&AoHDlkDN>pWos(gp:44e7BeI\"cTb'C5`m>$It'45t8esE8Z:\o1G0Xls_Q]2K(W`sJblKl>kOt2)`mGnK48tF)X:)+Wb
%m/j7W#KiCXro1](hTgcnGurHlP@^^H#/?T$D]'A''tMa`'lEJD&`E/)AYcC%Dg8fdMT'WemB"O=2lZNf:QFSBfoauL5B^mYCTN_.
%e_.l\Tjok>'=Pki%6j$BgY'ecD=b^2/;i"L;U$<mXJ0Ya>V;Dg'2Hl%=K*jCff@K12O@)8BAq6*Z?UQ$e<r@g&'n$I(UV-`o[>D%
%G1dDnmRGedcf4,[)p_UC*N];4DL,rq8;e:R:RAANjk\qjil:TOk`c5![hIJRagNgB^AcISSaTKD19>olpL,"8#N**ad'm6D.7M"L
%"FX5NmjgiAVZctpVXMZ775FFE]r+7W0?rn^02Kr5cMc&9@sZj'FL/-S%j(Z%R1HbjhVFBc_9ST#4m0=tlO4gQ.*%<nHh+iX>mDTt
%NODb.`T)MQ^Y7P.$m[\b'.7bJ_Sn;,Vt/8\q'UtC,6PnEE#sIYddeM>%NM%g!lS[aO00j^bbp/A9-fN=*C+5]74XQ0%nUhF8msPn
%c[OS/=E!OUS1eVDMlUi?p?;JSm)SR9X6T'1&(2$?/kL=OrNQf=d3=TBpin-\hP!?KgAF\08(md+PQ0j)(J$5CI*fZ`W"gqWQM1>L
%Z=je@"Kg"L*d#k=+YAPnCtm\H$e7!%I_\9$5Hobc1;7`m0K&U#e[sSgKV_3pbdqNao8&?e#`-JYSiiZ7I"/hH:AuAB)Q-3CNRU^d
%.OWX#^Z!m<;WT1kLUj,48b:Kjmuemd:Uk4=n9<F(#3'(sd4RRA[f@^g44kQ<>'7t7^"u3@B>TRCArW%Nb:Qmdk7OFj]Caq#)Dipo
%*^?a)p#Qdj!!8dZ)hL)VI9bW?1N:=/lO+h7oos>QjjkOsDB.f_]Y?=-n7H+Sbi#e.UjGDR[2s+I9:#rsPod%/*Q[NYHaS+A.CZ.=
%F=UKJNH-g3HF$a.a0/TZa7(:d>-9Z;["!:>B?>h@`u[CDlUn)ibB2.L"'VNK<34qms5),"''UgJ+6b<nSHBO3N)$+M6@[sfSkPuS
%dG)irBq-n)??nV80`S-&)Po!P7bOHJhi6U$Fni(gAFe]glYEKE!kNQfens*9[d[g.:[+/PWg2G4>:ul:pgL&O7VCJ@9qk@00Y&En
%9a\@"dk+i`WGU$.`5Fms>AmFuBf7@)B6(?5Z:SnUL*#nog0$#mn)q*hlZIqCX7K@"Wn"Rih.f6`ZEEjP(KAiqX22t+h.pK>P0T`h
%j1@crn7'D_$4UW;UCCU#eog*6[YdFP$[PXVcLm%spATTB6PkVIAQO&A5l4GW*D49og>7CR=:?7`r>7SQ_lV9%?achi+gb)eV@+T9
%b1)oIG=/MoCp!*dW4TET&B4#N#;]hAHWdON*6r9:R_!5mBiJ(%L];jDI+aQH`'\fOg&Q+4I@J91.io$qBKn-gnM!-#FpXIg:>YmZ
%[4GM=#Ic5k]s<=Tn2`E\4iq4;i\*)P<[oO1X\j!q2hTrVd?p`JPHA!g`4DbE3fBRhW8NBcL-u'T6Pd`E>bmEeml*!gB;rR4/7rgk
%1md%3>;7dU*Kp,YR.V8bDk?3_As[01XR<3^4W<'^?Q,R5d=pB>Yu3)qEn7jdZ`FLYdfC9IjFe"a$NV(+jODo&TE1D"-f;,:4"=H.
%ZoiFqK%V.Pl*=lE9RYTar_KZGMD[<KHhP,ljdBm9,/o36I!1qTg',T[DJC4QQ&N)q!:9jYH0aMH[CT[c&a[fV>RDOBD_;t"6M+R9
%1R-V-Ms!l5+TDA1aU?fDNAgfRHl(rN[oE[i<C$gi5lTg/^gEjeFC,9eD&K*$'G,]Q-S&\k05."/Nm7k\Ts`338QA(Neh3B;JJ*CF
%=J:n7WPNXHoW][lJ]Ah$FE,(&]:WHs;1"3E8V-ba>mGfjWG9m=T'<*sKJ[r:o38W-Ydt<9'I)&<:a1T*EIE`8-<hh64$@f#E&4oH
%\unEK:*+e0erqbn4SP]%Z5`FI,(Ii2B&9mJ'=ak+WYH!&b:G0Op8(\Mle7\>ATZNb`A>73r25GXAkg&;17.YDk%e<3qBj%+!g`!b
%^jK<-F-B'%R.'s>X!TA!f.r2qeGVE]2'A%P^)Y;iCW@q6p5a!k%X"jOkDmi(<8"4G=?JRbMJ./!qbq?pi,4R?JM2Vb!PdaUdF6"^
%Oi\-KT!Xaf@P-g;WM\8I5-C(SeVW'A\hT"'(`FEjH<I`J@&P[BVn]%10-^*sk:(P9eFho^:[381'di]g*`;gFi;NF_d8hYpd=b^s
%lI,Qn>3RuFX,!ulYkUUhoWt3NIbmFmK9/]F9RCs\cYmVoWs!f,2KF"5B:jqq04$7fg#j:Hr&?6C-9g/>&b=7T#noVa@J9M/<@26-
%6oO<W8V&5s7ZFbO[67j:`GW(W8@9t=1*ME9?%L\J"dm.IG.h45fgQ6KjguAf$Ht+bQpZL5J_>_^e+bMs9Q]t(ceO.:1XU1Qmu2$G
%R!TWH9l%Np0`PF!XsV><8qWKDf3Ei/r0c+P@%rneYJBMa!_cnYE3LiH])]fmY+OM>$Ht+T^bg6u%s.te(DgKQ:uuKn[0*sY[nnoH
%W?%(d"($Q3"`@*$aV-IY,3R1VIYG\1q@q,iMreC]=jWeT5PpM$N7_\OBts<+U?J;pU!DjsmLE(Ud$]OQ/o!$mmD)k.W3aU6AblZ'
%U6@?0Z$@Krg"7mH>)/`N$LK*]:t]A(gfceqe--B#WA"!;Qn:fW13J.oa]>Y^?V^t3%p<bJ)m*u>AjeU)%r\<&@>PZ4Q.fhK22k;N
%/8hGq=lUk\/%"2+D6mi))S:$a21V'.H"+dr]pBjokicF=VTU_NlNTDo/X0gY/ru^R5q3^sEb4S&LfD-fMMqOe>6EfXVLfCsm#=M1
%d6bHsOcU.n3q\EFjPb8?ZM\Wmh]Ic#Ad4P0@YOMIX*Zd/U&B-X[UoEB)h?S4b`!'[#PZ1'!0UdA]plp\L17(&9N2[LO6:5n/oM.B
%*mDk[[ohS4NP@.JEAIK0^oHcd/Zm',YYFQ:;aF$o<q>"rknR%+8&0(;VfhekqVgVn<OMhepTeY]<6s.#=8V4j2kmL@APj7%p1?O+
%iJO#[?_0oj6PkVIfD!$b?Rts1qPtS=%nX6BMR,UOpMlEJq=Yr73Wil*oTgZ(orT++N9meR]9-%"S\niIaLCLA1rIeKN?gE[f[c,,
%V(2"+QgER3BUd^Yn&ej/m3Kf',Iq%1B5SS,?]Va%\sA"J$-4,P<(_&N(`n)p/mO[/Krk-qq.Op;CsGMtY?`d2,UqC[HZXN1fpT]n
%Cg6_+diV)9D0YkA$Dn0>B&#_%B:3g0>NNa5NE@dX%\Jc!4ioooFpjf.,5Is&f*YYcF:c[RN1[JirT=Bk\0MC?T#`jQ`Dp9]0L-)t
%`Uf^Mg^[h7(%1=agVW)mqr>7k^Il!3<&+@]C8c$`q))iBTE;i+q"ZiqT,bqVq7Ec]guGV`1%l.5)iHbf7V?n\C]Ji?),k1o7i$5p
%`K`J;E<2<<X>JOSj3*?qrEptTW[dIRWjDBE$dm,geQ"@hU5/H-RghVh"6e'lenN^P1n9"N\Y7:a*pr8c+t2Hb!2mi#ItJ];DX;DC
%.?cpIeu`qE:(<2h\BW3n[%F_)G&d]CZaR`gdeT0R*U"Gi7aF\n9BeNtJ.o]JbGD^lEBBL[PuZ+IV@N4j?4;g=Q\-VraQ3/<qn=I;
%A5X^n>]V9X3ZGW=NbJ+=MatXd<&\n&0@/qM-BfZ6H[[j$H]fb"V3U3=r<oTCF0btHF"iB+em[:Q<G3OnSP>5tF:o']"/GB7%^&o-
%[5C\$87GYsPE3S75&4Ok:Hf+u*92^-'4EZ6`HH\KFcdn$AVa"09lD)=l;S!tYZ*2d#HOKp[2$'Ld/NANDOaX3P,EeF>^^8?,-6s8
%3q2On)>E9SY1.cG>ke2,P+]j"W:+'^\8IWnT>hC___AHALV_!Ij`H^M<U.]>_:V=U[!J`lb]=Nq!i-idJU)V\[.S@S2gu.$4Ycu6
%V-UG]:>/'LdV7+DM>EOoGW=r%f>#GRY)A\i!'\ZcA:+073A=^/s0`mag_0)/J^IJGdLJ.Hk&g=j2%C&WjQr+Tn`f^38jp%l0sf_;
%Kg:Uc`fu:f.YO2>3G@Xr:O?Jl7rQ,k72:*_&cL[7m@hYelpcJlBWF@&Y<=^50'Eg1es?0^+7O*n<dQOjrPA/^la;KpX7HP<>-okr
%;<aB*;V&^bFREI8X3hp=)$]D.PC6\:>H8e=8aY/#7F9f!XL>1RY3Q-3rM4ek^'d0ao*3Z,.t"05$G!-XcPsf\?'F^02-t+3^=oHF
%FAJZ;\FoOIH$9ATT)Z9<B'K0GqmMJBl(3($6CI<\I%/OjT/W/*g"CRh'Bu*e3S_A6;YETJ^C6K&Z>6#G]i-]MHkA]32mZbYC":l_
%q&bG23I14+!6b^3h:=%.KhLu$UDe)q^_,@he'F$Jca?Wtm="^iYHRC6n%6:%rr40SjOsQ@7fM3t,88[q`O]*,QkG9cr=<M92pB??
%3;Yq-OhO/N<fO_/onP^tRR<i/UHeZ(hC?-^o!+8QVX'0HH?p/$iIB5<h>&;-%;C"X>p-(+E(EpRbDfhn,_\(%^Q#LjOJW]Kn'<H9
%KhLuDSo<:GW7c;aF6g1jhfld\St6uKUhSNZrAl7:E(RXp7F+`N/jl'pUKn![#7bGdY<n#;k.i.bU!_W,^ShHQ]%M^9+WD3H*&s`s
%k?E+REGM0i9q3jWK:2mt2!t(]+SRHo+4=[TH$027`bbO6VT+L:$>L%jdU\``>="6LT&,#N?#1J.K_RJbgsu.WFeM4q+4@6<(Y8jK
%#7bHK2KJ7Y6n]_.>3G?XJ*88U=^g0*2^Rb/F03ECB!8\cDl7s*rSJqt:PZEG&nPVENL.o^X3YnuC(;63oP8RV6-XsJRZPW3K:2mt
%1bgXB"p]nqIO'1`]@6Q\%;FPdrSIL8h0L;;+1mMjh3g4-`/3Bm`U4CV/(b8iG2\Ku>Jm=BDe*obim$BKhDb^pDXhoE`Z&&iH$]*Q
%mS1*8$>F7Y6Jqd`DS;1o4hS6/Z*6tX%iBc=3/a9=h>Q4OB@1'We&>J&pue9`E>J35s8+d6&m7F1*5$\jo4\ld/8tRQ6AZO)UhP2m
%*J0^^LGVXC\S!4_[k`3iNB&qm7'or;bRK:cUdVRi+biI)qPG?+KkN5@]2g+&K:Zud7!uaK,4o]1%AH7t<?\BsIr7Z2BWFJ87_UT'
%U2?YjVK=AB2fM;$EpUf1LpeddcA&n:-,M4DPufK%.rK@m\HY]f>F!$J_N!$T"`;]lZhs4*Ps(mBV#<;jbML^@hJ&B50BNNu"^f,b
%qQ0ft)lhCJaAUPqPfl3mShY`/rr#SFnU&[>KnV>CN$2X/_&O-Bn^;N#3r!l!s"N.(T^PPl4g0@([\#Pe0C']`p(&85^TW+mX<2'B
%mX2*bGVi8Y>P@L7Q&b(_.>rT>Zuo7G0Ot.P@h+dV*mKuTGOd.9!P7Z?&'ge;7RVsnVk\/\##B?t3/Gk0K\44=)?]!%JX+]./OOQ@
%Y(=o_?tsD'rE"6K]s%Gefj;=9)4#OCPKg)[LPK4\Lt:h%.UY;=%u_`Pe^q^dNTjp3[.<jto@MnBa'UXG\.&&P-]l8r\p+oR>01)X
%N\f"d^6RrZ.UA@dT:[u68PT,rr)15hF)+pWp$MW)de2CsA@;DGVi711ZC$lK^)j9Ee)-Lie_Pfr'4fda:[1:K(5ZJik/B)8^1_5G
%#K?37oCSNe#:8iFM;rnn]hhaJcK6cElQ<L!oHLI2LNDcecCU)u2%k$(C[8n!b2\ESHeRLl\_JjYVT3J=qcNfX?V:j;/&/.]o6T!S
%kqR;pS)Ocbo.Q<ue,%fp2-j204hFnV^"Hb>qKd5]l^`s!K;Yndmr+`B/3en0?\%4)eL*^<qr^K'39>bFbr:K-?B<?kC&(_FRYTeC
%a7eCb<nRq;P=CU8h#.&7<\gH`eD-^]9$]HQQ<rCVDlQEsYX[LJr\@cjG0q!EDmL_)?VY<"GTA</>rV]n&o4U<a2IssI;AZ0mR1(+
%@ro(@KT+P6bn'YZ-`B_%M6ZUnr<'$EE1<"g4[)&29%q6Er>O]AI4nsm%RZ9D9jufFcBq="6>C]B_8>qsa>[>r&q>mnip5m]45Vs,
%\AHP=ZO<2O.c5/[Gm[dE+m'uLAb+F7$sXK4.?h77AqT/lGH$g+BV$JL_n-L^1Sp8Ao"PurZ7HK@o=0U2B+OujIJ7OWf;B.O^(!jK
%bn&(%m"F?F\'+60^YZYNqX/k3=oWs@pZgSD5JqQ[ZR^fH4$._nrpJeCjh'Jcj6F^#@941^0=A?hSZusHaS#;HesGcR%dq);Iik13
%Ek?T@g:iWRY6UjKP)?It1@aQs6)rrmqW[?pCLl`!gu6?H_rLEPRGabo;%PepAHN`C2!dYWojV@lD"E#I4:3](LV7kZY>"t@oO)sR
%pq<&500F/iIX_qog\CI,7A-DeS+g"P?YHdeZ:Z&LYH;ZF?YK$'-59caIZI!rT:KjrkFWiWN6f/MKD0_CJ*'Vfp+a_CSrQKlqRSXA
%oBjZ#Of=7>!HimV):H@55KgUg_Wj"%Wo_^VW&`)YhS"5H`6c3p-crbbhs0eC->rWn>jk\Z^e&_Tl4#aZ_I\>nCG!5.>P3WTN@>So
%4o;Kfm@AL7faM[q2*]`>c/S;9I8(^[e@;d:c;LkGSh=)/likt+Z^Td?e*>22h(n@P9h_Zso^'##UG]q]"*jI]lo$*@[e9eoYGngr
%c.8!YDitQJrtHa]Z6)=e?(00%G@m;%>Q7Ha>NPB]9,!QtrSrM1]/ug<0(J,0@8$LZS#N!3ng5$8L9RFcP$1urkK?=jp01;?oXiS/
%pM1l"c2H'ddhl8U>1_,9rc(W7K3=%<S]opqa.knU;4jt=b]\K;4C.dV]^Z0Q8iA08`Gp<n4cSagF_8tgq;-3V@;j=-L?Af=gbK2^
%oa16Sm@@lnNLat4Ub\%+D&ukQ$Tn2`3OS#l'"qXE%Htu4$_F5WAhCcqIj!Suj6"hF]5./ahL'V'-o^>-rb-"Z[/0#S>TI'&&kd"B
%3niAl%)3T7la(LG`bP,@F1q>:3DQsX`"Lj>$he?5o5[kN!S$S'8b6ZVeUo=Bam/Vm&!?jone'Nf8RG_>IpIOgqYM_@eI,$jE><;=
%NA0mdnP\oP1cf5QfTfI3f1)N/FqO,kc;a0Uq(joaZ1'0]H125oEZGn1(M^LkAEneCs89-_+-n$=06&sfO%fQNkEk:1&bM?^DD[Z1
%op)h)o^s-G_"rp`B()P#%'6XsJ@t2*Q@\]D/*5h`)<ceMd@>c*aPKNRAZ'GuR%/Prg!=sh)+W;%nEs%,gLq&m4.Q]m>`O8;-h:VC
%G%,u6Z*8>K=Vq?)YGPMVK9(p\D^IEA?O)'Sl0'?Q`SW>YcG+ke,6(l%$=9Y9QBMm;"WIjHL'<C*p^I.*%,an8*o",I<d].qp=#++
%4T.ge4+YA[NRDU#XnoZ_qE(.4l,0,ap@r43$H@3dNI)NWdVh**\hJ.ogZ$MuYJ4`EQ/5(.L[juJ#HpZp``r(&fQ*-)`imN$MC2^t
%Y8P`YT3@Vs3e1crJfd`]C;W9uVtmMdO0!me@1#.NWtW,ArU_)BDVb,96uOce8WE"WXN04@D^NJj?@H`<a$eV(&W<sn0;L`Ps2AB#
%B_5'Qkf*NgaFcRc5L.>ck>sMD07QFReI]rYbn*RM]sp2T6U7u]qdU.'r3IGt;gT)*LF;a;]Wd0AH=IK%T>dF=#g/EK&&R(T8'N/E
%0>E6e1C2Wu/\=kC"QblT*s/L)=K>U'a!9JS2p<EB>!7/ah)\[;>:o3V,L$dY`4oZ>6!BS,E.#nkfQu=(V-!&M;L8W%5Wns&#Rb,2
%m/-Ga1s"U$(+2>XfFc^iGkFuOh&PK5:n+X5K55\mf(nb8?fTt7>$CXs)B[]e.`S+iV"cLTNc`I=NHBKt/?)Q(@_M2II@kEgidot*
%A+Aj)?kVVl)_Rkb&aOa$FA4fq%lT%VN.KAaCDQAfGFXZ7],$=$[@c=s"s<k9$_-"Lqq(W6\'N<!_u1[,+6bm#fBnR<^[>&0:9GK>
%_=kd1$[9Na?I`iS`9M3Dq0MqRTmP8-!]bGU)!f\nq9QmQcH//^5jC5Xm5!3'TjG2Y)mM'U''\@4^AX=O&o4T7fD*n"e>_'Pako14
%m<G2Ud-3r!^L&iL7d`G:G\FEC59EG]i']bYpTr=>FQgW_2H$I<K/m;A)[UrEi?0Z1r7dk?7.*uml"\$4S]F#fK+ppePLX*Ee9X+m
%,>%&8f('kujF*fWC7DSjD?TG&i[Rn&r^lIB/K%Jcg.&Lk:Rc:Z<(>['n!0/bpnNf;[OVGSQGos)'5$l]GqfIHXkMep;;0CkISQ0]
%0Da#*nX7gWepgRfc"$4'k5J<\g)\?CBY-PGZO,B]BYVCCr@.%;b9aI(2Ij99iQA-KfU9.LjnTE;eIVPNe]MUj3nh1&\2d@PQFGGB
%XWOX1On<cV2EaW$rMqB2iplm>B3H'T#GM,1-!60sk_mL)%IZ5:S".4IeGd;+.d_T]bNu/(k:cr1E`1$RBpUs=T/H&We`39Gl-H-O
%p`#4Ylg`.hLEO"DpJ`L^rM)N9eI<[Kc+oi0alV?iYA2AfrA2A8Wmo(-CP-TeOOq'CTp#JkI.,n?ops;',CYZp;`ihpnb(-kjmkHX
%)dBI7CO)K>c]fKidd)7/1g;U1oA^rUhqOQl:G9W6flV\C(5j2%F*7I?W]j_.RRK6A?Og\,q[nZ:o]L5UJc>3q(`KM?T8&Z<dINHM
%\W!U3:.M$;AQ\N^cRKt+b>il%^UW.tY(*qVL\l;q*&gWgMfPfp3=U(ED#3c^X?KoJ0%(,uC^:R!T?jdoTB+>)c,kg]q<ZeYSVN\I
%%n@!@$QXTc3t!*G9d->03jk.N@"5b-l[*28A*parW59:1^R(^?r+2mcOduD/P3UMea()NQqHXDoeie92B$+tV`"O&/d3MF_/),84
%0:I9V3YXp,4:=iUAG,igAR(VNddB2-,J5^MP:?lge-c3'%tP915,_nq,is<;L%4K2NW(?<]XY%3_0@u[,e,<WS=<jT@kFWAJbu,]
%))7h"1VY3UWqUisAU=JO#i(A1D9uB$P=gs#gKlu=ZLY.,CQS1'jIKW?3%IRR)8u@!a5?oDEG1qIh?h(Y)rE:80]^UE."-13ma'c4
%+@t@j^AIEagYU]bIeRV+*&dg+keHmO.u$EV&$$tL58&@UG<RjdBnsT_iOs.s_=5Ued--tPQ!]$l5@+3_o_mP!?iN8OLTc^[mN(\r
%&'k]S#N!f0o>BV<V;Me[dn^V_JA.^p^&]2Lhsl3D5Prrg%mrY9$i9G/l&Q)AiA5oT?c-;+r,DGmlX9K#%ic"3@5aW$q=)p2X9/?7
%:Oe677A''"5(0Qtp4hG![<G!%J*HtDL4WGCk6:f307l`+EAG0aUo:tgg'_*+n:/u9Wts\qOVUA$A3gp0KGYa?W?Q7li/qT)U0gQ>
%iG7E20[!X65lXEn+A0MXHs$/IHFSEPo1:((7cUNHPdCKlG:JgRDs2nYKnm@%RYQU#V2*5#\gfqP+lP4n5M43RiR$YJM8*Q:djbc\
%B+]hf1nN9erp/t%]:El,n,=.%*=gC:rqZQZ^T5-"n1:/8q=a"#gTR7+rr2QWK9#0MlYf<IaigB"G^Nuqpj)m4.83r&9gK=?Kup@P
%$REZe'h(t2A2tu6TOno2K.:Q2.4kN7k*c.?9>T0aVlkd)>%R?=1ILk`Gl@?7Kmr=mH,':_rI.sDLJq:QG*fqXF;gk"j3gd`Y]RHp
%/aC'X5$Nh]]nPOu>=`\GKriT9N,Zio'kOc?6BVdHVB?L<>-_S*/(tP+R[47cd#-j7894Pf;+2IV15fkGVY/QYa"'N:<2#pTdZU\3
%H'"lRim(aXUaEAk:\%WC6Gj<pOVp?.R$1XnMC;5UI?CmM,6qYAAgJsR^(m\.#bj-]K+)#E<bP/+4^h-AOaF_XRZr%"@?RNW8:6$%
%7DaZ5%4$5%Bu60nWP`G9-=I$@Be.8G'"]V:\It/aGmrh,VQtmMKHUeK:ul>d9$p!mXq`>6B,0MoP_F.-U/mB&G8Z6oU]@%"(")J=
%O=?GABh:Yo(?":Q)G->DDQ-;A8XMq,WDqCI<hcZK$k8XXEgj`c+[4Dl,,*S_1f7*iCDmUEof3GE,,HS!X/qRSFANcF&/L+JG74`L
%3K9aa0A>ne>A8X)$f`K=cl^[U@U^=UQp-:o->Q$NFV0!UA7D1;(;2&S:Ded_SGS5'oLBgE@[tgQO-2i(-sE$2YQ.[n#LlLF[$1oU
%4>sMLROFhM6X^EnMV^jnF.t*s.VZS)+ekfd(.qQeH?oZVT+NXW]Oi)$)5]l,Vid^+S;&B5M_p_X%Oa(@BUT*E(asCDUSnp(+]]`Q
%c`h(Q6]2j50J&rs9lK#lP#78RRPRWVN27O-<LcO(RV=?48m3B=Y"CL/7Q[&tQ>hu)Gsl-dY)4WE70S@-.`-_)QY)b$Lk&N[hFs'U
%#6IIm6BLJdj);");?q,4.u1\a2[.#bS7@iDh;of5i!Cp!=7/fl_,GK,8?bp(lG=[@(Q#J]KU)bc7%0;P/U&Rsgn?>JE=mmReccL!
%ah`:;)k&lYlN&8q'%TedWC+F_X=_kn&Ec01e:Al98UMsQqZ0-S64Uq9U?G7tatXA,M1r#bmf]%GN(HL;30dQ6%%0Jg.gpAGAPu0_
%35ddO'tnB4^GRnoUd2"O?/bp2@u2"a$fhc8.'<.n&c2WD6bS1)Np*O2KM.3OJJ<!b%U'4XO>kZrRa#)ONRsMYER>,u@7XWN\Io-#
%JM9ZbZ'%/<5a]n:a^RCm@T*Sd#rNG:5p-N2"QC]$iQGr'7PpMY(K<^KBionh(4Z_08\Ifr59q&>_NIfOVSGJ3`Un2XbsX`,-e.<Y
%O]A$Oiat_(:8lLGf.^ELT-6t.")3?a%V7hMaQbt3is]o/h'F>;-q/Wk<c2+I@00k(4\fZGniW)mS>6IO+aPO$@48lNU^92OOB@N^
%"A:m)B`a\3XfNWI:22;51r3-*3'jK-,WfBf"bk+);W=J`-]fBP:-sk0ig+.Wl0b>m9lO:48J,D_@bPKU%5MXFZ'Li5`q_)2M-+.t
%87s2::[d5+j9\R3g0Qc[NC8u?7iZ1b:Du*Fg7lTlZRS7ZBLmQFM+I+YqEp35>!SXR%B(R\8eM<j<MGgGgl<`-W6YeU#u56hO>PfN
%mO:_&,Q(K'.CF2NP?JkHa;!o\Srcpi8PP[Td12jU#JIGlC!m&$8ebe%jgMI\_KcmFQB%UIdEZo1$q!tO]V7cJ.!(dead%DQ9[An&
%8EE$&Y!A2-8?aFXq?(S)<=_uOB_0\\f'c0U)(@YidWo?V,fGe9L`o,b8HTPp`rm7p:n!(!PEC70l6U&Lj<M2ea=!oAJWZnJk[Y6#
%Tlt3Zk_Y&hdd"s'J0]Zu'H)`TN#hRAa&c`:+eGXUoF4A@=rE1],pZBbfg/JufL$iK';21UXW#Z#VEI]Q.;5oQ"e7k&U$&dLe$Mgc
%+H^'SO<fBh8T.@`]B2NdM$2p/d;"3+7&qkNW\O6b`Rq.89*1O_RWq1%R:I`jD.mr0<iMYloS6Ht:7:BP#7Y3AUYQM(Z3QeDS3nVh
%I0hT+M:gu219#`q8>^r7U99TbVi=CKTq.<"2*6RiJc_\kqGnZ0*'sr=%%X"M]1"mp8pDm7E<T@!,R5pDk&`O=NF`9)M'b5ob#/_C
%6slgu_(mE3[)6p]-0>b2:h#$<oK2=Kegj[QEX3sa[SkFU),?o@9nNX:.B758iY.M6kA$JHKMjZG:me&e+I)Aq.P:cN9XLI5VHr6o
%8s#`g3oi9jV7%M2Z:;Qi`,B5RUs:-JW6[;7;1K=P-88o,E"8T&p_RZ&+XsFF5VrY?&i?=JjcL2/'G*l50(9?J0!g+*JjL06JW9i)
%jsFS.FTJ0=Knqo]3:\f$WG3J01g!j^C$ZBa+H%dpLtGYI+t+1?Lqt@*X;.s<ZQR)K64KZl#<:qD[NLs1<)?q1Nme9Pm!pFG/9?33
%!ZT3,g[.;%PVSf(J6Z!3p^gctYR@H]U7ohf,E\j.L!\"V):;>s<$SaSl%S.CUJh]gJ2BNQ9X`s`U["i]e.\!=[c9`P8TETaVf6NG
%Dm'45-L+Bk6r9%X4sZO?g[QHWJRl&,+7u;OR76R=P0%`lO>buGgd;Z1.1SHY%.o)FUb1].""Jh3Z<\PM>9oWbb"Ii*kmo&'m3&*R
%:L1@p"cuEdK1+]d]-t-.,RIf,4_^ne,ak`J-EWc'YG68l-F]7LOUi_$jWY:N+IObs8V-taob5\_U#dJ\pk4`&QA^D7-4)r<.80;A
%=4.f*Efl/7&5AIKKJ^B.*k2dPaRY6[*@7.*[eq<pQWpGiI]*fUa)ZK&LUj=@/CG:<UL%^[%E*t^XUs6=+L&Kn+q4[+jfP0t\@5JS
%4WIT'$JI>4B/qFKB_&t0=3t+oCXl:)'Kj=-jfsp$dN2l@@mOTt]?F+Y5a*\@@j-gB4N*BDZUhs#H[e>F8!_IFTu!DnV192Pm5iTB
%=0j&I8-bZ[Ft2l&[_*A"T?)EiBmeh^:+a3aBfFg]#+@Ykr"^Iqa9i2=g+d\Qb2%WMJ?6ngOR,;ZGT\Lfs$oE9`I)S\dj-Fps+eZ#
%ZGQ0^LjU<q/H84lpEVq**%Gf<Jd/NtnpcaKVE(OFPQZeCZOBPD>5jS9#(u^Q'cb?<npcb4bT4fuJ_!iu5G\:oOW7O'O+^grW%I@,
%05!8-/an87#@bUAIu&KFcr_?NK[s^D*_;6h#Eg:9*$E]!^lt9l%M5loP!5l,!(gjA<,C(H\D3qM,\NDF6l]f0W5\i^2FRZs[i?M7
%%0Vo,e;>IViF=l,6lH=QbIJe'Fk?lJeW>A93OE$6;JU4u/'A)?%3dngb&W&(D\$K$A@Xr<>2Wr*Ouc'*+Z#i&*gkT#JVZ-.U12:L
%,#&mob),3]+Z0W8]T3#*)A5o(jT6%i5X\a-&<RK6<9"$OBFj1Hkb<&Gjl'(F%gS4+7$Qd7Ts%[7VQH]!g)%$&V]-G.3'7aLN=//@
%%O@;#!YN$Hl!q7_,X)O1O6,\h\dZokZ@!Z:%A]'HlO_g&A?l%L+q5fUSR\H?;JB!smR9_-9X;_EU;c\58E0fUEbbD)6p;/6Q6/J_
%0'uZIr"rn8+^6K^L,apL/ZLPC`;Yj,<*4SXYq=$=;AX&+&tR-3Jk[Pf/Q5g\g95>g0dJsP/&QY2jTnV!aC74%85-t+5"Za6TTT'Z
%a0N!E:pDTC((s0C3VHu%8/BC0+nc/(KjM1:2qlZT35%jRVe.RZn^.hT3u^edJOlH;ngr<a8o+l>g!Xk/)VWAT"/KB/Q:2o[N(n3c
%%AX;\q_khZ"qi#fDs<bt6W,frhU2PBII!\48UR1?,`Teinpqpf>QT"h[B,58mg^ES*-NLiMD/%!51m[#<haGK-1eqW[`j/^-?V12
%Yq9d"H8(,Rd;BBO;madIKJW]Fq+qqe0WF@0F_o(ET6E8'm5tW9L,L_g3-Ab-l49DhG,BoA+#m[rbM8H(#>SCTl!Y9X%FuAaq_S^,
%C%Q)'1qB.f+k"^A-4<>%8c;gZ;j$Cq&\Ca6f1q)4q8@0\:$`?H"5DOrg;4o?/U<c(3_!X?!<6f*2U3JNce.Y[P!U+N/?!qbR4Js.
%(5:.5,[(D.I,GgKrC>9CK3qS\IMS%VG.VVc973t-WB[qMTo)2ChjL$f+LX^/3iR_=W@ROj7'LNSBm`GqUp]>19+ABqm48CF/KI+_
%beaYIV,:X0g\/5.+.eZJn\K+Pm<-1i&KI9`Sq4[)K!Wj"+qSIm"iDh36'tMGd.#Im-<3`d1F+U*J@5b9doZY$8D9jO>`En6JOkDf
%C3c&_5,W:-L<'Uhe2F"s;9"/n/MO:@$%2;ECo7i#1t_.<X[3lZOJubp<J+kCD31"JcU^^$$2fa*"p*CMDQZ=%]o9?R-Aq3sc:$+:
%o/sjJKi2"19=/aBKSH_SD8TJMTYmf"7n_*7MqaQ(0EH,_P18'kLc33LL9Pr?CR7^dQ4F"b->-#5SDP4NDqiq;)oD"Q)pb]YOkI!g
%Tc(?Nm1?s!'"SQA^E*(QiVXk*+kL=inB15.2UP5F2M;NR"jJ>+m)Q'p:5LQ25MAT'^]rQ@[OEL\fT'JQdHOK7)]A!!/%R-k'Q,gu
%fFi@rD,L.Gi.A:fh@^,)9^5<?CHYm:l*(Pq/#'k?Zn4nD1$gjR=;4>afWc1i]akoa@bZbA)f-nV`"P_4/0M2DCa[uS'A-\Wf`n$=
%OqkER-d3pMAq=gV#rM.?fl:c+a7,Np5O*caa9Pqu[M/Tl_eGua1D*ro1^b#">+NM>)XLf]:+\@mqq$j,\"Re..T1J00Zsu:pY4i-
%e5:%3gYA$,B`$OmC9]@d(YE>o7"`a$Ru($I74Td&1K!'4+'7LEPh-=k>bQ",$>mW"AOhbL5.#BrD+[EJE1#@VUr8%s[iIJH6W:q3
%.Hqi\n:EZ?@u1SaVho7]qHT[IgLd8"KnP+"2&<\e7bC2+`2.F:)^QDIV#oDW'1NgF.4:-+9&bk1,`1Kl,-dbQ!<`SG38k0uTZNa<
%Y=(_sgkkb$)\]BTa>OX,(W66\j1YR6H7ILm)<`@:%Ya'q[7s&W-?[2>6;s;A!%G4i7^js;JW3D5-j,-+c3eBlcYXn)@"Ui%[NPf4
%n6gsYm3g:h$er+^0V.]@3Up@2&%8]Z+3HDMa@0p'2K<QfLD!>@Au^])@2mtpTu72jR/.fBg+8B^?mFD,?&9(4p3$-nD)4@8ar<E@
%U4>5-m7`#XiSnl%[/q;WVX/s\OTt^32@kM=YWm!j:h#(%B3Tg?%3775jl_[H;ZDp"oTQdmn(BEkR3p6#_bOkOS'SA+"<))?a0lZ8
%.bs)pM$BP#-SXfr1)s5dA).H-Y_hb'Vn`L`fJ*Ci2DKS&:0:/`_43S6Lc7@L4<:\:K8;@p'@r?#9&+5TOTpE,q@cmJWR)>7'-0G/
%@"ZGYfH:5;/0;h9&boaB3(A]pP<':+Te4pq:=Mb-JV\BSqNR561l0Ag=#=&hC\8;L7%C%&$Z0l7]Yk%!c;Em25"K1*e9ZZVZBlQ=
%?JkoOkc".qbor2)>u6j.F2&r-5atOSVD1-=mR'p!_\Bfb_Y7Dtlcj[ST7H5BYbW>C=2<iO>VGIKSl.#qH8FW03XOF[Y*ZRXbA-Wg
%]i(I_Y1H1?HDk/D2]UB6F5`MC+Q;!p!iFS)>BuTBWAbgG/%rEIkuBj`cH#QL\7cE'/)\+'Z=TrB$MZt!qs.a/qa1:.>WD.Q(dAQ*
%/(;#L?NCr++b0IIGdq+3$ci3<i)^H`.q!?[gold,oPhPXI[K/E"_\mrrCTe(goo3Aa8H@T5p,hO5X@EufC,u"q\@J!*q!+hj5GFj
%4>'/'7QMXG8\=_Y^J\8Uq^Wf:I-e%m%sG4m!\2ParsB$"&,e!Y,!Gk-oNiO;/)diq!a'bmNW>BbR3@)j"=W&g(<GZ:QJj-@*T?=A
%XA%?8k/I_,lj5(K@0f#\YgaFY#n+Z;TnJ-onkd19%7^^4_sF(MV0D)N@0+=2TnK8N3(d:fMrTJen_lH9Bq.1Y=9*>e3+3+%b&P9"
%qNBll"mD_:':/-g*%,QaPo_ba5XbIq?idRUTtpeFdXqbQ1<WsNKb"WYBK.hN5YZRO@!Y?u"iZ)u9CL0"_#gpjKDeD!*;1nU3'Got
%!;,?V?O8F/@D>t/iiDbUfWWY5%f7!FNZROg^h7tt?XY9DfWW5K@t5lL/]Ri!Qr4Fs/G4d.J>IJQ(gmAkl!])GS>V,CQDTT#HNb;u
%].;i/3Hg`+#HShtLY\6jE9saGLLYNS9W<g'(#%[">lcYE@<\QV3-J@g1j[e[H73DULl^@,n?a1I/%*@$])p((_sRla;'2.jpR1&^
%-0V:_b7t#L*\LLoHu`Jpe5hFLAVL,2<,Ri/.4c)](X/79lCi6H+K1@D'q4-\>T^^0TQ5bSE4i;0,TL_QFd_9,IJi59(K=J)-F`$=
%![e#Zl]%!VgeD$R@8B5X$@FtsY"6Hl])oj7+a6@C.7<N\W8,+K]>D1,aBbLc*cb=qM]m:5['>DA'iDLM\L[1>OLm[`ejo-8D0a3.
%Te2#SQ,\S(G=<D\Pq.H))*lgBZObCtpcqAQ3PdJ-MrBrjY`M_J"%1#`Eh'=,P@]^U6Q0MH$7nJfqgegl0OG"fY40gYs!rZ$3W<)n
%^r-2p1^sC7i.sDm=2O?Npg4%lg^jBcVIB7,Te-fT/(1s&?NG*2iI?R?naO9pNgSjVASa$;rsFj!NrPAX3<!"E&'+]BrSdNY);E@(
%^HOj8_uE>V4T)CDC\I84_Ro^??NI\&iI?Qi2um(GZNgIGg>W*?M2qlA(AMhKYQ2i=!5QHeGlZdDoqa10`Fq7l7#F/._@[<YFeY#6
%_8>.+i*ZRNbe_+.*tK>BnF=<1!f[Epk2YVjK4W\Rn'GGK(<rMg;MR7h=DE^\K8$/`6\C*\0PI]?*=`OEJD<\Q[M-?NVDrs*T^gsX
%&j2JtLV<NU^r$d$Lb?kB+q:g_0U@%/!QJ#A*+1=VTEd0:pi(bg0O+JVN!1mk#8g*]4Fj[:6KS8XM2qlq(AN+SA"UaG(^o81%PS[\
%e-?ifj5U0!,sEBc=Ps:liZsPB1qAfZ,.5Aj`kj_4!+TFG4b0e&@fXNci:[<q(;R0rGZ`naJVUi<"q*7/0\Ck`G^/J'#`V:r,K8X#
%[1b/\4s%LAGV9S8/C="m0GaG.i*hb&JVX34Hsj/hg[p'5!f[EnpA<kPK*=FY(b>Z#4^bM0`WHDQHotf@^rHN]$[_r-YS4o#4s"rN
%i6rKe=D/(_^ih\ZKa\`2qEP5m1`eDSBF@tmG2fu!j.V5sKJ>h)$[b')Y=MUE\HQGH*pQh"kmR/7nF9>i!j8pMe1\89S^f=^_,e"h
%FGUM@WU6d)M3!EGp>4Um(^hbH/eH#Di`)d`Qr=Nhks8&J/f\m]dq!X3\JnYN5iI;m-*V:UW)ST]a/)Bb=FJ]V:oil8KK@*+X/t_I
%&7lC/.a`@X[pnGZeX$Ck*8`6pUfN^_BF)W\WQ5?7aM[=PA>Nm#OK?KV6Y%Jq*_+`@JcMZb'_rIA!+\5>*^#`e^kif[H0JVmB0@<g
%6+/Z/;tPW/opL'g:eotX6Nn$t#7^?nGed-FES-E99#?Vb?0NF$l1NF+I/9Kc%jT+d6m/$nF=$%Fqg@*CY^=$)rjq`HF]5'Gh2K9^
%Gt2+Ghl;uteQm"deQg$pdIhr#@p\%ZQWJAO>*^u@Pk+=4+W%ldT2!D4E6^oDXRNXeD#NeaP>@=ml2,aKc_1f,'0C-rKs-2c]l'9o
%Ks.>.bK7:E5IDZnZYMeXb]Jn)knX6h9,M_!$@t-lS66Mqok#,Ue5cNO+hQ91!\SaUE-dWESgC0r3$tNP1H[2[N'Aidbas<N]]tos
%I/W;J2Kc3IE!H?jRhWa]melF\M&u)>m'hi+^CW0epI<5.^?\TsKXN!-eae?OX9"h'=f<mp_I0*!d2>]iV-3mX9+"MUGed1B[7YjI
%o>k1/r1;b5WJW2^Rg_)3'ai>.V4,ji.Wi,,I:.RN-^,Z/^)c..BW.*8%c\bu(.UsVh?HlAoWZ=h#>NjV,-.u_]9*M>4*_;m.<=4*
%VNGOUIXdT&@IDQZ'9.XO"i`&]dIkYK$(Ar[UBH%(#.bjoOMib.95H)$+V<Y6-Z2DZfUW.<[8Cq_[aJ2m=&KTDZBc6_C"&\Ja.u\-
%m@cF:R^W:Z1ms&;S#OJ5AEbqD:X\*)5<@2RqG.Kfc58MALpbaq-u;=#Bo&Q'\00MP3;DDKrXUsN$4]iJjsAKd=:2%RZ((_Dbnnd;
%M2Y>:8Lq%R3sa77Ss1Q<-#1n0Wl&%`'L<]\UpABq!JTC=5?Y%[]rFtI^#U(5kd\JqPIpTdYs2bY2O6M!KF4HRG2j2AR2j;mX=\dU
%%B8n.O;8+6QEQIib/KX&Hk_3V#d7"CP+-2<F?+C5-cMrr'A1h`"JHDTmMnk-$o__Ed1MQ3'Ude`Db_7>`4o'.cJ$aCoS:TIB\.+_
%fLa>f":\aVej\rRU_=1XE(4$r,^cRC^tc">M+!QS^n[PB<i+A2KshU>OBVm=E$&rtiR>U(Op"odQ@Bb(ckn1:8fKTD0%*.^iCTD7
%T34XJfH4Wl=oL$fS.c\8"$.-&"=lnn8`1Z48N8)#q<f;qPr<!M9$_ASmYD6Mnk%<o1ulTXB4u<hrg?(u)G/aEl`H(81_'"qZbiN1
%C4)t#?"or4e3@cD821V"d('/`1r0"N[)Gpa_eeI9+!d:3E:FIep^g/.HQK$_U`iB3(]'=F2^u*CNK^(_>a_"UOXk'55*6cc"oP^"
%=/nn`J0k;[M:a"uf8bT-ZT;osC$9*3;%&,uaUf-]j<U70^,#(@O7Y;q+X52@L]]K%mCjD4'J1i7-dm6=R`i].DeKL4h&.H%8peTN
%G"o8mA]agm?]p+\"tI;2BbjR@0c:lWeI1<S`,uQOIcBK_Li"S"ga]`I\Zm2i$o=(EaJh_<rZ+Rt<RB+H,"5-pp;L5Q4hh7&I">9#
%:t(M"-rC^kHt4/L`_GTbfUkhR@aHS$)LG4LB523(L'Eb&X>#s"gh5@0G-Nh'$5J0j9i=oQ#B&ZSd"5"u&OYShN_+*Lm.^_EcdD;K
%UYH]k5ons#-^Y%8>D?j.&.rGA\:4JC;;_IRUsPrPh!WS"e`9Bg8%"ht0hjosO=Cl%hL,Dr#F^lP"]_.rnf*`H8@h]ArhPso3C/e8
%>c^oO$A5]'Iur_CUCeB:S\Tk7T"GBMM`bs9e0-ps`*tfKALQn=22S,Z#q_h+&i*MS9%[#`M8Um($TK+X\]3,$KlUW8dT[8S;&de)
%&!?q$iZPo;$%U%(NlaDEBZXFLd\+Z4lWWXG65I+C>mo7VJu5cSCU(Wg/$Z3lYreAn9\%]Oi+q,C;!;KI/7FZq=PMCa@!N5?bg8>;
%F<[?o<=T0N)@EsV2m?[aAJ)&`JB!G]!kssX5rPQR68sK!Gb9W[0f2Y!6JV6)gT&AYd_>73<*)J_>)@*L$_5;V,0ReX_SoiFH>"8V
%*gSAeE5:-R33DNOs.D4`d$+O;bb06XQ:Ol^'-0M*WJ5fNVL2)'S%0;"PM;tI8-?&\D9<Y,G<_2Nk%4l+E$`jjM+SsdiFY"Ko#9B$
%TQ+Gb&t^jsla-`9`k5A%$jW\j@h<T8*Al&m.mV-Q;YY=fPS\$fA<nYT5RoSNdh(ptbENh?%+eJ.,Thnk&rlS*".f'%b3oMcPT@lD
%"m+Ii.G4iA;PWkf),#j][Gool.A/n#X`dn)be=:@)]fgJ'Wf<U:P(,&Vt?c=2C`+bmsN>RMMuK.g)%b`8;a(^hNQWS:pD#B;NKc:
%ZhshJ)j2YY56/bOAtu72%PZ'JOQ`O:lkE%<'Xg4kl;")&]5)V@a<kKM`ZU1n2J<ljDk`E79c'#g0IS=Hf$(c0NE[3'ifg^k\Pdna
%<ch7`a.^qgPI..-CmT^k#K[Ws]!0LN=.Z[%#"$B_"Tlbg)+a3"";#^sBYk\%67P'b4gijTBJS>E+O\&fB"8YPE<a"pFr?*`a<\3"
%"sT\(,pGo;)9^_&a7-;@W[gg(-8S2p_3sH@lR9C`S7rHi6D-'Pm$bS$%ZO#%`@*gu;PH^!Vh2:%?j"i><9N0_bhtlt$r(V$*i/dM
%BMR,0?A&lq4DiA_6^-5a#I1D`bo>.U%5MI0%EHi*Q\.hVGb12M+'sq3ikp\R8pkkH9Sk)TL%FRLDX"hkElpus(&0&*Y38\D%,0&B
%[_j4bbT.34g?l=)5jFC_!b=:n`3rK5`,Z&Q@gLG?^$N]:`9cmoWNChR:mYnOo#jp8#]eXUOpE(jfi9+]L8M1t#*D^Dk'@AbNte6)
%-XBa3")"*o=X_Z3\g0`3DNNREiCL:[#pKi3caG>iHM:CLfd.7;r*P_a5\u5"<p-2LJYZ$+R2u$f`WEpk4/Gd5?.`S&M1SE<40X^K
%TAqXb,Yh`OA.uP*D37;u6#3a-Lt-+(C#&:+;Hp6tO%>JE;/:h7R8XkX:=NI9W@W0:dNVEJ7\n#3E]50o^3f9;U_30n'<*uc5Z>0)
%kr(@n6s==U-WA;KLS[1M:P<9hMgRiMZ7Y_s=)MPQCl:3@$\f=.@b2hQblnIO\;C,MT2RZm/^e0I6s=CWF!K*GT-A6`FrQmo0gCA9
%01%qn/b;p#'>!.7OcNsoRt^Sd+ub`;nql0^Yt1(gEFQ1)SdHt;8_lY:q!LCEfX@QnVf2aN!Y(R&DLbf%Ml]!!^ans^h#OWLUYGjQ
%Y]i?r].abH-?:ViM1(E?+L&p7An<]m4st4Z=QGZ"!2r;L\j9`">d2!^=WD;j=QBQkM/CZ9E#KA"mVmu0$9&5Aod:1'+L'?2d5XF"
%OX>1&^g^NA)[)Jh,#iFk=DTKs2)nEd1JY'alE`2,n5Y$6dd]4hC;u8%MQb"!H\aM/(YNDde5kPJDM?[d6dU[Y851PPMZ1[RDKQD^
%WJDeK"Z?qp\-d%]s%6"H:#Z@U7@KI;a9t^RDCeduPIkh_2De1!<,0S*Ao0(DJP?igTi@//(D.:G7Dt+'8:1PZSO^S;:f:N&)]TUg
%,]7R#Ue0D#W%`lQR-YYH*m%i'U+7F=Tc_kCLi8R3+]bQqH-8?dKJtB^#cg^>ZOS&J],b8o)MnPX^+'dUKg:;t+DK-8:Y>+@;W]M\
%9H]-.Y069(@Y[0Z!^$6-23PPe:Ph[*`\f'*g^S$k%HVJ,;rU]b5u!2/_5`._>`sWf((a#'IT*L9JOJO,8i[j0+E8#5`G])SfgK_R
%;IgHQO\1I)l@ofqP0An,$3Q6O29/m`2L?eqg?_@GF70`>4N/[8>+9#EaY[l]"TPTce`I]Sr`]tk$Xjd[K_uTVT1e6G&s5c@\=q8G
%bef)9Qc+k%8mIN[l<&32Q^#H("YM53.gfO%((M$L$5O*ck)j<o>1R2I"oQM7T-WJVdJ5@;8^4O),T=Y=JO3:mK``VZ&ISgNCgn.i
%Ph<o**%8$_=JS_88Qhk8TC+7?JNeWXcJimH8\m'goGYjSIO1T+"a-<jX.U^N2sr#O?*7;b9jeX@E1'6p3;/]g;SjVm&l$LmC-kiM
%FsrJ`55:`\E:1W>3L?6<K7,?U$`3Z(:^4fp*&pNM<.Dr-n-::1KaYq?OD3LCMU3&R:>9_!80SgmO]mWEfL90]Z`&f#->$*kJPF:j
%Um4L'Fd@JLW-[cEklQiRE<lM-37)3E$8.I&enM2C6:2/".kunJi.])o6)&t-KF9mTpPMRo8a8c1HkM'ImmpO^=oD*;EA-(]*eRRf
%plTt8%`]^gTKWkH'gPS8VPm$B7*VTpJ;QOjbl]GABLa/A.,aSWR%f,9o3dIT/+j'EoR#qU'RaYYO&?[<j.R/U"<p2^MF^3k;A<d]
%8l=r]LJehKN!uO2o[uS\$Lc8:MIKeD)\WhrG(CSGP1DZa4,W7=^<hlA+6CM%6p;Y9Z8:4>%?69h'L5P9m3mO]38.5GMkM.[4s&ET
%TOCA\$#C=kDZ!(PY;gL]:D+`ZGE`)1*o'TmA9#,SfH1TI'Ym`jgee&UEP/(!+-(Q0hOO`i"i-Q3GSG[-EU(QK`'/6=,RHAp,N=>"
%q5&j1,Z<n:LI;JG1_13J61"@e2?Ku'K.0D(3t>17;59SZd*fse.12j1_%\16%TAU"JZ0T:P2LC&9MoP__\<7[R0QY9Yng`$<Mc32
%R%cE$*2Y,Mj#B_0K"Z/kU<mN`VC97(4IDkm(5F=GO>[WH.)<__R%ct^]:gj^cQ((U5fci6Bj"So@Tsi?..Q888#\_@)_r(@3$_De
%%u3P^_pKC'"!J:&;W>S;OTHU8&kShD8J[U7OX+`UA.V^a\kA,U$*)#hOTGs;K1$&c4qA8TonPmY,sE:].=g5:8>JYk+cugkc\"=%
%1bRQ\C5ZV\S\9i+j&4*JF^KY%M%jVc80i&:U:Ih4(mZ;,&e0Ua_DuG1;b3!@$-UBZOV/q$j!+_XRKo.C:k9T;.D6N&9+!pC%kO-b
%Lf3qPAH5BW_*2+p<WM_i<K?eCPYsjg:FVAbGY/!VkM[in*XkgnN%W.L$>;M\V\EI$j!fBr)TPdN+u?Rp3M'+qZ1*uU.h#3Fe&Y72
%L8U79K+(O)O`3FZe6.g0oJ)%`Sl0k^%o4Y&0Kc3$iZ(`CnaZ+5!]I;>eWkg!'G6T_l;BqNEn$q=EV*(ohV/E_8qG"";[Rs8GY/ip
%l/F-<,c$3o'PSDY;A^Jd;(84c)5:#Bb<o59D0^q0JWGSb'PSDY;J=6@<!r*U+Y%n(5,-Kg_\&/NBH4]_6oc_UGhRnlM4R=1;3&5P
%OK0@Df`ml/"Am(G4Ck=>\n&lUOUjfkMXSi`R3IUqR.PBb4rR<a9R:ACJWC%k'PR>o6OIWl32@)1jCh)HKRk9M:aJV!8i.Ls.5]#[
%OMZ?k=NHSNa*]G6";UU6O9-MaKp49V*"+4&j^B<H5<?(L4UDKFi#Fm2Uqhaq+_A<^MhRDjGZ[Lf:W0!>&e:/d-#$^B%iXr#DWk-\
%j5D9f)NKK89"9&A'(M.%gN1$'e0C!?Pk]41Uqk#<9Zf1EAl:nCHC.8)#HFs`Z]f[H_+[IK3+c'_iL!39cQ6[rk`:Le'_%h<Al>Er
%S]kNA/Ito3dP+q&LN)@R8niB0<2IV=?9cU`+ha)#WT7<'<LFO!(Z*5'?$]a<bb`Z&%s-uTnIV#g.apaiH<`SFV190Nn<P+3Njb1^
%G\Ba$`^<XM/U9<JiN5,#dcXNl966T8A:[Al\sWm<M/k?d]Oj.EdO/uVQGS/kLo!K`K4I!\;P\7SQ4aN\\&.tcO2<IP0(@dA9UWg&
%@1'3k,m_tf,*<B@C'nn@!B"F,(T8dr(C+\IHoMC1U@A5L!XR6W=Gepf^f"pj"'>nX4Fj7m(I#W4!"aGV97`-/YS?kW!)%m(EeEU#
%*tO#RnF8c2+q4W_$>h),^g6$]!A"DCg^SjnD<5ZW?]h4)"6EEb5+#9E@:2h2o]Uid"[3t5;kT!'!4UUH#LjH$4J8RuQ3YnR_41q4
%.F</=eBH_K\&]q@"5I_nT2(2HjPteX]m%4G:oFm7'PKUJTEl\,!ur`96uM4r.fc82'=3%)"b:06-prQHLGBQXSC"=h<p#-C76Vbr
%;5!.`XltFE,sFLt;5A3KW`!%NFMk+&N<aeEg>]>,M3!F='_lY&UVnO"6`+^6H3ZW+Hp$Jb8E3[3m1(-cJEa^N4%5U-JKo41T+(./
%nUEl(0)eXU_?#/gM$!aBY^'NipVN6?SE'JDB+I';>mV&lO\nWK.mLRI@O,PO9>!%Uq&Z\rah#5:VTnd.[sDTor9VS?I8L64OuU\7
%.$'Qc?a:DjU?QMgU)kofC-O&9'%*n.7n!>J74%1uKVZtOn*&.if=KAF%P'\3\-PjoOh`=b:;W(aiG20<qk\0Ff9/?9^kI24\%_?l
%:/jTT5=m,r!gP&-P=3j3M#JZ^Pj`1pU+L6MU.#;DL&N2lTRBP.5=cLMTUC89V;Pj$4]`/DYBOjFs73eQXP(R0X7h'FYGFel3nTQ]
%V%Np>6]mth<"Fa\1f<%t9K+rTUk_)OGIfe[3P*e)5ugh[3d#dIK\lUu;Xa.[d!P4iZ1lKuioF\>S^m'YU1VI>\r(Cb`kLl1;a"@s
%f5D>3Ijpo!rCc*K^R)f'iqkh5"0E,t9duXH;5+dE=tYYY62":tR`^I^MNB0h8q(OW-^k#BfZHf6@24d]^.'Ulrl"k$G=:&>KPV`Y
%m$*PR--u#+f-.mlcm6#+f'dR\iH_hk,SLkm>k^R0CSJ'Rc)).7ZK$Jian5%^7pj"sN&Mt[L#diZTV#u.UhM,C:+`Gt&a:F,-FYX@
%#DGc;H76m6Z5a9AfmsE`5a[\`;"aR;BoI^5A.bZ;qad5[4uC`Wp"gjQ".;?.c1%2?F&FeJAb9/cMiVIG0i+=[kGtI'SIR[>LmCFq
%Da9FnN)^(G\p4l.n[B9.oBu6D)A8)N53b7Q*_C>b4kYL&&m)3sc!Z&GKD?RC8O6sLl#U8BL1-\togpI6^WK]?j2Q3JMEKtc-F6%a
%+pD>%,)s9h<JdL#g2iC$HN:eg]>mTPDQfOE_j+$e/SZWTD9L\k??`r9&..]`8ai0X&Qq+Qrob"!*O^s6^n3tj"P.$6Q\_s\LaGg4
%`\$.&,#B[rh3Hk:VDKLJW&@GiJ]6A#B"b^h<RBh]DjEb[/Jm-IA-AdAFZCNg3Ha-/*ZhdLTR[EsT'K"I3o[#^F\b>,O1<&$[q>FQ
%I1`IU*&Kt-;@kpA2Ig\unURplSt-D&[@tiO:>pZj:$nX2jS#'6s#k:M%=r96L*>-IJt>_ees@s7Br-r""4Q3Ed0Wn?o"u!VhlcVF
%6mODko-b%2,Vc0u,2TkQ<Jf<CBJLT(,?^\WUude2FG_ZO;#+th,1%TaUus]6/$=1"]G+O@M\t=Ml<F#cOgCY,a#'"U(%.(Uk/eJ8
%OQnWP#/iSuOC"61>`]9plR4*,+\o)IN3a;.0?MNcb`]X8(5Pd;]2%Eg\DDT(A.l8R/Zi1FT1hSGETTZ=X'/A0AabOQP53Y(pfCsm
%`:U/H>83]'>b?*5A4k`;J2$f@bf,O+:Ema7@3$VjKH48%.AB.0/f^Gk!c.?l_a#[q%FV2Fp!a?$L$rFgC#FfR\mT(21jD;!BK[so
%jWIrHa.k(?!l8&%Xaju*KUHT6S@2I]5SL\2S!o(<,#_&ILUsGn=62Kdb3oh)PFO3[Y:4"dZ]3;#b$;T8-39hqbMs4Y'I*5m3\.?:
%kTlQt&X%b=Ymg:Y@]RSF62lPDMHU!,2h<7$+O>bFWEMt">(t/Y6ZCV@Nd28.:8uWh#0\H).kGKtB\H'_Bu*i;,ORfaj&</sL-Tp)
%P_16"AY/[k@F)eWQ)IOUe&C*m#4ehuNl$Vc,5dEpO^neb+@Cc@>EC-W+uTSV#+HfnFd1%qfFeWM$5tOGBll<jE!VDD&ID5CFZe0B
%->;C>QEb!2R8cq;*g?^[;o_UBi4VEB159U_9p<F$1eqC=0anMU9bL5%>%nmC#hX<7[Z?/SKEYLa>RVuoUXk$mE"bK&6HX^R!qjn\
%qRMl4R>a*HnOsOpdPRYEV3e&Fbe_4,F%lbD(u$^SRoKt(=e;qt;C#"7#o*G0mE4bA8\tL&i[-X:#&8nsMc2lb0^0TE[*i`*oi'>d
%0Y>cf3PS9mH)k>Y4ESR`1e"HaAN:VK.GcSq1<*SGZ`SgNG,6,32UO@TS'D8-`">Wl<(,_`4-dE.<M>Wf'C:jV?%=9amSGqkCQh7u
%gf0[)<',Ha`RqrV8l]i2(@Jm=.P.73SYq=m_kZ&LF@NcE<^BYoB1i;qO^pgUqG3CMHb,],A<b7BKk4NH."DQ!V*[S=`al@-RkD`\
%LWI$#=4/pf]ubAg$iF%;bF#_?8XM?`)&ed@`UoR?:$7T^h%"g(M:))k9p7>\e4Jt+VU$./::!t@Z'D4p#MQdBZRo67NC]db:8nY)
%c9[Hi!DO9<)-A>PnA_?SmhLO.$^)N]7bP4.84Y=U%QiGkS%5!u9!WNjU"h</S]3"6WG,h=8CK(K-Q?_3VFZmh_M&r/U=b6,(3o\-
%d]0daktnUG_*D^']'=QqW#_P9.b'ADdhJsjT#%JfL7]/pd+YQWW9N_9YE1&KT6@"GETL%`]sgd!,YgCh#\]n)&!P"t6iS_o022hZ
%CCm-ITd@EH:D;>&5`n?ehPTbt64fq&`UKg;Z!O0%Vl3R'D7kfq-2u1\:]hB-Bl_hLJBDC;O3idq#)0baO]KPaQ\=>-Ek%$pCt.U$
%[INhCEB*0+LTt80G6NNqbs>dlMHkde1l*?aHlX>d?$et@&W5mCUaHJ7LOIm18GR"rU0bdl%^G_5LjJmJd@k8^LKIZl&4[B0>e.((
%PIn7qW.AoJb,2OG@Vn65G]DM=PG@qe)o\h7!u!\55`#9m@ADJQ>tDRbJm)S<06NnpNFH`e(oejeCEFopJ-*+M"5%j,@_&p5K7r0W
%6*.r+EKiK1^`@.0$=P2fQ^+.H9p<08HEFnJj\BrD770Ed\98b->DeLae,u0Er`";b27n@J9%T/S]qXseHIZn"`'#:r(2;>u8<YNB
%h^MdfG+9q;+,no.'!\3.Eh:WtBitbmPG1\R7i=7_4FXAb`%<uZ')0m(^J3O*68H0bGN3pDb&3`rQ1M/"7rZ(bXrdOYlH8%.c5hJ.
%kNWra*uBppU>\oE/t1`W:)WLlcRGX(-.u7BlMqZGA1!o"B"3hmL-LLr3aSD/i%>mbj!!sfGoi,Wd3g^)`XBZZq-K0AG('u$V!%Ih
%DWg9B:O8TBg!jqQgiIqYEA*gQm4<K/3Wogs[b9D<l!1dkXn4Mp\_e(XT(Zk\HWi=1gDHnrDg`k<NEPO2R9.>@+mK[:L1hOTdsoe%
%4_8,%1bXO`oZYKX1al;MKTu7O'2kR`-=eT0H`:]9$"MuJGH#,0Q/Ca%9GR=;r.L?:/a5iED3[o:_E$o76m=j-'9u?/_E$o7.hY'a
%YEVi&_E$m!'-b1j3(H.'6$tF(c;Dnq84=1X>#X3E.%aJUam%IZ,!TZEUn[!)505X2ObRTL-$Q5oRr>Vg(g=m^UsXj>^cQ3E_Ba:b
%8F]9WHt+[r<9e<A\E.<j)B?WN9#(Jnl-`0GYh*Y`8ft:_SEk)l+l'l*bksi\lYZ&*5S7^f(<f9a"aE<dV.0gZ4YVqYNX!S>`,<6t
%+h"2>!q7%W7fsPIRqF\Z']E$c:4>Za'%'-HqaZjcM3\=P-[#*C#R<P;h6Se9KEIhs"YBRnfEKe?dBI?l6BE\F2u.GBjT_\.mC[Yo
%VAH%c['IMZQ5cWWK%sEu4IX-.n-@0M)/87sP@lG0'u>1af`d?eXkV:\Ha_?7\0/$mQ[X_r8l*<)Z"(M!-LhhG-urSC&QBl*eJo_C
%R`p$:)QD9p*21#HVSgm7Y/`MR656`-^l%PJ:li+/9G7YWF4^X2/M&;I>g^]!?WmStM@7`MP>2(s`]4\u_.(8;7,o/u4Y8QTE%:CB
%0^edrTPh#"1^[gHU*bK_Q+>X*N*J:cc&8KmKc!6/3#P$X@L?<&<)t1]q!S</j+XRp>6Osh3trAeK5"P"Jg.>F\Jn<f6-DUQ7p<`M
%2kJ1IODP+(O"#WWhukDPmD!l>>m."?MB#(=J+)g;#f>,TaUtmLG/D0pCa%_&PC($5fI9i%R_f4Q,9-l.h=?Fncm[QRP<qg9ZjAGT
%RO7[6c4g?"$8k9Ai'd"ibacQf1p$<t6<:@.l$t*54[B8<I4H9V`U$?""KIR[C\d*;kc4?F9jR4Q?GsG3N4naXa:qM?-qT=F148YY
%E_`s"F;m0+72+ZIO:d0*M\#ZgUEr:EkH8o[53s8IVRhUWUKWe$0'7\>]@%:_.-Fjb(LdPk-12%B[WCHi0Iko'!1hk)nW5)3McA'!
%9J8'"G1ic;1iW?16\Q$d6B8DWDJd$;YY-1)D&'4>StWAjLm2&Kpd##Lgck7a7`u-C:hoCQg3G+:JKq_LU"&N@?/7[q82H5;8@!FA
%1jAi8b@8tA[7iI)`3+9EoZc$JS41fbD0_GDG+P^o#Y*Isp1&&<EFGm?G\cK9!cc&"("S:+L!Z^eSsJXF`IA^N1*#t=IaG[@[IeH5
%<Q5LQkl1:,LO,DF<C^WC[&-^'I?<b^!-(+9QfV6mD$a<;(3aomoneVVqnO]p/U<lbMdV?hi5$/I,r&YTp44"a8s_]F+u(@2&\r>Y
%*U*nZQ\UBG=LXR-Y/E"n[R`?*/mQG+#W9RnXsOcTM1+5(dLa61<@&f@-?P6?&/FQeTFWZnETAbMn7csOXR<APM<rkuXKP9r2i"8e
%?*ak:jW$ldja[D,iYk[5[Na>>.V'Q6F30HETu7<!D.Wa"-?Dm23#!*&A.jFBJ/P!726#MA97k)B@'mITD*%mqS[A,@B[rN61c/M1
%eCpSb>i]co6Q^SGP?4LInf"QpLSZke+#WVrU?WbERb-c;]E3bte[#cZ:q.Yu5>,N8$"\qb-],bUM`*ubB9B9EBDkCGaX[L$?G]4#
%*DuK5e!(q#WjE,lkmnD\l)1C-5DiEK72&up_'dZWY+F)`JV`Su%qjGk-["-_d9h1nUNn-8]]kfOI44m:H6d=P?0ZIcoEb?mig51P
%rPGm-^\G-E^T=tiWQT`NCXnpLB'].OoD_u"C39=aeEHTLW+!H.NZOYQ(R]<eYRsiXc"ndFD?RaaXqQfm'oWLn\Z6*<p\/eQ][@V)
%3=6@>/F$FHaAU"ff#?ZTr>Kl\"V-2<@&X7F/O)eYiHKU1%N*&RWUro\AYa4\Nd%NmW%UGXFCtl/k_OB+aq4<)ZJ1V$ZrKH%g.3r_
%qF6=_#+C7hN9h+<.:qn@qFLQtpSOT1Dqn=F6G?45mgdb<8aS$;6@JU0'biA[.?hCFK&m0N!s/WFSVpcqFOi>Y9o2(B>)CI4-e)`8
%]u?dQeMF%HodWnaMaj[C=V2K]%^V+Yl4a_hWj%p7bu$U(LonhW#_"c77MO$CXZWrt2CWO`S!l:8rT4A-3V`]&k.Yd2.M2em=IQ6e
%&N`pSU4TYY?2pp"CGH-:34rR5L:CDJA]-1<`VUfrKsVR^<Tm:!`oYbs?CK;i)Qu2\CU)QFq"hj4b\aPZME^=XO@Q!:Nnt9I9WI5A
%%DPVS;>P^j?XF6;mo7_^KAe[5NoM%"8DLXb=3sDB:%:78BG+MTkaUAfUes@<aDA1JYp78=;-`<XmNZt*Wg]L\QafCA]\d56'p")m
%5[[l:,P35Ipbni'%Nc>/`#hq7OcD5mk:]S8fnJ@ej%7"KBJLBaSg!DT\&)&LkrN'ki@C6"UU\\$\"%K=4r4i1*I?^DUg?,H%79%)
%D,<Pp+uaX3GTTD+p[L_lj5Q'"f98u$ULt1,Z!:<k!Q6LFL(53u'M["<>]2;7il:5Bj8t)Ec30I=VnhNU6H?=@(<#C1MG?>).5J(I
%T>j1dOD+<5'$$R"LJqFdq4lqjnOD*q8Z2C3Z\Zdipo0e9Vt-*<6V8IN1^C!Xg*_qjPsH(F6[tBE"fFTF_'gpX.F0P@mBQ8m"<Dj+
%.JWdF$jea=4Dufr^F)n4l$YP1`K3;64r8/0]q0>7+$GM_m9!Hi$Jcu\.u=H_3pXAL%$r,K<eYdo4#pQ=k:n$:ikcCc[="K.%Ecn$
%h\1PbjR)_!$Kmauc_KA2Q$7Nr:4`/uUZ-@R,O>*"e,5S9eE&u59q.uZ?V*(/C=:Ofd1q8X4/K2^OB\X8fj$3`N!H+3U[(tTi%uig
%I!ncnMTB_VUI""..Y83@$QTO7^.uJ5&I-57iXN!DOj::c3CGmnJm22L50T9[K)cH8-IZ]e?5iQh2Wa^6R'EG*<:P-70T$6D1#/a5
%05sKDFi:26rH::A+;h3'MM7XT*T&7:g@5B$1\&MNGGO9ckW-k$6+M0F"3eON.=`hRN(=Z%:D"mjn2:FPpLfo;Jc/?IS#*6am\rU,
%.g<*E7==KL>RYllW(V!`;(hJalL5jWhhF'*S-L-1hMVm8U#ujHU?`?3h*Ce$6rUJN\>mAN\Don9g2l1<7T/Asi"Yh'C$]/6-ub#(
%p;E`IrH::Al<KNU#QH^J8Z6RF]^C21MMiWr<!4i1aEg#61d>Rf<@b<O?FXL\p3U*@'VqZR<E^O9;$-JE1fR"bPE:sEA\`bmf-U;H
%<n:hi!g!!-:@OkX^Bp5NcWqjCmfH)-CL;_oN`kC0iUL;cl1LdgD!2bS/P+Zdl(B`5,T>I?;*0!k2M(1&"#@m8El:!$_'gr.4]K_/
%_ZH1#;bqducu6t"$/B!,ISWdTnG;n<'Gj.9W-DSFOl\aj3'V3?m;<+%><=hN<tYsM"`S&;gE<FR0Q1VXf@R>/J*!PK7ks2C-nb/j
%GT,CB<FllSKH5F!;+,jp*Y!MuD'=hF+)P-D#u=@kh^@pJnOCLXif1%kP>:_EB+Yjkh$=/d+'qMqW!$PZ-H&oR:'j=5E1NN]Yi%&L
%"hca1g.SKiU')6GVdB-4M;O+Z'-XW>"I?UdEL:r;FaOka2<#&MBB"t#mmY9BdBc?CB]@%)1)Hg0-.1dkWD?bi)eO)R2[.j3$[)kE
%`e.2pR-T&i51GpRpfqc<l1I40.5JXYO!\S[3-*0A3Q$;AP.9!<E/KPsIoLeJhT58ZFI\s\SX37*Tkn1t:8Zj47mTI*8Z["Y>hP*q
%fD6+$^m5u^LhAagf^BX=??Frh0(=ZXoHLm?4YDIO$J9TGBoui=$Zp,iq\oD,M]mQuHlg9"S[a,,b`"t;OjB%148Ebq&rh(o2Q:f.
%mllQe-A<%nG)$GLeVja.TGIf9#_9_%MR(9VPdh2dnL4OS*DV5h/G+\f<mb?j-b.t)qY/q_Qp<hb4r6Dg?;EW-O.O<QEY0cLY2Fig
%Y9]R(elUR1*_pJTQ[^koA##iO_^0jclLJ<so[`lm4R:QLT*qa_l[.Vi.)-d`-?.E'L]*gCU=9!Y$EP",.R"YeA9gs3cB"Pc'QJ<&
%6=RE_bEYJZ=J^U?-6RpFBd2Z9=5!Ufmqd:p-\=&M$hcg/--)#Ce[FWHX$o?Y#nG`f"OVh>m\9%T`4r4MSW(2<Ve2Ac)@hR=r49J>
%3b,YdVn-UVacZ)HJ1*OfQBl*#<(S>1H1mC;'MK?t)Q0K/F]EScK-,LtR%D,b6=9m5Kc@.>ag5X+UfE1dkC0F&rt&n1EkA;<EZelI
%S!X#t0QjGK1ogdW=N%b6mBF?E%'5C>59NK:#+DOHe]r'-FC]'>1N4>Y$&g"-E25?MGm:0D2G!:I%uCgZ``qg+g3mpPaaWP^-.Jc>
%kJKLXqCAWm]7`hP"]8CKU[69%.s<^_GXBBdEM0:h#nQ[(Rp,?\_T"lBBEaf(:R^m=B6!QYZZP]U:PJ7c3$%SW])')?bkl4Q\n.Yg
%8JGfu\^0:Q*Ujd:\+ZHIjXi[fX!4.jSK#%rI<DTOLO@hg?\hLK4Z';4!Q4_"Z9%g'<uc1[&nl7THu@^qH-JqTMTC[UXNTl)b[.<h
%*Xo(n)fJWe%.i=Ipc++qUt]QJ@5/7%h<Hu(1,M-kKuW05LrT>3()tj!#C,7_em4:@$6MdD&m/;+T![WmS&I"dKEXVf"@+IMq\B!t
%Mc1M'pS@7N501L"<CW//CPE4KT/%1pcGNCT"\,AT+4K=RHk__82<"rrnh,`b6@loWOaPN3VGuAbbt=Qg]>Y9^;D/&A?#.(Z@C]lX
%o'5hP270KjCFc!?g4h(>A@kSYMakpAQ(dH!.Pr1g7lB?#`r>UIN1T[dGZ<Y^BNAe81J:MIoCHRp[HKA?gXn4L3Uj[;R;"=,4%IVD
%/^6LVq\+ck8uC'`3WeODf6Y#&%l$ZE]6]eg"XLdrgT!pA8CIAs::glTEs?*8I^X%L4B)jE!9n-#>#a&8!D$".4[A7q5AZQWPQ7Q+
%gh=H0cQe['osFG36YCqt/&!'toGQNm&UML(Woc,=6LUIpkEqfaNj"rH]LV2`eC@9Z,'6"/,Za8$&u"oTDh`</&/Tohp40TK,,5`0
%^E0HS.3``f(-K(V[L$T_q6n^%X8KT=/_'.DS[R*5kJ;Es+'V0]Ri^n<jFHadQBg4h=QVVrn8$qGM&SFhg2hlEX6ffP+8*?(bN4;R
%(`k9gJFMnFF">4aO,r3]@sZWL)*1Ta8&)R:SWc+bS,o,j1_m95pLN`l^%\E/o=j>olcK:MH#q<D3:BooP4MF:>jrst:3)pE!S.?;
%qIVQ,kC];?$F1"7>'#l>_4u32YC=AWkG_<drTG3E("ZJQn$^(K)arl@][-NTE\Xe]>+SPVFIjBSf'/#Xmu3%c4L:b_Qs'*X3Bqd)
%D#lBVeQU@GC(sdZ7:ilj&YXF+OJ9#mT_&./fm?jah6mA86dl\sLsAqo^cFRYoT".tF<4SY'kA)O[,u"j`N!-H"O;o,Ykg-+gK5&4
%pT0Vq#gGG*YS=#ID>;[7Qb8F?!AL\aL",&`5^/&0JE;n$g.2Z+0$hS-`tnBJ?>U:=Va`uJjL\&Jp1qa:+@(4a0Sg0io#]+9G39qF
%eSm,OJ<dk5#o!C$W<&S#:Oor"ScG!F<bOoX92Aa_ZPAR]2H$rc-7DZLK(>,C_"L]/o"T$l_>F(7C]K^/VtJfOQHLj^)4-X:;ui-n
%1r?0>&OkIm%RG@e"]g^eEMPTV>PZns1cIC>8q]t619%9P-j]Rd\'DMedVh!Ka0MZkN=9U?%gW0W;^,n$i'uU]"c.Pf&/`fbWZS?g
%aceZ"SPfPHIQo)7qD.idZJrhbG]nSh4p/\UK9u-CYP`\:;r;GNHTD0)I6T!qGqe#uc;t#76(g1tSK%;s?FNfq8+!AO'gUOVNI^+s
%:fd6\#+WEgNBGC]]gUYhr65^pr]t>i(H-i0^?Gq<5hlI$JE?8'E&utb&9hY2Y_(*9PLfYJ7:+gi/OJ2f7r"K?nUH^>0##OYNpa*\
%@[,^CDQp05nR7I@G4D52kiGk%(W#)N8oaGM2i4Oj7%QK4))]]O=Gdiel-q*m/lbDPb-c=?,1Eq".^5(>N_i"sSJpV+i<bll`"S6s
%RM6TI?Ib2#ltiM#A,T(BJa(Z4%dp3p:/jL$f1p/o9OHj$!j1+]B>YB4#c:Oq3&j&uUn$rd9P7C6"dr@dRe*kNoq]6)EUgc8?og0&
%K^0"X@cd3S2Fs_B-DFH/Q@W)bZ/l9,K[Znt/=`:[>0_B6V_]j-K$;)qf)0?\54boT)]tD$:\>P+lI73tmTala0c6SF:/t:P!^Jno
%l`:`@Tp;eF#o!NlWDP2dScC?449;+8XO%;0$Vsst',PHs;5ZnRE0_h"@*Sg$@d5M.U(o8fJgXA+<=^oD-Vd/G1hSedeX7+R@IhC"
%k3V.hFM%CO<flu>,G=fofor$+(2WLtD+,$DS'Q88fDr3@kLYR0P)NG]A'5N8J?2\ETK#)3fUVIC=_CcK75IS4>4]'8h3l%N=*YqS
%JOVnE],TMRAqekFD!k[1`<MFsH14lR(%)S_WTa^'5h6$sJE$2h@<9FUA=ZkS'kUK0C!P%*FCu,uIBaJ5YtdlMML-50Xb$5U2PA<c
%nJEdr"2qbe_jQ_cqkLqtC:KtX!N]3DTQoB`h[0P"HB8XpJrH]OX]]qL\EfE_&RIWIe==$e*EasEJ=8R<,:3DlH^WW!pPl$Df(FIo
%JsC4j3'mXrofsalGi4CdIUP29eq9d6$M(3g1hUI%hF]Z/'bTc]-n"FgOK84]Yi`tlC]q]Qd5Q8Vb1rt]p"8hg$52[S-moL#^mZL>
%J65<BBEafX-a!3tWjgR6*GZa+FBpb7ao/?h@(5R'T==J00_@6%%DqK*86bV+1bpm.)&hIM79-`"\@FRc:gKiQE-KPu?q#-47p<7*
%c(W`Slr7MG^P`07q')AGLol$%L;H9-^,lV0(6qLCNN(mUF>8fXSuPTu2-1lUX4M>ZaLgSd2X5,,MoL-\bk//P:a=g;)M7*e^$B[R
%Wm>-!-JnXjRMApBS"?Q&@bt)u5jss_!VA#'K[dUZ-*X,#Kd3_Qq4E$6%rq'afTCZrrhf_EonReVNr74:`ir]4MX.`()#o:<T$ab&
%V*dA?0uaTV\:-)il!G:eqX$2D5M<KJ^\SMn^BdTd^HtZH^O/^.]p-;/qUNhlhkhLQIf0#th-]meY@#&U\bZ6mrV[6;GJF-#s7#=P
%kIWtH%sK*[Ien*Zjo0HcEd7V's4PE'5CEIle"?UU469%_F7]+;DdNAO[D^3A~>
%AI9_PrivateDataEnd
